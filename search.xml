<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>甬哥的订阅连接保活脚本，ChatGPT修改方案</title>
      <link href="/fws/yg-workers-keep/"/>
      <url>/fws/yg-workers-keep/</url>
      
        <content type="html"><![CDATA[<p>甬哥的订阅连接保活脚本，ChatGPT修改方案</p><p><a href="https://raw.githubusercontent.com/flower-wins/sb-nodejs/refs/heads/main/workers_keep.js">https://raw.githubusercontent.com/flower-wins/sb-nodejs/refs/heads/main/workers_keep.js</a></p><p>ChatGPT修改方案</p><h3 id="✅-方法一：从环境变量读取（适用于-Cloudflare-Worker）"><a href="#✅-方法一：从环境变量读取（适用于-Cloudflare-Worker）" class="headerlink" title="✅ 方法一：从环境变量读取（适用于 Cloudflare Worker）"></a>✅ 方法一：从环境变量读取（适用于 Cloudflare Worker）</h3><p>如果你在使用 Cloudflare Worker，可以通过环境变量来导入 URL 字符串：</p><h4 id="1-修改脚本如下："><a href="#1-修改脚本如下：" class="headerlink" title="1. 修改脚本如下："></a>1. 修改脚本如下：</h4><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="title function_">addEventListener</span>(<span class="string">&#x27;scheduled&#x27;</span>, <span class="function"><span class="params">event</span> =&gt;</span> event.<span class="title function_">waitUntil</span>(<span class="title function_">handleScheduled</span>()));</span><br><span class="line"></span><br><span class="line"><span class="comment">// 从环境变量中读取 URL 字符串</span></span><br><span class="line"><span class="keyword">const</span> <span class="variable constant_">TIMEOUT</span> = <span class="number">5000</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">async</span> <span class="keyword">function</span> <span class="title function_">fetchWithTimeout</span>(<span class="params">url</span>) &#123;</span><br><span class="line">  <span class="keyword">const</span> controller = <span class="keyword">new</span> <span class="title class_">AbortController</span>();</span><br><span class="line">  <span class="keyword">const</span> timeout = <span class="built_in">setTimeout</span>(<span class="function">() =&gt;</span> controller.<span class="title function_">abort</span>(), <span class="variable constant_">TIMEOUT</span>);</span><br><span class="line">  <span class="keyword">try</span> &#123;</span><br><span class="line">    <span class="keyword">await</span> <span class="title function_">fetch</span>(url, &#123; <span class="attr">signal</span>: controller.<span class="property">signal</span> &#125;);</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">`✅ 成功: <span class="subst">$&#123;url&#125;</span>`</span>);</span><br><span class="line">  &#125; <span class="keyword">catch</span> (error) &#123;</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">warn</span>(<span class="string">`❌ 访问失败: <span class="subst">$&#123;url&#125;</span>, 错误: <span class="subst">$&#123;error.message&#125;</span>`</span>);</span><br><span class="line">  &#125; <span class="keyword">finally</span> &#123;</span><br><span class="line">    <span class="built_in">clearTimeout</span>(timeout);</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">async</span> <span class="keyword">function</span> <span class="title function_">handleScheduled</span>(<span class="params">event</span>) &#123;</span><br><span class="line">  <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;⏳ 任务开始&#x27;</span>);</span><br><span class="line"></span><br><span class="line">  <span class="comment">// 从环境变量导入 URL 列表</span></span><br><span class="line">  <span class="keyword">const</span> urlString = <span class="variable constant_">URLS</span> || <span class="string">&#x27;&#x27;</span>;</span><br><span class="line">  <span class="keyword">const</span> urls = urlString.<span class="title function_">split</span>(<span class="regexp">/[\s,，]+/</span>).<span class="title function_">filter</span>(<span class="title class_">Boolean</span>);</span><br><span class="line"></span><br><span class="line">  <span class="keyword">await</span> <span class="title class_">Promise</span>.<span class="title function_">all</span>(urls.<span class="title function_">map</span>(fetchWithTimeout));</span><br><span class="line">  <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;📊 任务结束&#x27;</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h4 id="2-在-Cloudflare-Worker-的-Dashboard-设置变量："><a href="#2-在-Cloudflare-Worker-的-Dashboard-设置变量：" class="headerlink" title="2. 在 Cloudflare Worker 的 Dashboard 设置变量："></a>2. 在 Cloudflare Worker 的 Dashboard 设置变量：</h4><p>在 “Settings” &gt; “Variables” 中设置：</p><table><thead><tr><th>Name</th><th>Value</th></tr></thead><tbody><tr><td><code>URLS</code></td><td><code>https://example1.com https://example2.com</code></td></tr></tbody></table><hr><h3 id="✅-方法二：从-KV-或远程文件加载"><a href="#✅-方法二：从-KV-或远程文件加载" class="headerlink" title="✅ 方法二：从 KV 或远程文件加载"></a>✅ 方法二：从 KV 或远程文件加载</h3><p>如果 URL 是动态变更的，你可以将其放到 KV（Key-Value 存储）或从远程 JSON 文件中获取，例如：</p><h4 id="KV-示例（Worker-使用-KV-命名空间）："><a href="#KV-示例（Worker-使用-KV-命名空间）：" class="headerlink" title="KV 示例（Worker 使用 KV 命名空间）："></a>KV 示例（Worker 使用 KV 命名空间）：</h4><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> kvNamespace = <span class="variable constant_">MY_KV</span>; <span class="comment">// 在 Worker 绑定时指定</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">async</span> <span class="keyword">function</span> <span class="title function_">handleScheduled</span>(<span class="params"></span>) &#123;</span><br><span class="line">  <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;⏳ 任务开始&#x27;</span>);</span><br><span class="line"></span><br><span class="line">  <span class="keyword">const</span> urlString = <span class="keyword">await</span> kvNamespace.<span class="title function_">get</span>(<span class="string">&#x27;keepalive_urls&#x27;</span>) || <span class="string">&#x27;&#x27;</span>;</span><br><span class="line">  <span class="keyword">const</span> urls = urlString.<span class="title function_">split</span>(<span class="regexp">/[\s,，]+/</span>).<span class="title function_">filter</span>(<span class="title class_">Boolean</span>);</span><br><span class="line"></span><br><span class="line">  <span class="keyword">await</span> <span class="title class_">Promise</span>.<span class="title function_">all</span>(urls.<span class="title function_">map</span>(fetchWithTimeout));</span><br><span class="line">  <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;📊 任务结束&#x27;</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h4 id="设置-keepalive-urls-的值（在-Dashboard-或-API-中设置）："><a href="#设置-keepalive-urls-的值（在-Dashboard-或-API-中设置）：" class="headerlink" title="设置 keepalive_urls 的值（在 Dashboard 或 API 中设置）："></a>设置 <code>keepalive_urls</code> 的值（在 Dashboard 或 API 中设置）：</h4><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">https://a.com https://b.com https://c.com</span><br></pre></td></tr></table></figure><hr><h3 id="✅-方法三：从远程地址加载"><a href="#✅-方法三：从远程地址加载" class="headerlink" title="✅ 方法三：从远程地址加载"></a>✅ 方法三：从远程地址加载</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">async</span> <span class="keyword">function</span> <span class="title function_">loadUrls</span>(<span class="params"></span>) &#123;</span><br><span class="line">  <span class="keyword">try</span> &#123;</span><br><span class="line">    <span class="keyword">const</span> res = <span class="keyword">await</span> <span class="title function_">fetch</span>(<span class="string">&#x27;https://your-domain.com/urls.txt&#x27;</span>);</span><br><span class="line">    <span class="keyword">const</span> text = <span class="keyword">await</span> res.<span class="title function_">text</span>();</span><br><span class="line">    <span class="keyword">return</span> text.<span class="title function_">split</span>(<span class="regexp">/[\s,，]+/</span>).<span class="title function_">filter</span>(<span class="title class_">Boolean</span>);</span><br><span class="line">  &#125; <span class="keyword">catch</span> (e) &#123;</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">warn</span>(<span class="string">&#x27;❌ 无法加载远程 URL:&#x27;</span>, e.<span class="property">message</span>);</span><br><span class="line">    <span class="keyword">return</span> [];</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">async</span> <span class="keyword">function</span> <span class="title function_">handleScheduled</span>(<span class="params"></span>) &#123;</span><br><span class="line">  <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;⏳ 任务开始&#x27;</span>);</span><br><span class="line"></span><br><span class="line">  <span class="keyword">const</span> urls = <span class="keyword">await</span> <span class="title function_">loadUrls</span>();</span><br><span class="line">  <span class="keyword">await</span> <span class="title class_">Promise</span>.<span class="title function_">all</span>(urls.<span class="title function_">map</span>(fetchWithTimeout));</span><br><span class="line"></span><br><span class="line">  <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;📊 任务结束&#x27;</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><hr>]]></content>
      
      
      
        <tags>
            
            <tag> 保活 </tag>
            
            <tag> Cloudflare Worker </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>NO.2美化Hexo博客，主题安装配置&quot;美化Hexo博客，主题安装配置</title>
      <link href="/fws/HexoBlogNo2/"/>
      <url>/fws/HexoBlogNo2/</url>
      
        <content type="html"><![CDATA[<h2 id="美化Hexo博客，主题安装配置”美化Hexo博客，主题安装配置"><a href="#美化Hexo博客，主题安装配置”美化Hexo博客，主题安装配置" class="headerlink" title="美化Hexo博客，主题安装配置”美化Hexo博客，主题安装配置"></a>美化Hexo博客，主题安装配置”美化Hexo博客，主题安装配置</h2><p>这期教程演示将使用一款基于<a href="https://github.com/jerryc127/hexo-theme-butterfly">hexo-theme-butterfly</a>修改的主題-<strong>安知鱼</strong>，安知鱼是一个简洁、美丽的静态hexo主题</p><p><strong>项目地址</strong>：<a href="https://github.com/anzhiyu-c/hexo-theme-anzhiyu">https://github.com/anzhiyu-c/hexo-theme-anzhiyu</a><br><strong>官方文档</strong>：<a href="https://docs.anheyu.com/initall.html">https://docs.anheyu.com/initall.html</a></p><hr><h2 id="1-安装主题"><a href="#1-安装主题" class="headerlink" title="1.安装主题"></a>1.安装主题</h2><h3 id="1-1-Git-安裝"><a href="#1-1-Git-安裝" class="headerlink" title="1.1. Git 安裝"></a>1.1. Git 安裝</h3><p>在博客根目录里安装最新版主题</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git clone -b main https://github.com/anzhiyu-c/hexo-theme-anzhiyu.git themes/anzhiyu</span><br></pre></td></tr></table></figure><p>第一次使用需要安装 pug 以及 stylus 的渲染器</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install hexo-renderer-pug hexo-renderer-stylus --save</span><br></pre></td></tr></table></figure><h3 id="1-2-应用主题"><a href="#1-2-应用主题" class="headerlink" title="1.2. 应用主题"></a>1.2. 应用主题</h3><p>修改 hexo 配置文件<code>_config.yml</code>，把主题改为<code>anzhiyu</code></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">theme: anzhiyu</span><br></pre></td></tr></table></figure><h3 id="1-3-覆盖配置"><a href="#1-3-覆盖配置" class="headerlink" title="1.3. 覆盖配置"></a>1.3. 覆盖配置</h3><p>覆盖配置可以使<code>主题配置</code>放置在 anzhiyu 目录之外，避免在更新主题时丢失自定义的配置。</p><p>如果你是<strong>linux系统</strong>就执行以下命令</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cp -rf ./themes/anzhiyu/\_config.yml ./\_config.anzhiyu.yml</span><br></pre></td></tr></table></figure><p>如果你是<strong>windows系统</strong>就请手动将<code>/themes/anzhiyu/_config.yml</code>复制到根目录下并重命名为<code>_config.anzhiyu.yml</code>即可。</p><p>以后如果修改任何主题配置，都只需修改 <code>_config.anzhiyu.yml</code> 的配置即可。</p><p>注意：</p><ul><li>只要存在于 <code>_config.anzhiyu.yml</code> 的配置都是高优先级，修改原 <code>_config.yml</code> 是无效的。</li><li>每次更新主题可能存在配置变更，请注意更新说明，可能需要手动对 <code>_config.anzhiyu.yml</code> 同步修改。</li><li>想查看覆盖配置有没有生效，可以通过 <code>hexo g --debug</code> 查看命令行输出。</li><li>如果想将某些配置覆盖为空，注意不要把主键删掉，不然是无法覆盖的</li></ul><h3 id="1-4-配置主题与主站配置文件"><a href="#1-4-配置主题与主站配置文件" class="headerlink" title="1.4. 配置主题与主站配置文件"></a>1.4. 配置主题与主站配置文件</h3><p>到这一步主题部署就完成了，<strong>就是这么简单！！！</strong></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"> //本地预览  </span><br><span class="line">hexo cl; hexo s  </span><br><span class="line"></span><br><span class="line">//推送更新上线  </span><br><span class="line">hexo cl; hexo g; hexo d</span><br></pre></td></tr></table></figure><h3 id="1-5-生成标签页和分类页"><a href="#1-5-生成标签页和分类页" class="headerlink" title="1.5. 生成标签页和分类页"></a>1.5. 生成标签页和分类页</h3><p>执行以下命令生成标签页</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo new page tags</span><br></pre></td></tr></table></figure><p>找到 <code>source/tags/index.md</code> 这个文件，修改添加 <code>type: &quot;tags&quot;</code></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">---  </span><br><span class="line">title: 标签  </span><br><span class="line">date: 2024-07-05 03:36:02  </span><br><span class="line">type: &quot;tags&quot;  </span><br><span class="line">comments: false  </span><br><span class="line">top\_img: false  </span><br><span class="line">---</span><br></pre></td></tr></table></figure><p>执行以下命令生成分类页</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo new page categories</span><br></pre></td></tr></table></figure><p>找到 <code>source/categories/index.md</code> 这个文件，修改添加 <code>type: &quot;categories&quot;</code></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">---  </span><br><span class="line">title: 分类  </span><br><span class="line">date: 2024-07-05 03:36:48  </span><br><span class="line">aside: false  </span><br><span class="line">top\_img: false  </span><br><span class="line">type: &quot;categories&quot;  </span><br><span class="line">--- </span><br></pre></td></tr></table></figure><p>剩下的工作就是配置<code>_config.yml</code>和<code>_config.anzhiyu.yml</code>文件，修改博客参数。</p><hr><h2 id="2-配置文章模版"><a href="#2-配置文章模版" class="headerlink" title="2. 配置文章模版"></a>2. 配置文章模版</h2><p><code>/scaffolds</code>目录下有几个模版文件，其中</p><ul><li><strong>post.md</strong>：新建博文模版</li><li><strong>page.md</strong>：新建标签页模版</li></ul><h3 id="post-md模版，仅供参考"><a href="#post-md模版，仅供参考" class="headerlink" title="post.md模版，仅供参考"></a><strong>post.md</strong>模版，仅供参考</h3><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">---  </span></span><br><span class="line"><span class="attr">title:</span> &#123;&#123; <span class="string">title</span> &#125;&#125;   </span><br><span class="line"><span class="attr">date:</span> &#123;&#123; <span class="string">date</span> &#125;&#125;   </span><br><span class="line"><span class="attr">updated:</span>   </span><br><span class="line"><span class="attr">tags:</span>   </span><br><span class="line"><span class="attr">categories:</span>   </span><br><span class="line"><span class="attr">keywords:</span>   </span><br><span class="line"><span class="attr">description:</span>   </span><br><span class="line"><span class="attr">top:</span>   </span><br><span class="line"><span class="string">top\_img:</span>   </span><br><span class="line"><span class="attr">comments:</span>   </span><br><span class="line"><span class="attr">cover:</span> <span class="string">https://img.090227.xyz/file/ae62475a131f3734a201c.png</span>   </span><br><span class="line"><span class="attr">toc:</span>   </span><br><span class="line"><span class="string">toc\_number:</span>   </span><br><span class="line"><span class="string">toc\_style\_simple:</span>   </span><br><span class="line"><span class="attr">copyright:</span>   </span><br><span class="line"><span class="string">copyright\_author:</span>   </span><br><span class="line"><span class="string">copyright\_author\_href:</span>   </span><br><span class="line"><span class="string">copyright\_url:</span>   </span><br><span class="line"><span class="string">copyright\_info:</span>   </span><br><span class="line"><span class="attr">mathjax:</span>   </span><br><span class="line"><span class="attr">katex:</span>   </span><br><span class="line"><span class="attr">aplayer:</span>   </span><br><span class="line"><span class="string">highlight\_shrink:</span>   </span><br><span class="line"><span class="attr">aside:</span>   </span><br><span class="line"><span class="string">swiper\_index:</span> <span class="number">10</span>   </span><br><span class="line"><span class="string">top\_group\_index:</span> <span class="number">10</span>   </span><br><span class="line"><span class="attr">ai:</span>   </span><br><span class="line"><span class="attr">background:</span> <span class="string">&quot;#fff&quot;</span>   </span><br><span class="line"><span class="meta">---  </span></span><br><span class="line"><span class="meta"></span></span><br><span class="line"><span class="string">&lt;div</span> <span class="string">class=&quot;video-container&quot;&gt;</span>  </span><br><span class="line"><span class="string">\[up主专用，视频内嵌代码贴在这\]</span>  </span><br><span class="line"><span class="string">&lt;/div&gt;</span>  </span><br><span class="line"></span><br><span class="line"><span class="string">&lt;style&gt;</span>  </span><br><span class="line"><span class="string">.video-container</span> &#123;  </span><br><span class="line">    <span class="attr">position:</span> <span class="string">relative;</span>  </span><br><span class="line">    <span class="attr">width:</span> <span class="number">100</span><span class="string">%;</span>  </span><br><span class="line">    <span class="attr">padding-top:</span> <span class="number">56.25</span><span class="string">%;</span> <span class="string">/\*</span> <span class="number">16</span><span class="string">:9</span> <span class="string">aspect</span> <span class="string">ratio</span> <span class="string">(height/width</span> <span class="string">\=</span> <span class="number">9</span><span class="string">/16</span> <span class="string">\*</span> <span class="number">100</span><span class="string">%)</span> <span class="string">\*/</span>  &#125;  </span><br><span class="line"></span><br><span class="line"><span class="string">.video-container</span> <span class="string">iframe</span> &#123;  </span><br><span class="line"><span class="string">​</span>    <span class="attr">position:</span> <span class="string">absolute;</span>  </span><br><span class="line"><span class="string">​</span>    <span class="attr">top:</span> <span class="number">0</span><span class="string">;</span>  </span><br><span class="line"><span class="string">​</span>    <span class="attr">left:</span> <span class="number">0</span><span class="string">;</span>  </span><br><span class="line"><span class="string">​</span>    <span class="attr">width:</span> <span class="number">100</span><span class="string">%;</span>  </span><br><span class="line"><span class="string">​</span>    <span class="attr">height:</span> <span class="number">100</span><span class="string">%;</span>  &#125;  </span><br><span class="line"><span class="string">&lt;/style&gt;</span> </span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="page-md模版，仅供参考"><a href="#page-md模版，仅供参考" class="headerlink" title="page.md模版，仅供参考"></a><strong>page.md</strong>模版，仅供参考</h3><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">---  </span></span><br><span class="line"><span class="attr">title:</span> &#123;&#123; <span class="string">title</span> &#125;&#125;   </span><br><span class="line"><span class="attr">date:</span> &#123;&#123; <span class="string">date</span> &#125;&#125;   </span><br><span class="line"><span class="attr">type:</span>   </span><br><span class="line"><span class="attr">updated:</span>   </span><br><span class="line"><span class="attr">comments:</span>   </span><br><span class="line"><span class="attr">description:</span>   </span><br><span class="line"><span class="attr">keywords:</span>   </span><br><span class="line"><span class="string">top\_img:</span> <span class="string">https://img.090227.xyz/file/ae62475a131f3734a201c.png</span>   </span><br><span class="line"><span class="attr">mathjax:</span>   </span><br><span class="line"><span class="attr">katex:</span>   </span><br><span class="line"><span class="attr">aside:</span>   </span><br><span class="line"><span class="attr">aplayer:</span>   </span><br><span class="line"><span class="string">highlight\_shrink:</span>   </span><br><span class="line"><span class="string">top\_single\_background:</span>   </span><br><span class="line"><span class="meta">--- </span></span><br><span class="line"><span class="meta"></span></span><br></pre></td></tr></table></figure><hr><h2 id="更多功能"><a href="#更多功能" class="headerlink" title="更多功能"></a>更多功能</h2><h2 id="新建文章"><a href="#新建文章" class="headerlink" title="新建文章"></a>新建文章</h2><h3 id="新建博文命令"><a href="#新建博文命令" class="headerlink" title="新建博文命令"></a>新建博文命令</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo new 这是一篇新的博文</span><br></pre></td></tr></table></figure><h3 id="新建标签页命令"><a href="#新建标签页命令" class="headerlink" title="新建标签页命令"></a>新建标签页命令</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo new page 新建的标签页</span><br></pre></td></tr></table></figure><hr><h2 id="文章置顶"><a href="#文章置顶" class="headerlink" title="文章置顶"></a>文章置顶</h2><h3 id="安装插件"><a href="#安装插件" class="headerlink" title="安装插件"></a>安装插件</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install hexo-generator-topindex --save</span><br></pre></td></tr></table></figure><h3 id="设置置顶"><a href="#设置置顶" class="headerlink" title="设置置顶"></a>设置置顶</h3><p>给需要置顶的文章加入top参数，如下：</p><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">---  </span></span><br><span class="line"><span class="attr">title:</span> <span class="string">每天一个linux命令</span>  </span><br><span class="line"><span class="attr">date:</span> <span class="number">2017-01-23 11:41:48</span>  </span><br><span class="line"><span class="attr">top:</span> <span class="number">1</span>  </span><br><span class="line"><span class="attr">categories:</span>  </span><br><span class="line"><span class="bullet">-</span> <span class="string">运维</span>  </span><br><span class="line"><span class="attr">tags:</span>  </span><br><span class="line"><span class="bullet">-</span> <span class="string">linux命令</span>  </span><br><span class="line"><span class="meta">--- </span></span><br></pre></td></tr></table></figure><p>如果存在多个置顶文章，top后的参数越大，越靠前。</p><hr><h2 id="开启本地搜索"><a href="#开启本地搜索" class="headerlink" title="开启本地搜索"></a>开启本地搜索</h2><h3 id="安装插件-1"><a href="#安装插件-1" class="headerlink" title="安装插件"></a>安装插件</h3><p>你需要安装 <a href="https://github.com/wzpan/hexo-generator-search">hexo-generator-search</a>，根据它的文档去做相应配置</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install hexo-generator-search --save</span><br></pre></td></tr></table></figure><h3 id="设置主题配置文件"><a href="#设置主题配置文件" class="headerlink" title="设置主题配置文件"></a>设置主题配置文件</h3><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">local_search:</span></span><br><span class="line">  <span class="attr">enable:</span> <span class="literal">true</span></span><br><span class="line">  <span class="attr">preload:</span> <span class="literal">false</span></span><br><span class="line">  <span class="attr">CDN:</span> </span><br></pre></td></tr></table></figure><table><thead><tr><th>参数</th><th>解释</th></tr></thead><tbody><tr><td>enable</td><td>是否开启本地搜索</td></tr><tr><td>preload</td><td>预加载，开启后，进入网页后会自动加载搜索文件。关闭时，只有点击搜索按钮后，才会加载搜索文件</td></tr><tr><td>CDN</td><td>搜索文件的 CDN 地址（默认使用的本地链接）</td></tr></tbody></table><hr><h2 id="添加任意文件"><a href="#添加任意文件" class="headerlink" title="添加任意文件"></a>添加任意文件</h2><p>例如当我们想在网站根目录添加<code>ads.txt</code>文件，来通过站长验证时，我们只需要在<code>/source</code>文件夹下放置该文件即可。</p><hr><h2 id="参考资料"><a href="#参考资料" class="headerlink" title="参考资料"></a>参考资料</h2><p><a href="https://docs.anheyu.com/initall.html">https://docs.anheyu.com/initall.html</a><br><a href="https://www.fomal.cc/posts/4aa2d85f.html">https://www.fomal.cc/posts/4aa2d85f.html</a><br><a href="https://github.com/anzhiyu-c/hexo-theme-anzhiyu/blob/dev/README.md?plain=1">https://github.com/anzhiyu-c/hexo-theme-anzhiyu/blob/dev/README.md?plain=1</a><br>[<a href="https://blog.csdn.net/COCO56/article/details/103840966]">https://blog.csdn.net/COCO56/article/details/103840966]</a></p>]]></content>
      
      
      
        <tags>
            
            <tag> Hexo </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>NO.1搭建Hexo博客，快速简洁高效，零成本搭建个人博客：Hexo + GitHub Pages + Cloudflare Pages 完整指南</title>
      <link href="/fws/HexoBlogNo1/"/>
      <url>/fws/HexoBlogNo1/</url>
      
        <content type="html"><![CDATA[<h2 id="搭建Hexo博客，快速简洁高效，零成本搭建个人博客：Hexo-GitHub-Pages-Cloudflare-Pages-完整指南"><a href="#搭建Hexo博客，快速简洁高效，零成本搭建个人博客：Hexo-GitHub-Pages-Cloudflare-Pages-完整指南" class="headerlink" title="搭建Hexo博客，快速简洁高效，零成本搭建个人博客：Hexo + GitHub Pages + Cloudflare Pages 完整指南"></a>搭建Hexo博客，快速简洁高效，零成本搭建个人博客：Hexo + GitHub Pages + Cloudflare Pages 完整指南</h2><p>本文详细介绍了如何使用Hexo框架搭建一个个人博客，并将其部署到GitHub Pages和Cloudflare Pages上。主要内容包括：</p><ul><li>环境准备：安装Node.js和Git</li><li>配置Git和GitHub：设置SSH密钥，创建GitHub仓库</li><li>初始化Hexo项目：安装Hexo，创建新博客</li><li>部署到GitHub Pages：配置部署设置，推送静态文件</li><li>部署到Cloudflare Pages：连接GitHub仓库，自动部署</li><li>基本使用方法：创建新文章，本地预览，发布更新</li></ul><p>这个教程适合那些想要快速搭建个人博客，但又不想花费太多成本的人。通过使用Hexo、GitHub和Cloudflare的免费服务，您可以轻松创建一个高效、简洁的博客网站。</p><hr><h2 id="1-事前准备"><a href="#1-事前准备" class="headerlink" title="1.事前准备"></a>1.事前准备</h2><ol><li>域名（<strong>非必须</strong>，你也可以使用免费域名，或者<code>GitHub.io</code>或<code>Pages.dev</code>分配的域名也可以）</li><li><a href="https://github.com/">GitHub</a>（<strong>必须</strong>，你需要注册一个GitHub帐号）</li><li><a href="https://dash.cloudflare.com/">Cloudflare</a>（<strong>非必须</strong>，你需要注册一个Cloudflare帐号，这样你就可以将博客部署在CF的CDN里加速，但是你也可以直接使用<code>GitHub.io</code>分配的域名）</li></ol><hr><h2 id="2-软件支持"><a href="#2-软件支持" class="headerlink" title="2.软件支持"></a>2.软件支持</h2><ol><li><a href="https://fastly.blog.cmliussss.com/p/HexoBlogNo1/#2-1-%E5%AE%89%E8%A3%85-Node">Node</a>（<strong>必须</strong>）</li><li><a href="https://fastly.blog.cmliussss.com/p/HexoBlogNo1/#2-2-%E5%AE%89%E8%A3%85-Git">Git</a>（<strong>必须</strong>）</li><li><a href="https://code.visualstudio.com/">VSCode</a>（<strong>非必须</strong>，这是一款轻量型的代码编辑器，可以帮助你养成一个很好的编程习惯）</li></ol><h3 id="2-1-安装-Node"><a href="#2-1-安装-Node" class="headerlink" title="2.1.安装 Node"></a>2.1.安装 Node</h3><ol><li><p>打开Node官网，下载和自己系统相配的Node的安装程序，否则会出现安装问题。下载地址：<a href="https://nodejs.org/en">https://nodejs.org/en</a></p></li><li><p>下载后安装，安装的目录可以使用默认目录<code>C:/Program Files/nodejs/</code></p></li><li><p>安装完成后，检查是否安装成功。在键盘按下win + R键，输入CMD，然后回车，打开CMD窗口，执行<code>node -v</code>命令，看到版本信息，则说明安装成功。<br><a href="https://img.090227.xyz/file/5ca2f549a4489064d3444.jpg"><img src="https://img.090227.xyz/file/5ca2f549a4489064d3444.jpg" alt="2.1.3.安装 Node"></a></p></li><li><p>修改npm源。npm下载各种模块，默认是从国处服务器下载，速度较慢，建议配置成华为云镜像源。打开CMD窗口，运行如下命令:</p><p>‘’’npm config set registry <a href="https://mirrors.huaweicloud.com/repository/npm/">https://mirrors.huaweicloud.com/repository/npm/</a>‘’’</p></li></ol><h3 id="2-2-安装-Git"><a href="#2-2-安装-Git" class="headerlink" title="2.2.安装 Git"></a>2.2.安装 Git</h3><ol><li>进入官网下载适合你当前系统的 Git：<a href="https://git-scm.com/downloads">https://git-scm.com/downloads</a><br><a href="https://img.090227.xyz/file/14b9fdf14c49320e531fb.jpg"><img src="https://img.090227.xyz/file/14b9fdf14c49320e531fb.jpg" alt="2.2.1.安装 Git"></a></li><li>下载后傻瓜式安装Git即可，安装的目录最好使用默认目录<code>C:/Program Files/Git</code></li><li>点击电脑左下角开始即可看见<code>Git CMD</code>、<code>Git Bash</code>、<code>Git GUI</code>。<ul><li><code>Git CMD</code> 是windows 命令行的指令风格</li><li><code>Git Bash</code> 是linux系统的指令风格（建议使用）</li><li><code>Git GUI</code>是图形化界面（新手学习不建议使用）</li></ul></li></ol><hr><h2 id="3-配置-Git-密钥并连接至-Github"><a href="#3-配置-Git-密钥并连接至-Github" class="headerlink" title="3.配置 Git 密钥并连接至 Github"></a>3.配置 Git 密钥并连接至 Github</h2><p>常用 Git 命令</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">git config -l  //查看所有配置  </span><br><span class="line">git config --system --list //查看系统配置  </span><br><span class="line">git config --global --list //查看用户（全局）配置</span><br></pre></td></tr></table></figure><p><a href="https://img.090227.xyz/file/f403664b22ad3488a5fb4.jpg"><img src="https://img.090227.xyz/file/f403664b22ad3488a5fb4.jpg" alt="启动Git"></a></p><h3 id="3-1-配置用户名和邮箱"><a href="#3-1-配置用户名和邮箱" class="headerlink" title="3.1. 配置用户名和邮箱"></a>3.1. 配置用户名和邮箱</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">git config --global user.name &quot;你的用户名&quot;  </span><br><span class="line">git config --global user.email &quot;你的邮箱&quot;</span><br></pre></td></tr></table></figure><p>通过<code>git config -l</code> 检查是否配置成功。<br><a href="https://img.090227.xyz/file/67dca39142021e2214e2b.jpg"><img src="https://img.090227.xyz/file/67dca39142021e2214e2b.jpg" alt="3.1. 配置用户名和邮箱"></a></p><h3 id="3-2-配置公钥连接Github"><a href="#3-2-配置公钥连接Github" class="headerlink" title="3.2. 配置公钥连接Github"></a>3.2. 配置公钥连接Github</h3><ol><li><p>执行以下命令生成ssh公钥，此公钥用于你的计算机连接Github</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ssh-keygen -t rsa -C &quot;你的邮箱&quot;</span><br></pre></td></tr></table></figure><p>提示<code>Enter file in which to save the key</code>直接<strong>一路回车</strong>即可，新手小白不推荐设置密钥<br><a href="https://img.090227.xyz/file/45d70737c64caeb4393ad.jpg"><img src="https://img.090227.xyz/file/45d70737c64caeb4393ad.jpg" alt="3.2.1.1"></a><br>之后打开C盘下用户文件夹下的.ssh的文件夹，会看到以下文件</p></li><li><p>将 SSH KEY 配置到 GitHub<br>进入github，点击右上角头像 选择<code>settings</code>，进入设置页后选择 <code>SSH and GPG keys</code>，名字随便起，公钥填到<code>Key</code>那一栏。<br><a href="https://img.090227.xyz/file/75fc281237bfc6751a295.jpg"><img src="https://img.090227.xyz/file/75fc281237bfc6751a295.jpg" alt="3.2.2.1"></a><br><a href="https://img.090227.xyz/file/993edae3bbca9489dc156.jpg"><img src="https://img.090227.xyz/file/993edae3bbca9489dc156.jpg" alt="3.2.2.2"></a><br><a href="https://img.090227.xyz/file/fa8a7628c285e6be5c0a4.png"><img src="https://img.090227.xyz/file/fa8a7628c285e6be5c0a4.png" alt="3.2.2.3"></a><br><a href="https://img.090227.xyz/file/f3fa79cf3d639ef2d5bcb.png"><img src="https://img.090227.xyz/file/f3fa79cf3d639ef2d5bcb.png" alt="3.2.2.4"></a></p></li><li><p>测试连接，输入以下命令</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ssh -T git@github.com</span><br></pre></td></tr></table></figure><p>第一次连接会提示<code>Are you sure you want to continue connecting (yes/no/[fingerprint])?</code>，输入<code>yes</code>即可<br><a href="https://img.090227.xyz/file/faa0077eeab8c82f1de9e.png"><img src="https://img.090227.xyz/file/faa0077eeab8c82f1de9e.png" alt="3.2.3.1"></a><br>出现连接到账户的信息，说明已经大功告成，至此完成了环境准备工作。<br><a href="https://img.090227.xyz/file/faa0077eeab8c82f1de9e.png"><img src="https://img.090227.xyz/file/faa0077eeab8c82f1de9e.png" alt="3.2.3.2"></a></p></li></ol><h3 id="3-3-创建GitHub-io仓库"><a href="#3-3-创建GitHub-io仓库" class="headerlink" title="3.3. 创建GitHub.io仓库"></a>3.3. 创建GitHub.io仓库</h3><ol><li>点击右上角的<code>+</code>按钮，选择<strong>New repository</strong>，创建一个<code>&lt;用户名&gt;.github.io</code>的仓库。</li><li>仓库名字的格式必须为：<code>&lt;用户名&gt;.github.io</code> (注意：前缀必须为用户名，此为预览博客需要，后期可修改仓库名)</li><li>可见性必须选择 <code>Public</code> 方便第一次部署检查问题，点击 <strong>Creat repository</strong> 进行创建即可<br><a href="https://img.090227.xyz/file/3d9274644460cd1ffeb26.png"><img src="https://img.090227.xyz/file/3d9274644460cd1ffeb26.png" alt="3.3. 创建GitHub.io仓库"></a></li></ol><hr><h2 id="4-初始化-Hexo-博客"><a href="#4-初始化-Hexo-博客" class="headerlink" title="4.初始化 Hexo 博客"></a>4.初始化 Hexo 博客</h2><ol><li><p>创建一个文件夹来保存博客源码（我这里选的路径为<code>D:/Hexo-Blog</code>），在文件夹内右键鼠标，选择<code>Open Git Bash here</code><br><a href="https://img.090227.xyz/file/f78e04406dc803d610538.png"><img src="https://img.090227.xyz/file/f78e04406dc803d610538.png" alt="4.1"></a></p></li><li><p>在<code>Git BASH</code>输入如下命令安装 Hexo</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install -g hexo-cli &amp;&amp; hexo -v</span><br></pre></td></tr></table></figure><p><a href="https://img.090227.xyz/file/808bff9b7ab5b13fcd200.png"><img src="https://img.090227.xyz/file/808bff9b7ab5b13fcd200.png" alt="4.2"></a></p></li><li><p>安装完后输入<code>hexo -v</code>验证是否安装成功。<br><a href="https://img.090227.xyz/file/17349517f78516f7ac8ff.png"><img src="https://img.090227.xyz/file/17349517f78516f7ac8ff.png" alt="4.3"></a></p></li><li><p>初始化 Hexo 项目安装相关依赖。</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">hexo init blog-demo  </span><br><span class="line">cd blog-demo  </span><br><span class="line">npm i</span><br></pre></td></tr></table></figure><p><a href="https://img.090227.xyz/file/1c130d7beed537111d448.png"><img src="https://img.090227.xyz/file/1c130d7beed537111d448.png" alt="4.4"></a></p></li><li><p>初始化项目后，<code>blog-demo</code>有如下结构：<br><a href="https://img.090227.xyz/file/74128294708705e22e188.png"><img src="https://img.090227.xyz/file/74128294708705e22e188.png" alt="4.5"></a></p></li></ol><ul><li><strong>node_modules</strong>：依赖包</li><li><strong>scaffolds</strong>：生成文章的一些模板</li><li><strong>source</strong>：用来存放你的文章</li><li><strong>themes</strong>：主题</li><li><strong>.npmignore</strong>：发布时忽略的文件（可忽略）</li><li><strong>_config.landscape.yml</strong>：主题的配置文件</li><li><strong>config.yml</strong>：博客的配置文件</li><li><strong>package.json</strong>：项目名称、描述、版本、运行和开发等信</li></ul><ol><li>输入<code>hexo cl &amp;&amp; hexo s</code>启动项目<br><a href="https://img.090227.xyz/file/e8c930919bb49270bde5a.png"><img src="https://img.090227.xyz/file/e8c930919bb49270bde5a.png" alt="4.6"></a></li><li>打开浏览器，输入地址：<a href="http://localhost:4000/">http://localhost:4000/</a> ，看到下面的效果，说明你的博客已经构建成功了。<br><a href="https://img.090227.xyz/file/e285037815104f68f4514.jpg"><img src="https://img.090227.xyz/file/e285037815104f68f4514.jpg" alt="4.7"></a></li></ol><hr><h2 id="5-将静态博客挂载到-GitHub-Pages"><a href="#5-将静态博客挂载到-GitHub-Pages" class="headerlink" title="5.将静态博客挂载到 GitHub Pages"></a>5.将静态博客挂载到 GitHub Pages</h2><ol><li><p>安装 hexo-deployer-git</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install hexo-deployer-git --save</span><br></pre></td></tr></table></figure></li><li><p>修改 <code>_config.yml</code> 文件<br>在blog-demo目录下的_config.yml，就是整个Hexo框架的配置文件了。可以在里面修改大部分的配置。详细可参考官方的<a href="https://hexo.io/zh-cn/docs/configuration">配置描述</a>。<br>修改最后一行的配置，将repository修改为你自己的github项目地址即可，还有分支要改为<code>main</code>代表主分支（注意缩进）。</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">deploy:</span>  </span><br><span class="line">  <span class="attr">type:</span> <span class="string">git</span>  </span><br><span class="line">  <span class="attr">repository:</span> <span class="string">git@github.com:cmliussss2024/cmliussss2024.github.io.git</span>  </span><br><span class="line">  <span class="attr">branch:</span> <span class="string">main</span></span><br></pre></td></tr></table></figure></li><li><p>修改好配置后，运行如下命令，将代码部署到 GitHub（Hexo三连）。</p></li></ol><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">Git BASH终端  </span><br><span class="line">&#x27;&#x27;&#x27;hexo clean &amp;&amp; hexo generate &amp;&amp; hexo deploy&#x27;&#x27;&#x27;    </span><br><span class="line"></span><br><span class="line">// 或者  </span><br><span class="line"></span><br><span class="line">// VSCODE终端  </span><br><span class="line">&#x27;&#x27;&#x27;hexo cl; hexo g; hexo d&#x27;&#x27;&#x27;</span><br></pre></td></tr></table></figure><ul><li><strong>hexo clean</strong>：删除之前生成的文件，可以用<code>hexo cl</code>缩写。</li><li><strong>hexo generate</strong>：生成静态文章，可以用<code>hexo g</code>缩写</li><li><strong>hexo deploy</strong>：部署文章，可以用<code>hexo d</code>缩写<br><a href="https://img.090227.xyz/file/18b052b831896bf00cfc4.jpg"><img src="https://img.090227.xyz/file/18b052b831896bf00cfc4.jpg" alt="5.3.1"></a><br><em>注意：deploy时可能要你输入 username 和 password。</em></li></ul><p>如果出现<strong>Deploy done</strong>，则说明部署成功了。<br><a href="https://img.090227.xyz/file/93a5d61648491a5278556.jpg"><img src="https://img.090227.xyz/file/93a5d61648491a5278556.jpg" alt="5.3.2"></a><br>稍等两分钟，打开浏览器访问：<a href="https://cmliussss2024.github.io/">https://cmliussss2024.github.io</a> ，这时候我们就可以看到博客内容了。<br><a href="https://img.090227.xyz/file/1239b1270fcdc8bd896a6.jpg"><img src="https://img.090227.xyz/file/1239b1270fcdc8bd896a6.jpg" alt="5.3.3"></a></p><hr><h2 id="6-将静态博客挂载到-Cloudflare-Pages"><a href="#6-将静态博客挂载到-Cloudflare-Pages" class="headerlink" title="6.将静态博客挂载到 Cloudflare Pages"></a>6.将静态博客挂载到 Cloudflare Pages</h2><ol><li>在 <code>Workers 和 Pages</code> 中选择 <code>Pages</code> 的 <code>连接到 Git</code><br><a href="https://img.090227.xyz/file/b3eae4e84c4c7c31af665.jpg"><img src="https://img.090227.xyz/file/b3eae4e84c4c7c31af665.jpg" alt="6.1.1"></a><br><a href="https://img.090227.xyz/file/440581264cb313ed77e75.jpg"><img src="https://img.090227.xyz/file/440581264cb313ed77e75.jpg" alt="6.1.2"></a></li><li>然后登录你Blog仓库对应的GitHub帐号<br><a href="https://img.090227.xyz/file/733c0a673bb66670b7ca1.jpg"><img src="https://img.090227.xyz/file/733c0a673bb66670b7ca1.jpg" alt="6.2.1"></a><br><a href="https://img.090227.xyz/file/8fb282e32991167a98f57.jpg"><img src="https://img.090227.xyz/file/8fb282e32991167a98f57.jpg" alt="6.2.2"></a></li><li>点击<code>保存并部署</code>后等待部署完成即可。<br><a href="https://img.090227.xyz/file/60cca5e2200e260327227.jpg"><img src="https://img.090227.xyz/file/60cca5e2200e260327227.jpg" alt="6.3"></a></li><li>提示<code>成功！您的项目已部署到以下区域：全球</code>后，浏览器访问：<a href="https://cmliussss2024-github-io.pages.dev/">https://cmliussss2024-github-io.pages.dev</a> ，这时候我们就可以看到博客内容了。<br><a href="https://img.090227.xyz/file/0f2a697243725c6fa2ab8.jpg"><img src="https://img.090227.xyz/file/0f2a697243725c6fa2ab8.jpg" alt="6.4"></a><br><em>这时你也就可以将你的<code>&lt;用户名&gt;.github.io</code>的仓库设置为<code>Private</code>私库了</em></li><li>如果你有自己的域名，你可以在这里绑定你自己的自定义域，即可<br><a href="https://img.090227.xyz/file/2c9ce4b9b67c09376bb91.jpg"><img src="https://img.090227.xyz/file/2c9ce4b9b67c09376bb91.jpg" alt="6.5"></a></li></ol><hr><h2 id="如何使用"><a href="#如何使用" class="headerlink" title="如何使用"></a>如何使用</h2><h2 id="新建一篇博文"><a href="#新建一篇博文" class="headerlink" title="新建一篇博文"></a>新建一篇博文</h2><p>‘exo new 这是一篇新的博文’</p><p>然后用文本编辑器去编辑<code>_posts/这是一篇新的博文.md</code>里的内容即可，注意要使用<strong>Markdown</strong>格式书写。<br>详细使用方法可以查阅 <a href="https://hexo.io/zh-cn/docs/writing">https://hexo.io/zh-cn/docs/writing</a></p><h2 id="编辑完文章保存后可以使用如下命令，生成本地页面-http-localhost-4000-，进行预览"><a href="#编辑完文章保存后可以使用如下命令，生成本地页面-http-localhost-4000-，进行预览" class="headerlink" title="编辑完文章保存后可以使用如下命令，生成本地页面 http://localhost:4000/ ，进行预览"></a>编辑完文章保存后可以使用如下命令，生成本地页面 <a href="http://localhost:4000/">http://localhost:4000/</a> ，进行预览</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">// Git BASH终端  </span><br><span class="line">hexo cl &amp;&amp; hexo s  </span><br><span class="line"></span><br><span class="line">// 或者  </span><br><span class="line"></span><br><span class="line">// VSCODE终端  </span><br><span class="line">hexo cl; hexo s</span><br></pre></td></tr></table></figure><h2 id="确认无误后使用以下命令，将本地文章推送至GitHub仓库即可"><a href="#确认无误后使用以下命令，将本地文章推送至GitHub仓库即可" class="headerlink" title="确认无误后使用以下命令，将本地文章推送至GitHub仓库即可"></a>确认无误后使用以下命令，将本地文章推送至GitHub仓库即可</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">// Git BASH终端  </span><br><span class="line"></span><br><span class="line">hexo cl &amp;&amp; hexo g &amp;&amp; hexo d  </span><br><span class="line"></span><br><span class="line">// 或者  </span><br><span class="line"></span><br><span class="line">// VSCODE终端  </span><br><span class="line"></span><br><span class="line">hexo cl; hexo g; hexo d</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>下一期会讲讲进阶的使用方法，<strong>主题美化</strong></p><hr><h2 id="VSCODE-终端首次执行报错"><a href="#VSCODE-终端首次执行报错" class="headerlink" title="VSCODE 终端首次执行报错"></a>VSCODE 终端首次执行报错</h2><p>使用管理员身份打开 powershell ,输入以下命令</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Set-ExecutionPolicy RemoteSigned</span><br></pre></td></tr></table></figure><hr><h2 id="参考资料"><a href="#参考资料" class="headerlink" title="参考资料"></a>参考资料</h2><p><a href="https://hexo.io/zh-cn/">https://hexo.io/zh-cn/</a><br><a href="https://www.fomal.cc/posts/e593433d.html">https://www.fomal.cc/posts/e593433d.html</a><br><a href="https://docs.anheyu.com/">https://docs.anheyu.com/</a></p><h2 id="致谢项目"><a href="#致谢项目" class="headerlink" title="致谢项目"></a>致谢项目</h2><p>[<a href="https://github.com/hexojs/hexo]">https://github.com/hexojs/hexo]</a></p>]]></content>
      
      
      
        <tags>
            
            <tag> Hexo </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>HiDNS 域名终身免费计划</title>
      <link href="/fws/HiDNS%E5%9F%9F%E5%90%8D%E7%BB%88%E8%BA%AB%E5%85%8D%E8%B4%B9%E8%AE%A1%E5%88%92/"/>
      <url>/fws/HiDNS%E5%9F%9F%E5%90%8D%E7%BB%88%E8%BA%AB%E5%85%8D%E8%B4%B9%E8%AE%A1%E5%88%92/</url>
      
        <content type="html"><![CDATA[<p>转自cm大佬blog<br>原文连接：<a href="https://杨幂的脚.dpdns.org/p/hidns/">https://xn--1uto7rutmzjk.dpdns.org/p/hidns/</a></p><p>HiDNS 域名终身免费计划</p><p>HiDNS 近期调整了其免费域名服务政策。现在，用户需要通过提交工单进行人工审核来申请免费域名。</p><p>为了获得<strong>永久免费</strong>资格（有效期至 <strong>2099年12月31日 23:59:59</strong>），您需要将申请到的域名成功绑定到您的博客或其他网络服务，并为其配置有效的 SSL 证书。</p><p>请特别注意，HiDNS 严禁将免费域名用于任何非法或滥用行为，包括但不限于：</p><ul><li><strong>钓鱼网站</strong></li><li><strong>盗版内容分发</strong>（如影视资源、破解软件等）</li><li><strong>病毒或木马传播</strong></li><li><strong>发送垃圾邮件</strong></li></ul><p>违反规定的域名将被删除相关账户。</p><blockquote><p>官方公告详情：<a href="https://www.hidoha.net/news/important-update-on-hidns-free-domain-service">https://www.hidoha.net/news/important-update-on-hidns-free-domain-service</a></p></blockquote><hr><h2 id="注册账号"><a href="#注册账号" class="headerlink" title="注册账号"></a>注册账号</h2><ol><li>访问 <a href="https://www.hidoha.net/">HiDNS 官网</a>，点击右上角的 <a href="https://www.hidoha.net/signup">注册</a> 按钮，如实填写注册信息。</li><li>提交注册信息后，您将收到一封验证邮件，请点击邮件中的链接完成验证。</li></ol><hr><h2 id="申请域名"><a href="#申请域名" class="headerlink" title="申请域名"></a>申请域名</h2><ol><li><p>登录您的 HiDNS 账号，点击 <a href="https://www.hidoha.net/order?product=1">新订单</a>。<br><a href="https://杨幂的脚.dpdns.org/img/hidns/1-1.png"><img src="https://杨幂的脚.dpdns.org/img/hidns/1-1.png" alt="新订单"></a></p></li><li><p>填写你需要的域名前缀，选择后缀（如 <code>.hidns.co</code>、<code>.hidns.vip</code> 等），并点击 <strong>检查</strong> 按钮。<strong>未提示报错说明该域名未被占用</strong>。<br><a href="https://杨幂的脚.dpdns.org/img/hidns/1-2.png"><img src="https://杨幂的脚.dpdns.org/img/hidns/1-2.png" alt="检查"></a><br><a href="https://杨幂的脚.dpdns.org/img/hidns/1-2-2.png"><img src="https://杨幂的脚.dpdns.org/img/hidns/1-2-2.png" alt="下一步"></a></p></li><li><p>点击 <strong>去结算</strong>，然后<strong>直接关闭弹出的 PayPal 窗口</strong>。<br><a href="https://杨幂的脚.dpdns.org/img/hidns/1-3.png"><img src="https://杨幂的脚.dpdns.org/img/hidns/1-3.png" alt="去结算"></a></p></li><li><p>返回 <a href="https://www.hidoha.net/">HiDNS 主页</a>，即可看到<strong>最近的订单</strong>，进入您最近的订单点击<strong>提交工单</strong><br><a href="https://杨幂的脚.dpdns.org/img/hidns/1-4-1.png"><img src="https://杨幂的脚.dpdns.org/img/hidns/1-4-1.png" alt="最近的订单"></a><br><a href="https://杨幂的脚.dpdns.org/img/hidns/1-4-2.png"><img src="https://杨幂的脚.dpdns.org/img/hidns/1-4-2.png" alt="提交工单"></a></p><ul><li><p>主题：<code>申请免费域名</code></p></li><li><p>消息：</p></li></ul></li></ol>  <figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">尊敬的 HiDNS 团队：  </span><br><span class="line"></span><br><span class="line">我希望申请这个域名，  </span><br><span class="line"></span><br><span class="line">我承诺此域名将严格用于个人博客或其他合法的网络服务，  </span><br><span class="line">并且保证不会将其用于任何形式的滥用行为，包括但不限于钓鱼网站、影视资源、盗版内容分发、病毒或木马传播以及发送垃圾邮件等。  </span><br><span class="line"></span><br><span class="line">感谢您的审核与支持。  </span><br><span class="line"></span><br><span class="line">此致</span><br></pre></td></tr></table></figure><p><a href="https://杨幂的脚.dpdns.org/img/hidns/1-4-3.png"><img src="https://杨幂的脚.dpdns.org/img/hidns/1-4-3.png" alt="工单"></a></p><ol><li>等待审核，审核通过后，您将得到一个<strong>一年有效期的域名</strong>。<br><a href="https://杨幂的脚.dpdns.org/img/hidns/1-5-1.png"><img src="https://杨幂的脚.dpdns.org/img/hidns/1-5-1.png" alt="审核通过"></a></li><li><strong>重要提醒：域名审核通过后，您只有7天时间来激活永久资格！只需将域名连接到您的网站或博客，并添加安全证书(SSL)，即可自动升级为终身免费使用权限。</strong></li></ol><hr><h2 id="如何使用"><a href="#如何使用" class="headerlink" title="如何使用"></a>如何使用</h2><ul><li>可手动添加 <strong>CNAME 记录</strong>、<strong>A 记录</strong>等解析记录。<br><a href="https://杨幂的脚.dpdns.org/img/hidns/2-1.png"><img src="https://杨幂的脚.dpdns.org/img/hidns/2-1.png" alt="添加解析记录"></a></li></ul><hr>]]></content>
      
      
      <categories>
          
          <category> 服务器 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 域名 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>🚀 浏览器秒变SSH终端！WebSSH一键部署，随时随地连接服务器 💻📱</title>
      <link href="/fws/WebSSH%E4%B8%80%E9%94%AE%E9%83%A8%E7%BD%B2/"/>
      <url>/fws/WebSSH%E4%B8%80%E9%94%AE%E9%83%A8%E7%BD%B2/</url>
      
        <content type="html"><![CDATA[<h2 id="部署WebSSH"><a href="#部署WebSSH" class="headerlink" title="部署WebSSH"></a>部署WebSSH</h2><ul><li>无需客户端，<strong>随时随地在浏览器中使用 SSH 连接服务器</strong>。<strong>手机浏览器也可以</strong>使用，支持安卓和苹果手机。<br><a href="https://github.cmliussss.net/https://raw.githubusercontent.com/cmliu/webssh/refs/heads/master/Picture1.gif"><img src="https://github.cmliussss.net/https://raw.githubusercontent.com/cmliu/webssh/refs/heads/master/Picture1.gif" alt="WebSSH"></a></li></ul><hr><h2 id="事前准备"><a href="#事前准备" class="headerlink" title="事前准备"></a>事前准备</h2><ol><li>一个 <a href="https://console.run.claw.cloud/signin?link=1DFUAGF6JA6R">ClawCloudRun</a> 账号，<strong>推荐使用注册满180天以上的 Github 账号进行注册，每月赠送 $5 使用额度</strong>。</li><li>一个域名（非必须），推荐使用 <a href="https://cmliussss.com/p/hidns/">HiDNS 免费域名</a>。</li></ol><hr><h2 id="1-部署-WebSSH"><a href="#1-部署-WebSSH" class="headerlink" title="1. 部署 WebSSH"></a>1. 部署 WebSSH</h2><ol><li>登录 <a href="https://console.run.claw.cloud/signin?link=1DFUAGF6JA6R">ClawCloudRun</a>。<br><a href="https://杨幂的脚.dpdns.org/img/webssh/1-1.png"><img src="https://杨幂的脚.dpdns.org/img/webssh/1-1.png" alt="登录ClawCloudRun"></a></li><li>进入 <code>App Store</code> 后，找到 <code>WebSSH</code> 模板，点击 <code>Deploy App</code> 一键云部署。。</li></ol><p><a href="https://杨幂的脚.dpdns.org/img/webssh/1-2-1.png"><img src="https://杨幂的脚.dpdns.org/img/webssh/1-2-1.png" alt="一键云部署"></a><br><a href="https://杨幂的脚.dpdns.org/img/webssh/1-2-2.png"><img src="https://杨幂的脚.dpdns.org/img/webssh/1-2-2.png" alt="一键云部署"></a><br><a href="https://杨幂的脚.dpdns.org/img/webssh/1-2-3.png"><img src="https://杨幂的脚.dpdns.org/img/webssh/1-2-3.png" alt="一键云部署"></a><br><a href="https://杨幂的脚.dpdns.org/img/webssh/1-2-4.png"><img src="https://杨幂的脚.dpdns.org/img/webssh/1-2-4.png" alt="一键云部署"></a></p><blockquote><p>因为使用注册满180天以上的 Github 账号进行注册，<strong>每月赠送 $5 使用额度</strong>。<br>该容器每天的费用为 <strong>$0.02 美元</strong>，所以每个月只会使用 <strong>$0.6 美元</strong>，可以说根本用不完。</p></blockquote><ol><li>进入 <code>App Launchpad</code> 后，点击刚部署好的 <code>WebSSH</code> 进入容器管理页面，即可查看容器域名。<br><a href="https://杨幂的脚.dpdns.org/img/webssh/1-3-1.png"><img src="https://杨幂的脚.dpdns.org/img/webssh/1-3-1.png" alt="容器管理页面"></a><br><a href="https://杨幂的脚.dpdns.org/img/webssh/1-3-2.png"><img src="https://杨幂的脚.dpdns.org/img/webssh/1-3-2.png" alt="容器管理页面"></a><br><a href="https://杨幂的脚.dpdns.org/img/webssh/1-3-3.png"><img src="https://杨幂的脚.dpdns.org/img/webssh/1-3-3.png" alt="容器管理页面"></a></li><li>当域名左侧显示<strong>Accessible</strong>，说明SSL证书已准备好，可以直接通过访问<code>https://ileoboab.us-east-1.clawcloudrun.com</code>使用 WebSSH。<br><a href="https://杨幂的脚.dpdns.org/img/webssh/1-4-1.png"><img src="https://杨幂的脚.dpdns.org/img/webssh/1-4-1.png" alt="使用 WebSSH"></a></li></ol><blockquote><p>由于近期 ClawCloudRun 小水管经常出现问题，所以有可能出现SSL证书未准备好的情况，可能<strong>需要长时间的等待</strong>或者<strong>尝试换个时间段再重新部署</strong>试试。</p></blockquote><hr><h2 id="2-绑定自定义域名"><a href="#2-绑定自定义域名" class="headerlink" title="2. 绑定自定义域名"></a>2. 绑定自定义域名</h2><ul><li>可选操作，绑定自定义域名，方便记忆自用（这里推荐使用<strong>HiDNS免费域名</strong>，<a href="https://cmliussss.com/p/hidns/">注册图文教程</a>）。</li></ul><ol><li>进入 <code>WebSSH</code> 容器管理页面，点击 <code>Manage Network</code> 配置自定义域。<br><a href="https://杨幂的脚.dpdns.org/img/webssh/2-1-1.png"><img src="https://杨幂的脚.dpdns.org/img/webssh/2-1-1.png" alt="配置自定义域"></a></li><li>找到 <strong>Network</strong> 选项，点击 <code>Custom Domain</code> 添加自定义域名，复制保存 <strong>CNAME的值</strong> 备用。<br><a href="https://杨幂的脚.dpdns.org/img/webssh/2-2-1.png"><img src="https://杨幂的脚.dpdns.org/img/webssh/2-2-1.png" alt="添加自定义域名"></a><br><a href="https://杨幂的脚.dpdns.org/img/webssh/2-2-2.png"><img src="https://杨幂的脚.dpdns.org/img/webssh/2-2-2.png" alt="添加CNAME记录"></a></li><li>进入你的域名 DNS 控制台，添加 CNAME 记录。<ul><li>我这里就使用 HiDNS 的域名 <code>cmliussss.hidns.co</code> 进行演示。</li><li>记录类型选择 <strong>CNAME</strong>，主机记录填写 <code>ssh</code>，记录值填写 <strong>CNAME的值</strong>。<br><a href="https://杨幂的脚.dpdns.org/img/webssh/2-3-1.png"><img src="https://杨幂的脚.dpdns.org/img/webssh/2-3-1.png" alt="添加CNAME记录"></a></li></ul></li><li>返回 <strong>Custom Domain</strong> 填写 <code>ssh.cmliussss.hidns.co</code> 自定义域。<br><a href="https://杨幂的脚.dpdns.org/img/webssh/2-4-1.png"><img src="https://杨幂的脚.dpdns.org/img/webssh/2-4-1.png" alt="添加自定义域名"></a></li><li>确定自定义域填写成功后，返回右上角点击 <code>Update</code> 更新配置。<br><a href="https://杨幂的脚.dpdns.org/img/webssh/2-5-1.png"><img src="https://杨幂的脚.dpdns.org/img/webssh/2-5-1.png" alt="更新配置"></a><br><a href="https://杨幂的脚.dpdns.org/img/webssh/2-5-2.png"><img src="https://杨幂的脚.dpdns.org/img/webssh/2-5-2.png" alt="更新配置"></a><br><a href="https://杨幂的脚.dpdns.org/img/webssh/2-5-3.png"><img src="https://杨幂的脚.dpdns.org/img/webssh/2-5-3.png" alt="更新配置"></a></li><li>等待自定义域SSL证书准备完成即可直接使用 <code>ssh.cmliussss.hidns.co</code> 访问 WebSSH。<br><a href="https://杨幂的脚.dpdns.org/img/webssh/2-6-1.png"><img src="https://杨幂的脚.dpdns.org/img/webssh/2-6-1.png" alt="使用 WebSSH"></a></li></ol><hr><h2 id="3-如何更方便的使用-WebSSH"><a href="#3-如何更方便的使用-WebSSH" class="headerlink" title="3. 如何更方便的使用 WebSSH"></a>3. 如何更方便的使用 WebSSH</h2><ul><li>将<strong>WebSSH链接地址</strong>添加到浏览器收藏夹，方便下次直接访问。</li></ul><ol><li>先填写SSH的<code>主机地址</code>、<code>端口</code>、<code>用户名</code>和<code>密码</code>，点击 <code>连接</code> 确认参数填写正确，可以正常连接SSH后，点击 <code>生成链接</code>。<br><a href="https://杨幂的脚.dpdns.org/img/webssh/3-1-1.png"><img src="https://杨幂的脚.dpdns.org/img/webssh/3-1-1.png" alt="生成链接"></a></li><li>点击 <code>复制链接图标</code>，将链接地址直接在浏览器里打开，确定链接地址可以正常访问 SSH。<br><a href="https://杨幂的脚.dpdns.org/img/webssh/3-2-1.png"><img src="https://杨幂的脚.dpdns.org/img/webssh/3-2-1.png" alt="将链接地址直接在浏览器里打开"></a><br><a href="https://杨幂的脚.dpdns.org/img/webssh/3-2-2.png"><img src="https://杨幂的脚.dpdns.org/img/webssh/3-2-2.png" alt="正常访问 SSH"></a></li><li>添加到浏览器收藏夹，方便下次直接访问。<br><a href="https://杨幂的脚.dpdns.org/img/webssh/3-3-1.png"><img src="https://杨幂的脚.dpdns.org/img/webssh/3-3-1.png" alt="添加到浏览器收藏夹"></a><br><a href="https://杨幂的脚.dpdns.org/img/webssh/3-3-2.png"><img src="https://杨幂的脚.dpdns.org/img/webssh/3-3-2.png" alt="添加到浏览器收藏夹"></a></li><li>直接点击收藏夹的链接地址，即可直连该SSH，<strong>就是这么简单！！！</strong><br><a href="https://杨幂的脚.dpdns.org/img/webssh/3-4-1.gif"><img src="https://杨幂的脚.dpdns.org/img/webssh/3-4-1.gif" alt="直接点击收藏夹的链接地址"></a></li></ol><hr><h2 id="关于-IPv6"><a href="#关于-IPv6" class="headerlink" title="关于 IPv6"></a>关于 IPv6</h2><ul><li>关于 IPv6 的问题我也已给 ClawCloudRun 团队进行了反馈，ClawCloudRun 的答复是<strong>目前不支持IPv6</strong>，因此无法连接仅支持 IPv6 Only 的VPS。<br><a href="https://杨幂的脚.dpdns.org/img/webssh/ccr.png"><img src="https://杨幂的脚.dpdns.org/img/webssh/ccr.png" alt="关于 IPv6"></a></li><li><strong>若需连接IPv6 Only的VPS，可使用我提供的</strong><a href="https://ssh.cmliussss.net/">WebSSH</a>，此服务基于<a href="https://www.koyeb.com/">Koyeb容器</a>部署，而Koyeb容器是支持IPv6环境的。</li><li>你可以参考 <a href="https://www.kejiland.com/post/50664282.html">https://www.kejiland.com/post/50664282.html</a> 自行申请注册并部署。</li></ul><hr><h2 id="更多部署方法"><a href="#更多部署方法" class="headerlink" title="更多部署方法"></a>更多部署方法</h2><ul><li>查看 <a href="https://github.com/cmliu/webssh">https://github.com/cmliu/webssh</a> 项目说明，自行部署。</li></ul><hr>]]></content>
      
      
      <categories>
          
          <category> webssh </category>
          
      </categories>
      
      
        <tags>
            
            <tag> SSH </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Hello World</title>
      <link href="/fws/hello-world/"/>
      <url>/fws/hello-world/</url>
      
        <content type="html"><![CDATA[<iframe width="560" height="315" src="https://www.youtube.com/embed/dMEtHPwlcYg?si=st2e6ohHZ3i5P-5O" title="YouTube video player" frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share" referrerpolicy="strict-origin-when-cross-origin" allowfullscreen></iframe><p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">&quot;My New Post&quot;</span></span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>]]></content>
      
      
      
    </entry>
    
    
  
  
</search>
