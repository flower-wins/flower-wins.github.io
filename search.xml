<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>Mouse-Without-Borders</title>
      <link href="/fws/Mouse-Without-Borders/"/>
      <url>/fws/Mouse-Without-Borders/</url>
      
        <content type="html"><![CDATA[<h1 id="键鼠共享-Mouse-Without-Borders（无界鼠标）安装步骤-安装教程"><a href="#键鼠共享-Mouse-Without-Borders（无界鼠标）安装步骤-安装教程" class="headerlink" title="键鼠共享 | Mouse Without Borders（无界鼠标）安装步骤 安装教程"></a>键鼠共享 | Mouse Without Borders（无界鼠标）安装步骤 安装教程</h1><p>转载于：<a href="https://blog.csdn.net/weixin_42301220/article/details/126736125">https://blog.csdn.net/weixin_42301220/article/details/126736125</a></p><h3 id="1-无界鼠标安装说明"><a href="#1-无界鼠标安装说明" class="headerlink" title="1. 无界鼠标安装说明"></a>1. 无界鼠标安装说明</h3><p>无界鼠标在<a href="https://so.csdn.net/so/search?q=%E5%B1%80%E5%9F%9F%E7%BD%91&spm=1001.2101.3001.7020">局域网</a>内可以实现多台电脑共用一套鼠标键盘，非常方便！！<a href="https://www.microsoft.com/en-us/download/details.aspx?id=35460">下载地址在此</a>。</p><p>分别在控制端电脑和被控端电脑下载完成后，点击运行安装包进行安装，具体安装截图不放了，比较简单。</p><ol><li><p>安装完成后，软件自动运行会出现下面这个界面。</p><ul><li>YES：yes为控制端</li><li>NO：no为被控制端<br><img src="https://bed.hdsh.hidns.vip/file/1758672048609_mwb1.png" alt="img"></li></ul></li><li><p>如果不是第一次登录，如果想要重新打开上面的界面的话，点击下面箭头所指即可进行配置</p></li></ol><p><img src="https://bed.hdsh.hidns.vip/file/1758672043178_mwb2.png" alt="img"></p><ol><li>被控端点击no，出现被控电脑的电脑名称和访问密码，讲这个信息记住，需要填写到控制端电脑。</li></ol><p><img src="https://bed.hdsh.hidns.vip/file/1758672049768_mwb3.png" alt="img"></p><ol start="2"><li>控制端点击yes，就会弹出这个界面，用来填写被控制端的电脑名称、访问安装密码。</li></ol><p><img src="https://bed.hdsh.hidns.vip/file/1758672051195_mwb4.png" alt="img"></p><p>   填写完信息后，点击下方LINK，进行连接。正常情况下即可连接成功。</p><ol start="3"><li><p>如果内网的IP段不是典型的<code>192.168.1.*</code>，那么大概率是会连接失败，连接失败的解决方法如下：</p><p>在被控端电脑的<code>IP Mappings</code>栏输入主电脑的机器名和内网IP，例如：<code>DESKTOP-NUBSPA 10.250.182.130</code>。注意机器名和IP之间有空格。</p></li></ol><p><img src="https://bed.hdsh.hidns.vip/file/1758672043651_mwb5.png" alt="img"></p><p>   然后重新执行3到4步骤，进行连接。</p><p>   查找电脑的ip可以在cmd中输入：<code>ipconfig</code>即可找到。  </p><p><img src="https://bed.hdsh.hidns.vip/file/1758672043352_mwb6.png" alt="img"></p><h3 id="2-无界鼠标操作界面说明"><a href="#2-无界鼠标操作界面说明" class="headerlink" title="2. 无界鼠标操作界面说明"></a>2. 无界鼠标操作界面说明</h3><p><img src="https://bed.hdsh.hidns.vip/file/1758672043831_mwb7.png" alt="img"><br><img src="https://bed.hdsh.hidns.vip/file/1758672039647_mwb8.png" alt="img"><br><img src="https://bed.hdsh.hidns.vip/file/1758672048140_mwb9.png" alt="img"><br><img src="https://bed.hdsh.hidns.vip/file/1758672049130_mwb10.png" alt="img"></p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>免费节点</title>
      <link href="/fws/%E5%85%8D%E8%B4%B9%E8%8A%82%E7%82%B9/"/>
      <url>/fws/%E5%85%8D%E8%B4%B9%E8%8A%82%E7%82%B9/</url>
      
        <content type="html"><![CDATA[<p>收藏自用，请移步原作者链接<a href="https://apepine.com/archives/317">https://apepine.com/archives/317</a></p><p>使用grok网站：<a href="https://grok.com/">https://grok.com/</a></p><p>根据搜索结果，我将资源分为几类：传统网站、GitHub仓库及其他平台。以下是整理后的详细列表，包含23个资源：</p><table><thead><tr><th>序号</th><th>网站&#x2F;资源名称</th><th>URL</th><th>备注</th></tr></thead><tbody><tr><td>1</td><td>FreeV2rayNode</td><td><a href="https://www.freev2raynode.com/free-node-subscription/">https://www.freev2raynode.com/free-node-subscription/</a></td><td>每日更新V2ray节点</td></tr><tr><td>2</td><td>Pawdroid&#x2F;Free-servers</td><td><a href="https://github.com/Pawdroid/Free-servers">https://github.com/Pawdroid/Free-servers</a></td><td>每6小时更新，GitHub仓库</td></tr><tr><td>3</td><td>不过了了Blog</td><td><a href="https://www.butnono.com/latest-2020-freevpn-v2ray-ss-ssr-address.html">https://www.butnono.com/latest-2020-freevpn-v2ray-ss-ssr-address.html</a></td><td>每日更新SSR&#x2F;V2ray节点</td></tr><tr><td>4</td><td>free-nodes&#x2F;v2rayfree</td><td><a href="https://github.com/free-nodes/v2rayfree">https://github.com/free-nodes/v2rayfree</a></td><td>每日更新V2ray节点，GitHub</td></tr><tr><td>5</td><td>FreeClashNode</td><td><a href="https://www.freeclashnode.com/">https://www.freeclashnode.com/</a></td><td>每日更新Clash节点</td></tr><tr><td>6</td><td>加速器123</td><td><a href="https://www.bettershop.club/daily-ss-airport.html">https://www.bettershop.club/daily-ss-airport.html</a></td><td>每日更新SS节点</td></tr><tr><td>7</td><td>v2cross</td><td><a href="https://v2cross.com/1884.html">https://v2cross.com/1884.html</a></td><td>每6小时更新优质节点</td></tr><tr><td>8</td><td>oneClash</td><td><a href="https://oneclash.cc/t/%25E8%25AE%25A2%25E9%2598%2585%25E5%259C%25B0%25E5%259D%2580">https://oneclash.cc/t/%25E8%25AE%25A2%25E9%2598%2585%25E5%259C%25B0%25E5%259D%2580</a></td><td>每日更新Clash订阅</td></tr><tr><td>9</td><td>Shadowrocket</td><td><a href="https://shadowrocketios.org/shadowrocket-node/">https://shadowrocketios.org/shadowrocket-node/</a></td><td>提供Shadowrocket节点订阅</td></tr><tr><td>10</td><td>ClashNode</td><td><a href="https://clashnode.cc/">https://clashnode.cc</a></td><td>每日更新Clash节点</td></tr><tr><td>11</td><td>sun9426&#x2F;sun9426.github.io</td><td><a href="https://github.com/sun9426/sun9426.github.io">https://github.com/sun9426/sun9426.github.io</a></td><td>每日分享免费节点，GitHub</td></tr><tr><td>12</td><td>米贝分享</td><td><a href="https://www.mibei77.com/">https://www.mibei77.com/</a></td><td>提供节点订阅更新</td></tr><tr><td>13</td><td>freenodes</td><td><a href="https://freenodes.github.io/freenodes/">https://freenodes.github.io/freenodes/</a></td><td>每4小时更新，GitHub仓库</td></tr><tr><td>14</td><td>85LA</td><td><a href="https://www.85la.com/">https://www.85la.com/</a></td><td>提供免费高速节点订阅</td></tr><tr><td>15</td><td>chengaopan&#x2F;AutoMergePublicNodes</td><td><a href="https://github.com/chengaopan/AutoMergePublicNodes">https://github.com/chengaopan/AutoMergePublicNodes</a></td><td>自动合并公开节点，GitHub</td></tr><tr><td>16</td><td>Raindrop</td><td><a href="https://raindrop.io/bizhanrensheng/a-32970912">https://raindrop.io/bizhanrensheng/a-32970912</a></td><td>收集免费节点书签</td></tr><tr><td>17</td><td>Helpsoftware&#x2F;fanqiang</td><td><a href="https://raindrop.io/bizhanrensheng/a-32970912">https://raindrop.io/bizhanrensheng/a-32970912</a></td><td>分享多个免费节点网站，GitHub</td></tr><tr><td>18</td><td>ClashSub</td><td><a href="https://clashsub.net/free-subscribe/">https://clashsub.net/free-subscribe/</a></td><td>提供免费Clash节点订阅</td></tr><tr><td>19</td><td>NodeCats</td><td><a href="https://nodecats.com/free-node/">https://nodecats.com/free-node/</a></td><td>收集免费节点</td></tr><tr><td>20</td><td>V2rayFree</td><td><a href="https://www.v2rayfree.eu.org/">https://www.v2rayfree.eu.org/</a></td><td>提供免费V2ray节点订阅</td></tr><tr><td>21</td><td>NodeFree</td><td><a href="https://nodefree.net/f/freenode">https://nodefree.net/f/freenode</a></td><td>每日更新节点</td></tr><tr><td>22</td><td>v2rayShare</td><td><a href="https://v2rayshare.com/">https://v2rayshare.com/</a></td><td>提供SSR&#x2F;V2ray&#x2F;Clash节点</td></tr><tr><td>23</td><td>free18&#x2F;v2ray</td><td><a href="https://github.com/free18/v2ray">https://github.com/free18/v2ray</a></td><td>每日分享免费节点，GitHub</td></tr></tbody></table><p><strong>自己网上搜索以及收藏的获取节点订阅网站集合（有些可能已经失效，需要自己测试一下）：</strong></p><p>优质免费节点每天测速更新2024（6小时更新一次）<a href="https://v2cross.com/1884.html">https://v2cross.com/1884.html</a><br>[每天更新]2025&#x2F;08&#x2F;02稳定番蔷免费SSR节点账号V2ray订阅地址|安卓苹果手机pc电脑客户端下载<br><a href="https://www.butnono.com/latest-2020-freevpn-v2ray-ss-ssr-address.html">https://www.butnono.com/latest-2020-freevpn-v2ray-ss-ssr-address.html</a></p><p>林云SEO博客 <a href="https://www.tang-seo.com/special/ssrjiedian">https://www.tang-seo.com/special/ssrjiedian</a><br>免费机场收集 - Askahh测速 <a href="https://askahh.com/archives/101/">https://askahh.com/archives/101/</a><br>免费试用机场推荐 - 机场节点 <a href="https://www.jiedian123.com/freetrial/">https://www.jiedian123.com/freetrial/</a><br>免费 Clash 节点 <a href="https://clashxiazai.com/free-node/">https://clashxiazai.com/free-node/</a><br>飞机云 2025最新SSR&#x2F;V2Ray&#x2F;Clash节点购买推荐 - ClashVIP <a href="https://clashvip.com/node/feijicloud/">https://clashvip.com/node/feijicloud/</a><br>2025年免费机场推荐（持续更新） - Kerry的学习笔记 <a href="https://kerrynotes.com/free-proxy-vpn/">https://kerrynotes.com/free-proxy-vpn/</a><br>快嘴科技-V2ray资源站-ai资源站 | 一个免费分享V2ray节点AI生成的导航资源站 <a href="https://kkzui.com/">https://kkzui.com/</a><br><a href="https://www.85la.com/internet-access/free-network-nodes">https://www.85la.com/internet-access/free-network-nodes</a></p><p>机场节点推荐 <a href="https://jiediangou.com/">https://jiediangou.com/</a><br>2025好用的机场推荐优质高速稳定节点分享 | 免费节点 <a href="https://free-node.com/node/">https://free-node.com/node/</a><br>2025靠谱好用的翻墙机场推荐 (持续更新) - SSR中文网 <a href="https://www.linuxssr.com/proxy/">https://www.linuxssr.com/proxy/</a><br>免费节点 - FreeHiddifyNext节点订阅站 - 第2页 <a href="https://freehiddifynext.github.io/free-nodes/">https://freehiddifynext.github.io/free-nodes/</a><br>Hiddify Next免费节点分享 | hiddify.me <a href="https://hiddify.me/zh/docs/hiddify%E4%BD%BF%E7%94%A8%E6%95%99%E7%A8%8B/hiddify-next%E5%85%8D%E8%B4%B9%E8%8A%82%E7%82%B9%E5%88%86%E4%BA%AB/">https://hiddify.me/zh/docs/hiddify%E4%BD%BF%E7%94%A8%E6%95%99%E7%A8%8B/hiddify-next%E5%85%8D%E8%B4%B9%E8%8A%82%E7%82%B9%E5%88%86%E4%BA%AB/</a></p><p>免费节点 | 米洛分享 mlfenx.com 科学上网分享,最新免费节点,SSR,V2ray,Clash订阅链接,机场推荐 <a href="https://www.mlfenx.com/freenode">https://www.mlfenx.com/freenode</a><br>CLASHSSR订阅站 - 每日分享SSR&#x2F;V2RAY&#x2F;CLASH免费节点 <a href="https://clashshare.net/">https://clashshare.net/</a><br>GitHub - nodev2rayclash&#x2F;nodev2rayclash.github.io: 每日分享免费节点、免费机场、ssr节点、v2ray节点、v2ray订阅、clash节点、clash订…<br><a href="https://github.com/nodev2rayclash/nodev2rayclash.github.io">https://github.com/nodev2rayclash/nodev2rayclash.github.io</a></p><p>21.8M&#x2F;S，7月28日SSR&#x2F;Clash&#x2F;Shadowrocket&#x2F;V2ray免费节点订阅链接每天更新<br><a href="https://openclash.cc/free-node/2025-7-28-free-high-speed-nodes.htm">https://openclash.cc/free-node/2025-7-28-free-high-speed-nodes.htm</a></p><p>今日 V2Ray 免费节点推荐（每日更新） - 高速VMess&#x2F;VLESS节点可用性分享<br><a href="https://v2raynews.org/index.php/2025/06/21/%e4%bb%8a%e6%97%a5-v2ray-%e5%85%8d%e8%b4%b9%e8%8a%82%e7%82%b9%e6%8e%a8%e8%8d%90%ef%bc%88%e6%af%8f%e6%97%a5%e6%9b%b4%e6%96%b0%ef%bc%89-%e9%ab%98%e9%80%9fvmess-vless%e8%8a%82%e7%82%b9%e5%8f%af/">https://v2raynews.org/index.php/2025/06/21/%e4%bb%8a%e6%97%a5-v2ray-%e5%85%8d%e8%b4%b9%e8%8a%82%e7%82%b9%e6%8e%a8%e8%8d%90%ef%bc%88%e6%af%8f%e6%97%a5%e6%9b%b4%e6%96%b0%ef%bc%89-%e9%ab%98%e9%80%9fvmess-vless%e8%8a%82%e7%82%b9%e5%8f%af/</a></p><p>Free Clash Verge 订阅地址官网 | 每天更新分享SSR&#x2F;V2ray&#x2F;Clash Verge免费节点订阅<br><a href="https://freeclashverge.com/">https://freeclashverge.com/</a><br>GitHub - crashgfw&#x2F;free-airport-nodes: 每日更新，2025年免费公益 V2ray&#x2F;Trojan&#x2F;SS&#x2F;Hysteria2 节点订阅 |…<br><a href="https://github.com/crashgfw/free-airport-nodes">https://github.com/crashgfw/free-airport-nodes</a></p><p>免费节点 - TomatoNode<br><a href="https://tomatonode.com/node/">https://tomatonode.com/node/</a></p><p>免费机场节点<br>每日提供最全的机场推荐以及免费高速的节点订阅信息，精选全球优质节点资源，帮助您提升网络速度和稳定性<br><a href="https://www.freejichang.com/">https://www.freejichang.com/</a></p><p>免费节点订阅，每天更新，V2ray节点大全 - FreeV2rayNode中文站<br><a href="https://www.freev2raynode.com/free-node-subscription/">https://www.freev2raynode.com/free-node-subscription/</a></p><p>免费 Clash 节点订阅 <a href="https://clashsub.net/free-subscribe/">https://clashsub.net/free-subscribe/</a><br>免费节点订阅，每天更新，V2ray节点大全 - ClashNode中文网 <a href="https://clashnode.cc/free-node/">https://clashnode.cc/free-node/</a></p><p>免费节点 <a href="https://clashxiaomaomi.com/free-node/">https://clashxiaomaomi.com/free-node/</a></p><p>版权声明：<br>作者：song<br>链接：<a href="https://apepine.com/archives/317">https://apepine.com/archives/317</a><br>来源：猿猿松<br>文章版权归作者所有，未经允许请勿转载。</p>]]></content>
      
      
      
        <tags>
            
            <tag> 科学上网 </tag>
            
            <tag> 免费节点 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>神站合集发布版</title>
      <link href="/fws/%E7%A5%9E%E7%AB%99%E5%90%88%E9%9B%86%E5%8F%91%E5%B8%83%E7%89%88/"/>
      <url>/fws/%E7%A5%9E%E7%AB%99%E5%90%88%E9%9B%86%E5%8F%91%E5%B8%83%E7%89%88/</url>
      
        <content type="html"><![CDATA[<h1 id="🌐-30个免费神站推荐合集【全网最全收藏版】"><a href="#🌐-30个免费神站推荐合集【全网最全收藏版】" class="headerlink" title="🌐 30个免费神站推荐合集【全网最全收藏版】"></a>🌐 30个免费神站推荐合集【全网最全收藏版】</h1><p>你是否厌倦了机械式刷短视频、重复打开几乎没营养的应用？互联网上其实有太多<strong>免费、实用、甚至令人上瘾的宝藏网站</strong>，只是你还没发现。本文整合了多个方向的优质资源，涵盖<strong>学习成长、电子书下载、设计创作、脑力游戏、娱乐放松</strong>等，值得你永久收藏。</p><hr><h2 id="📖-学习成长类"><a href="#📖-学习成长类" class="headerlink" title="📖 学习成长类"></a>📖 学习成长类</h2><table><thead><tr><th>网站名称</th><th>简介</th><th>地址</th></tr></thead><tbody><tr><td>耶鲁公开课</td><td>免费人文社科精英课程</td><td><a href="https://oyc.yale.edu/">oyc.yale.edu</a></td></tr><tr><td>Khan Academy</td><td>数学&#x2F;金融&#x2F;编程零基础自学平台</td><td><a href="https://khanacademy.org/">khanacademy.org</a></td></tr><tr><td>Wikipedia 英文版</td><td>全球最全的百科知识库</td><td><a href="https://en.wikipedia.org/">en.wikipedia.org</a></td></tr><tr><td>Foreign Affairs</td><td>高质量国际关系深度文章</td><td><a href="https://www.foreignaffairs.com/">foreignaffairs.com</a></td></tr><tr><td>Brookings Institution</td><td>全球政策智库，解析复杂议题</td><td><a href="https://www.brookings.edu/">brookings.edu</a></td></tr></tbody></table><hr><h2 id="📚-免费电子书资源"><a href="#📚-免费电子书资源" class="headerlink" title="📚 免费电子书资源"></a>📚 免费电子书资源</h2><table><thead><tr><th>网站名称</th><th>特点</th><th>访问链接</th></tr></thead><tbody><tr><td>📕 Z-Library</td><td>全球最大免费图书馆</td><td><a href="https://z-library.sk/">z-library.sk</a> ｜ <a href="https://zh.z-lib.gs/z-access#useful_link_tab">备用链接</a></td></tr><tr><td>📗 LibGen 创世纪图书馆</td><td>各类电子书&#x2F;教材下载</td><td><a href="https://libgen.is/">libgen.is</a></td></tr><tr><td>📘 Anna’s Archive</td><td>全网电子书搜索聚合</td><td><a href="https://zh.annas-archive.org/">zh.annas-archive.org</a></td></tr><tr><td>📙 PDF Drive</td><td>海量PDF电子书免注册下载</td><td><a href="https://www.pdfdrive.com/">pdfdrive.com</a></td></tr><tr><td>🀄 书格</td><td>中文古籍数字图书馆</td><td><a href="https://www.shuge.org/">shuge.org</a></td></tr><tr><td>🔧 Convertio</td><td>各类电子书格式互转工具</td><td><a href="https://convertio.co/zh/mobi-epub/">convertio.co</a></td></tr></tbody></table><hr><h2 id="🎮-脑力挑战-趣味网站"><a href="#🎮-脑力挑战-趣味网站" class="headerlink" title="🎮 脑力挑战 &amp; 趣味网站"></a>🎮 脑力挑战 &amp; 趣味网站</h2><table><thead><tr><th>网站名称</th><th>简介</th><th>地址</th></tr></thead><tbody><tr><td>人类极限挑战器</td><td>反应&#x2F;记忆&#x2F;逻辑等小游戏</td><td><a href="https://aring.cc/human-benchmark/#/index">aring.cc&#x2F;human-benchmark</a></td></tr><tr><td>花光比尔·盖茨的900亿</td><td>模拟“花钱游戏”，刷新财富观</td><td><a href="https://neal.fun/spend">neal.fun&#x2F;spend</a></td></tr><tr><td>全球街景盲盒</td><td>随机跳转任意地球角落</td><td><a href="https://randomstreetview.com/">randomstreetview.com</a></td></tr><tr><td>全球电台地图</td><td>听全球直播广播</td><td><a href="https://radio.garden/">radio.garden</a></td></tr><tr><td>时光邮局</td><td>给未来的自己写封信</td><td><a href="https://www.hi2future.com/">hi2future.com</a></td></tr><tr><td>妖怪百科</td><td>收录世界各地神秘生物</td><td><a href="https://www.cbaigui.com/">cbaigui.com</a></td></tr></tbody></table><hr><h2 id="🎨-设计素材类"><a href="#🎨-设计素材类" class="headerlink" title="🎨 设计素材类"></a>🎨 设计素材类</h2><table><thead><tr><th>网站名称</th><th>简介</th><th>地址</th></tr></thead><tbody><tr><td>Canva</td><td>零基础在线做封面&#x2F;海报</td><td><a href="https://www.canva.com/">canva.com</a></td></tr><tr><td>Pixabay</td><td>免费可商用图像、音效素材</td><td><a href="https://pixabay.com/">pixabay.com</a></td></tr></tbody></table><hr><h2 id="🔍-查证与信息筛选"><a href="#🔍-查证与信息筛选" class="headerlink" title="🔍 查证与信息筛选"></a>🔍 查证与信息筛选</h2><table><thead><tr><th>网站名称</th><th>简介</th><th>地址</th></tr></thead><tbody><tr><td>Snopes</td><td>最强辟谣网站，查真假新闻</td><td><a href="https://www.snopes.com/">snopes.com</a></td></tr><tr><td>Internet Archive</td><td>数字图书馆+老网站备份</td><td><a href="https://archive.org/">archive.org</a></td></tr><tr><td>Project Gutenberg</td><td>世界名著数字典藏馆</td><td><a href="https://www.gutenberg.org/">gutenberg.org</a></td></tr></tbody></table><hr><h2 id="🎬-附推荐视频"><a href="#🎬-附推荐视频" class="headerlink" title="🎬 附推荐视频"></a>🎬 附推荐视频</h2><ul><li>7个魔性网站合集：<a href="https://www.youtube.com/watch?v=ENuUibvX3kg">YouTube - 暖阳</a>  </li><li>翻墙后推荐网站合集：<a href="https://www.youtube.com/watch?v=mlvdegiVfcE">YouTube - 暖阳</a></li></ul><hr><h2 id="✅-一句话总结"><a href="#✅-一句话总结" class="headerlink" title="✅ 一句话总结"></a>✅ 一句话总结</h2><p><strong>这些网站，没有广告、无需登录、免费高效。</strong><br>它们是效率神器，也是心灵栖息地。<br>收藏好这篇博客，每当你感到无聊、迷茫或想自我提升时，随便点开一个，说不定就会点亮你的一天。</p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>acme.sh免费申请配置https加密证书</title>
      <link href="/fws/acme-sh/"/>
      <url>/fws/acme-sh/</url>
      
        <content type="html"><![CDATA[<p>只需3行命令，免费申请配置https加密证书，一次配置，永久生效。对于家庭NAS服务，或者自建网站等暴露在公网上的网络应用，如果只使用http协议，信息是明文传输的。只要攻击者在通信链路中的任意一个路由器抓个包，就可以看到包里的全部内容，因此很不安全。使用https协议，或者说配置TLS加密，则可以保护传输的安全。</p><p>这其中最关键的步骤，就是从CA机构那里申请服务器证书。CA机构作为受信任的第三方，是确保客户端与服务端之间互相信任的核心机制。</p><p><img src="https://bed.hdsh.hidns.vip/file/1748418562380_acme.sh1.webp" alt="图片"></p><p>现在网上，有很多免费提供TLS证书的服务商，比如Let’s Encrypt，不过这里的免费证书只有短短的90天。频繁续签更换证书，绝对是一个令人头秃的麻烦事情。</p><p>本期视频，我们使用Github上面一个3.9万star的开源项目acme.sh。它只需要几行简单的命令，就可以免费申请到TLS证书，还能全自动续签，一劳永逸解决https证书的难题。本期视频，我打算用两个例子来演示配置TLS加密：一个是部署在云服务器上面的自建网站，还有一个是家庭的内网服务。</p><h2 id="云服务器自建网站"><a href="#云服务器自建网站" class="headerlink" title="云服务器自建网站"></a>云服务器自建网站</h2><h2 id="Ngnix-搭建网站"><a href="#Ngnix-搭建网站" class="headerlink" title="Ngnix 搭建网站"></a>Ngnix 搭建网站</h2><p>这是我的一台云服务器，我们先来搭建一个简单的网站。我这是Ubuntu系统的，我先安装一下nginx：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">sudo</span> apt update</span><br></pre></td></tr></table></figure><p>接下来我安装nginx：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">sudo</span> apt install nginx</span><br></pre></td></tr></table></figure><p>我把nginx启动一下：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">sudo</span> service nginx start</span><br></pre></td></tr></table></figure><p>好，我们来访问一下。这里我直接在浏览器输入服务器的公网地址，协议是http，因为现在我们还没有配置TLS加密。这里出现一个nginx的欢迎页面，那我们的nginx就配置成功了，网站也就搭建好了。</p><p>这里我准备了一个tech-shrimp.com的域名。爬爬虾之前视频里有介绍过如何低价获得一个域名或者申请免费的域名，这里我就不赘述了。我们拿到域名以后，在域名脱管网站添加一个DNS记录，把域名解析到我刚才的服务器上面。我把这个小黄云先关上，这里添加一个a类型的记录，名称填写@，IPV4地址填写我服务器的公网IP地址，然后点击保存。</p><p><img src="https://bed.hdsh.hidns.vip/file/1748418562769_acme.sh2.webp" alt="图片"></p><p>这个域名就解析到了我的服务器上，然后我通过域名就可以访问到服务器了。这里我输入域名，这里显示一个不安全，它没有证书。</p><p><img src="https://bed.hdsh.hidns.vip/file/1748418560895_acme.sh3.webp" alt="图片"></p><h2 id="HTTPS证书配置步骤"><a href="#HTTPS证书配置步骤" class="headerlink" title="HTTPS证书配置步骤"></a>HTTPS证书配置步骤</h2><p>我们进入项目首页，  </p><p><a href="https://github.com/acmesh-official/acme.sh">https://github.com/acmesh-official/acme.sh</a></p><p>这里有中文说明，我们按照这个提示把它安装一下。</p><p>我们先来第一条命令，然后回车。</p><p><code>curl https://get.acme.sh | sh -s email=my@example.com</code></p><p>这个安装需要依赖Github的网络，如果下载不下来的话，我们可以换成这3个命令，一样可以完成安装。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git <span class="built_in">clone</span> --depth 1 https://github.com/acmesh-official/acme.sh.git</span><br></pre></td></tr></table></figure><p>显示install success就安装成功了。</p><p>这里需要记一下安装地址，我的机器就放到了root目录下面。</p><p><img src="https://bed.hdsh.hidns.vip/file/1748418558851_acme.sh4.webp" alt="图片"></p><p>我们来看一下nginx的配置，这里进入这个目录&#x2F;etc&#x2F;nginx&#x2F;sites_available。我们看一下这个default文件，这里nginx监听了80端口，然后这里的root也就是网页的根目录放到了这个文件夹下面。</p><p><img src="https://bed.hdsh.hidns.vip/file/1748418556530_acme.sh5.webp" alt="图片"></p><p>我们把这个地址复制一下，等下要用。</p><h4 id="接下来使用命令申请证书"><a href="#接下来使用命令申请证书" class="headerlink" title="接下来使用命令申请证书"></a>接下来使用命令申请证书</h4><p><code>/root/.acme.sh/acme.sh   --issue -d tech-shrimp.com    -webroot /var/www/html</code></p><p>首先，这个-d这里要替换成自己的域名。这里我的域名是tech-shrimp.com。开头的acme.sh需要修改成完整路径。最后的webroot需要改一下，改成我们刚才查看的那个nginx配置。</p><p>这里要注意点，我们在命令里使用的域名必须先在cloudflare里有对应的DNS配置。</p><h2 id="证书安装"><a href="#证书安装" class="headerlink" title="证书安装"></a>证书安装</h2><p>我准备在服务器上面新建一个文件夹（&#x2F;etc&#x2F;nginx&#x2F;tls&#x2F;）用来存放证书跟私钥。：</p><p><code>mkdir /etc/nginx/tls</code></p><p>接下来配置安装证书的命令，把脚本的地址写全，把域名改成自己的，<strong>--key-file  –fullchain-file</strong>是我们在nginx上面存放私钥还有服务器证书的地址。</p><p>最后reloadcmd指的是配置完成证书以后重启nginx所需的命令，这里普通的reload不行，我们必须改成force-reload</p><p>&#x2F;root&#x2F;.acme.sh&#x2F;acme.sh   –install-cert  -d tech-shrimp.com \</p><p>--key-file           &#x2F;etc&#x2F;nginx&#x2F;tls&#x2F;key.pem</p><p>--fullchain-file   &#x2F;etc&#x2F;nginx&#x2F;tls&#x2F;cert.pem</p><p>--reloadcmd     “service nginx force-reload”</p><p>敲入命令以后，显示success。我们进对应的目录看一下（&#x2F;etc&#x2F;nginx&#x2F;tls），看到私钥跟证书都放到这个路径下面了。</p><h2 id="Nginx配置修改"><a href="#Nginx配置修改" class="headerlink" title="Nginx配置修改"></a>Nginx配置修改</h2><p>然后我们只需要进行最后一步，把这个私钥跟证书添加到nginx配置里面，并且把443端口暴露出来。</p><p>我们还是进入这个目录&#x2F;etc&#x2F;nginx&#x2F;sites-available，进来以后主要修改这个default文件。启起来。</p><p><code>vi  /etc/nginx/sites-available/default</code></p><p>我添加一行443端口的配置。这里指的是把443端口也开启起来，使用http2协议，并且开启了SSL&#x2F;TLS的加密。证书文件已经安装到nginx目录下面了，我们只需要把证书文件引用过来，添加两行：第一行指向的是证书的位置，第二行指向的是服务器的私钥地址。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">server &#123;</span><br><span class="line">   listen 80 default_server;</span><br><span class="line">   listen 443 ssl http2;</span><br><span class="line">   listen [::]:80 default_server;</span><br><span class="line"></span><br><span class="line">   ssl_certificate     /etc/nginx/tls/cert.pem;</span><br><span class="line">   ssl_certificate_key /etc/nginx/tls/key.pem;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>回到服务器执行这个命令：</p><p><code>crontab -e</code></p><p>发现有一个定时脚本，它会每天帮我们检查证书，如果发现证书快要到期了，就会帮助我们自动续签。也就是说，TLS证书这个事情，我们以后就不用操心了，acme.sh会为我们自动续签证书。</p><h2 id="家庭内网服务配置HTTPS"><a href="#家庭内网服务配置HTTPS" class="headerlink" title="家庭内网服务配置HTTPS"></a>家庭内网服务配置HTTPS</h2><p>这是我经常用的一个订阅微信公众号为RSS链接的项目，然后它有一个内网地址，然后使用的是4,000端口。我在路由器这里配置了端口转发，也就是说，把我内网的地址代理到公网上，同样的使用4,000端口。</p><h2 id="DDNS配置"><a href="#DDNS配置" class="headerlink" title="DDNS配置"></a>DDNS配置</h2><p>接下来我配置ddns go，这样就可以使用域名访问到内网服务。这些配置的技术原理还有具体介绍，爬爬虾的往期视频里面都有详细的介绍。如果对这块不熟悉的观众，可以找来看一下。这里我讲的比较快。</p><p>我们先把ddns go配好。进入我域名托管的Cloudflare网站，找到我的个人资料，API令牌–&gt;创建令牌-&gt;编辑区域DNS—&gt;使用模板，点击继续以显示摘要，创建令牌。</p><p><img src="https://bed.hdsh.hidns.vip/file/1748418559195_acme.sh6.webp" alt="图片"></p><p>我们把这个令牌复制下来，填写到DDNS go的这个TOKEN这里。</p><p><img src="https://bed.hdsh.hidns.vip/file/1748418559595_acme.sh7.webp" alt="图片"></p><p>接下来把IPV4启用，然后我们填写一个域名，这个域名就可以直接指向我的家庭内网服务。这里域名叫home.tech-shrimp.com，然后我们保存一下。</p><p><img src="https://bed.hdsh.hidns.vip/file/1748418559689_acme.sh8.webp" alt="图片"></p><h2 id="访问测试与证书配置"><a href="#访问测试与证书配置" class="headerlink" title="访问测试与证书配置"></a>访问测试与证书配置</h2><p>我把我的电脑切换成手机热点，这样就可以模拟互联网的外网访问。因为家庭网络里80跟443端口是默认禁止的，所以后面端口还是要接的4,000端口，然后我们回车。</p><p><img src="https://bed.hdsh.hidns.vip/file/1748418553324_acme.sh9.webp" alt="图片"></p><p>好这里显示出WeWe RSS，也就是说，我使用域名可以访问到我家庭的内网服务了。不过这里还是一个不安全，没有配置证书。</p><h2 id="安装acme-sh"><a href="#安装acme-sh" class="headerlink" title="安装acme.sh"></a>安装acme.sh</h2><p>接下来我马上演示使用ACME配置证书。接下来进入我内网的一个家庭服务器，我们执行这几个命令：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git <span class="built_in">clone</span> --depth 1 https://github.com/acmesh-official/acme.sh.git</span><br></pre></td></tr></table></figure><p>还是把邮箱改成我自己的，回车。</p><h2 id="DNS验证配置"><a href="#DNS验证配置" class="headerlink" title="DNS验证配置"></a>DNS验证配置</h2><p>接下来我们来生成证书。由于我家庭内网服务里面没有80端口，所以http验证的方式肯定是不行的。我们需要改成DNS验证，然后使用这个自动验证。</p><p>进来以后第一个就是Cloudflare，我们需要先配置两个环境变量。第一个是这个Cloudflare TOKEN，</p><p><img src="https://bed.hdsh.hidns.vip/file/1748418559095_acme.sh10.webp" alt="图片"></p><p>接下来我们需要第二个环境变量，这个名字叫做CF_Zone_ID。</p><p><img src="https://bed.hdsh.hidns.vip/file/1748418561537_acme.sh11.webp" alt="图片"></p><p>我们去Cloudflare官网去找这个区域ID，这里回到首页，找到我需要的那个域名tech-shrimp.com。右下角有一个API的区域ID，我把这个ID填写过来。</p><p>使用命令将两个环境变量配置好，一个是CF_Token，一个是CF_Zone_ID。</p><p><img src="https://bed.hdsh.hidns.vip/file/1748424144307_acme.sh13.webp" alt="图片"></p><h2 id="Nginx配置与反向代理"><a href="#Nginx配置与反向代理" class="headerlink" title="Nginx配置与反向代理"></a>Nginx配置与反向代理</h2><p>接下来我们用这个命令来配置证书。注意以下几点：</p><ol><li>首先是这个脚本的路径</li><li>接下来是DNS类型，这里DNS是dns_cf，对应cloudflare</li><li>后面是我的域名，这里是home.tech-shrimp.com</li></ol><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">/home/tech-shrimp/<span class="selector-class">.acme</span><span class="selector-class">.sh</span>/acme<span class="selector-class">.sh</span>   <span class="attr">--issue</span> <span class="attr">--dns</span> dns_cf -d home<span class="selector-class">.tech-shrimp</span><span class="selector-class">.com</span></span><br></pre></td></tr></table></figure><p>我们需要把证书安装到nginx里面。我先把nginx安装一下，现在我要做的是把证书导入到nginx里面，然后使用nginx做一个反向代理，把我家庭的服务代理出来。</p><p>&#x2F;root&#x2F;.acme.sh&#x2F;acme.sh   –install-cert  -d tech-shrimp.com \</p><p>--key-file           &#x2F;etc&#x2F;nginx&#x2F;tls&#x2F;key.pem</p><p>--fullchain-file   &#x2F;etc&#x2F;nginx&#x2F;tls&#x2F;cert.pem</p><p>--reloadcmd     “service nginx force-reload”</p><h2 id="反向代理"><a href="#反向代理" class="headerlink" title="反向代理"></a>反向代理</h2><p>最后一步我们还是配置nginx，这里我需要一个反向代理，把我家庭内网的服务通过nginx代理到公网上。这里还是进入&#x2F;etc&#x2F;nginx&#x2F;sites_available，我们来修改一下这个配置文件。这里我们添上https的端口，不过端口不能使用443端口了，家庭宽带没有443端口，这里我使用的是5,000端口。</p><p>接下来把服务器私钥跟证书配置上，这个还是跟之前一样的。最下面，这里我们需要做一个反向代理，这里的proxy pass填写内网的IP加端口。好我们保存一下，然后重启一下nginx：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">server &#123;</span><br><span class="line">   listen 80 default_server;</span><br><span class="line">   listen [::]:80 default_server;</span><br><span class="line">   listen 5000 ssl http2;</span><br><span class="line"></span><br><span class="line">   ssl_certificate     /etc/nginx/tls/cert.pem;</span><br><span class="line">   ssl_certificate_key /etc/nginx/tls/key.pem;</span><br><span class="line"></span><br><span class="line">   location / &#123;</span><br><span class="line">      proxy_pass http://192.168.31.76:4000/;</span><br><span class="line">   &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>服务器配置成功以后，我们别忘了在路由器添加一条端口转发，把内网服务器的5,000端口映射到公网上面。</p><h2 id="测试"><a href="#测试" class="headerlink" title="测试"></a>测试</h2><p>接下来我们来测试一下。通过连接我手机的热点，把我电脑切换到公网上，然后我们在浏览器输入我们的域名，后面端口就改成5,000端口，然后协议的话是https。我们可以看到成功的进行了访问。<br><img src="https://bed.hdsh.hidns.vip/file/1748424211993_acme.sh12.webp" alt="图片"><br>这里观众朋友们可能有一个误区，就是https跟443端口不是强绑定的关系。我们使用443端口只是可以省略不写端口，但是用任意一个端口都可以达成https协议的访问。包括我们看到这里的连接是安全的，证书也是有效的，浏览器这里也没有报任何的不安全提示。所以使用443以外的端口，一样可以达成https的访问，效果并没有什么不同。</p>]]></content>
      
      
      
        <tags>
            
            <tag> acme.sh </tag>
            
            <tag> HTTPS </tag>
            
            <tag> TLS </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Windows FileBrowser + Cloudflare Tunnel + SaaS 部署全套指南</title>
      <link href="/fws/FileBrowser/"/>
      <url>/fws/FileBrowser/</url>
      
        <content type="html"><![CDATA[<h2 id="✅-Windows-FileBrowser-Cloudflare-Tunnel-SaaS-部署全套指南"><a href="#✅-Windows-FileBrowser-Cloudflare-Tunnel-SaaS-部署全套指南" class="headerlink" title="✅ Windows FileBrowser + Cloudflare Tunnel + SaaS 部署全套指南"></a>✅ Windows FileBrowser + Cloudflare Tunnel + SaaS 部署全套指南</h2><h3 id="Cloudflare-Tunnel-SaaS-部署部分转载自技术爬爬虾"><a href="#Cloudflare-Tunnel-SaaS-部署部分转载自技术爬爬虾" class="headerlink" title="Cloudflare Tunnel + SaaS 部署部分转载自技术爬爬虾"></a>Cloudflare Tunnel + SaaS 部署部分转载自技术爬爬虾</h3><hr><h2 id="🧩-一、准备工具"><a href="#🧩-一、准备工具" class="headerlink" title="🧩 一、准备工具"></a>🧩 一、准备工具</h2><table><thead><tr><th>工具</th><th>用途</th></tr></thead><tbody><tr><td>FileBrowser for Windows</td><td>网页文件管理器</td></tr><tr><td>Cloudflare Tunnel (Cloudflared)</td><td>实现 HTTPS 外网访问，无需公网 IP</td></tr><tr><td>Cloudflare 账号 + 域名</td><td>管理 DNS 和 Zero Trust 隧道</td></tr><tr><td>计划任务 &#x2F; bat 脚本</td><td>实现开机自启</td></tr></tbody></table><hr><h2 id="📁-二、FileBrowser-安装与配置"><a href="#📁-二、FileBrowser-安装与配置" class="headerlink" title="📁 二、FileBrowser 安装与配置"></a>📁 二、FileBrowser 安装与配置</h2><h3 id="1️⃣-下载-FileBrowser"><a href="#1️⃣-下载-FileBrowser" class="headerlink" title="1️⃣ 下载 FileBrowser"></a>1️⃣ 下载 FileBrowser</h3><ul><li>访问 <a href="https://github.com/filebrowser/filebrowser/releases">https://github.com/filebrowser/filebrowser/releases</a></li><li>下载 <code>filebrowser_windows_amd64.exe</code></li><li>重命名为：<code>filebrowser.exe</code></li><li>放入目录：<code>E:\filebrowser\</code></li></ul><hr><h3 id="2️⃣-创建配置文件-filebrowser-json"><a href="#2️⃣-创建配置文件-filebrowser-json" class="headerlink" title="2️⃣ 创建配置文件 filebrowser.json"></a>2️⃣ 创建配置文件 <code>filebrowser.json</code></h3><p>路径：<code>E:\filebrowser\filebrowser.json</code></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">  &quot;port&quot;: 8080,</span><br><span class="line">  &quot;address&quot;: &quot;127.0.0.1&quot;,</span><br><span class="line">  &quot;log&quot;: &quot;stdout&quot;,</span><br><span class="line">  &quot;database&quot;: &quot;./data/filebrowser.db&quot;,</span><br><span class="line">  &quot;root&quot;: &quot;E:/&quot;,</span><br><span class="line">  &quot;auth.method&quot;: &quot;default&quot;,</span><br><span class="line">  &quot;branding.name&quot;: &quot;MyFileShare&quot;,</span><br><span class="line">  &quot;branding.disableExternal&quot;: true,</span><br><span class="line">  &quot;lockPassword&quot;: true</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><hr><h3 id="3️⃣-创建启动脚本-start-filebrowser-bat"><a href="#3️⃣-创建启动脚本-start-filebrowser-bat" class="headerlink" title="3️⃣ 创建启动脚本 start_filebrowser.bat"></a>3️⃣ 创建启动脚本 <code>start_filebrowser.bat</code></h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">@echo off</span><br><span class="line">cd /d E:\filebrowser</span><br><span class="line">start &quot;&quot; filebrowser.exe -c filebrowser.json</span><br></pre></td></tr></table></figure><hr><h3 id="4️⃣-设置开机启动（方法二选一）"><a href="#4️⃣-设置开机启动（方法二选一）" class="headerlink" title="4️⃣ 设置开机启动（方法二选一）"></a>4️⃣ 设置开机启动（方法二选一）</h3><h4 id="方法-A：放入启动目录"><a href="#方法-A：放入启动目录" class="headerlink" title="方法 A：放入启动目录"></a>方法 A：放入启动目录</h4><ul><li>按 <code>Win+R</code> → 输入：<code>shell:startup</code></li><li>把 <code>start_filebrowser.bat</code> 拖进去</li></ul><h4 id="方法-B：使用计划任务（推荐）"><a href="#方法-B：使用计划任务（推荐）" class="headerlink" title="方法 B：使用计划任务（推荐）"></a>方法 B：使用计划任务（推荐）</h4><ul><li><code>任务计划程序</code> → 创建基本任务</li><li>设置为「登录时」触发</li><li>操作 → 选择 <code>start_filebrowser.bat</code></li><li>勾选「使用最高权限运行」</li></ul><hr><h2 id="🌐-三、Cloudflare-Tunnel-外网-HTTPS-访问"><a href="#🌐-三、Cloudflare-Tunnel-外网-HTTPS-访问" class="headerlink" title="🌐 三、Cloudflare Tunnel 外网 HTTPS 访问"></a>🌐 三、Cloudflare Tunnel 外网 HTTPS 访问</h2><h2 id="直接Tunnel-页面部署，以下可跳过"><a href="#直接Tunnel-页面部署，以下可跳过" class="headerlink" title="+++直接Tunnel 页面部署，以下可跳过+++"></a>+++直接Tunnel 页面部署，以下可跳过+++</h2><p><strong>配置Tunnel</strong></p><p>我们点击这里的Zero Trust，</p><p><img src="https://bed.hdsh.hidns.vip/file/1748401475506_Tunnel1.webp"></p><p>这里随便起个名字，比如我叫tech shrimp。这里当然选择免费的这个，然后点击继续。到了这一步，</p><p><img src="https://bed.hdsh.hidns.vip/file/1748401483726_Tunnel2.webp"></p><p>先不用添加付款方式，选择直接回到Cloudflare的主页。</p><p><a href="https://dash.cloudflare.com/">https://dash.cloudflare.com</a></p><p>进来以后我们再点击Zero Trust，这样就直接进来了，不添加付款渠道也可以直接使用。</p><p>在Network这里找到Tunnel，这里添加一条隧道Add Tunnel，</p><p><img src="https://bed.hdsh.hidns.vip/file/1748401481203_Tunnel3.png"></p><p>然后选左侧的Cloudflare，点击确定。这里起个名字，然后点击Save Tunnel。</p><p>这里选择Windows 64位的，下面给出了安装方法，我们就按这个步骤来操作一下。</p><p>首先下载安装包</p><p><img src="https://bed.hdsh.hidns.vip/file/1748401480600_Tunnel4.png"></p><p>我有一个windows系统的家庭服务器，将安装包拷贝到家庭服务器，双击安装就可以了。</p><p>我部署了一个DDNS Go项目，它使用的端口是9876。</p><p><img src="https://bed.hdsh.hidns.vip/file/1748401481749_Tunnel5.png"></p><p>等下能从公网访问到这个地址，我们的内网穿透就成功了。</p><p>我们回到Cloudflare，在下载地址的下面，给了一个一键安装命令。</p><p><img src="https://bed.hdsh.hidns.vip/file/1748401476967_Tunnel6.webp"></p><p>我把它复制一下，回到我的家庭服务器，在任务栏搜索CMD，右键以管理员身份运行命令提示符</p><p><img src="https://bed.hdsh.hidns.vip/file/1748401486210_Tunnel7.webp"></p><p>然后再右键把这个命令粘过来，点击回车。这里显示就安装成功了。</p><p><img src="https://bed.hdsh.hidns.vip/file/1748401473456_Tunnel8.png"></p><p><strong>配置域名</strong></p><p>下一步我们来开始配置域名，这里随便起一个子域名，比如我叫ddnsgo。这里的域名就选择刚才托管好的域名，协议这里就根据需要填。我刚才是一个Web页面，我就选择HTTP协议，后面的URL就先写localhost，然后冒号接服务的端口，这里是9876。</p><p><img src="https://bed.hdsh.hidns.vip/file/1748401473915_Tunnel9.png"></p><p>保存成功以后，我们回到Tunnel的首页，很快这里显示出了Healthy，我们配置就完全成功了。访问一下这个地址。非常的完美，这里https证书也都自动给配置上了。</p><p><img src="https://bed.hdsh.hidns.vip/file/1748401477939_Tunnel10.png"></p><p><strong>方案的不足</strong></p><p>下面来讲一下这个方案的不足，主要有两点。首先是网速不稳，Cloudflare毕竟是美国企业，使用国内网络连接经常出现连接速度慢、不稳定等问题。第二点是其他协议还需要额外配置，比如这里的SSH、RDP、SMB协议，都还需要对客户端进行额外配置。</p><p><img src="https://bed.hdsh.hidns.vip/file/1748401476167_Tunnel11.png"></p><p>可以看到这里的文档，客户端必须先安装Cloudflare，然后再执行这个命令，将公网的SMB地址代理到本机的8445端口，然后再访问本机的8445端口才能进行SMB协议的通信。这样既要配置服务端，又要配置客户端，增加了很多的配置繁琐性。</p><p>所以这个方案比较适合一些轻量级的HTTP协议的服务。如果有比较重量级、比较复杂的内网访问需求的话，我建议还是看一下这期视频，使用IPV4端口转发，还有IPV6公网IP地址加DDNS实现内网访问。这个是我目前认为的最优方案。Cloudflare Tunnel还是有一些局限性的。</p><hr><h2 id="👥-四、用户共享配置（zqq-和-guest）"><a href="#👥-四、用户共享配置（zqq-和-guest）" class="headerlink" title="👥 四、用户共享配置（zqq 和 guest）"></a>👥 四、用户共享配置（zqq 和 guest）</h2><h3 id="方法：使用虚拟目录-符号链接"><a href="#方法：使用虚拟目录-符号链接" class="headerlink" title="方法：使用虚拟目录 + 符号链接"></a>方法：使用虚拟目录 + 符号链接</h3><h4 id="1️⃣-创建共享目录"><a href="#1️⃣-创建共享目录" class="headerlink" title="1️⃣ 创建共享目录"></a>1️⃣ 创建共享目录</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">mkdir E:\filebrowser\virtual\zguest</span><br><span class="line">mklink /D E:\filebrowser\virtual\zguest\zqq   E:\filebrowser\users\zqq</span><br><span class="line">mklink /D E:\filebrowser\virtual\zguest\guest E:\filebrowser\users\guest</span><br></pre></td></tr></table></figure><p>（需管理员 CMD 运行）</p><h4 id="2️⃣-FileBrowser-中创建用户-zqq："><a href="#2️⃣-FileBrowser-中创建用户-zqq：" class="headerlink" title="2️⃣ FileBrowser 中创建用户 zqq："></a>2️⃣ FileBrowser 中创建用户 <code>zqq</code>：</h4><ul><li>用户名：zqq</li><li>密码：自定义</li><li>Scope: <code>E:/filebrowser/virtual/zguest</code></li><li>权限：只读 或 读写</li><li>无需设置正则规则</li></ul><hr><h2 id="🧪-五、测试"><a href="#🧪-五、测试" class="headerlink" title="🧪 五、测试"></a>🧪 五、测试</h2><ul><li>本地访问：<code>http://127.0.0.1:8080</code></li><li>外部访问：<code>https://fws.example.com</code></li><li>登录用户 zqq，验证只能看到 zqq 与 guest 文件夹</li></ul><hr><h2 id="🎯-附加：推荐目录结构"><a href="#🎯-附加：推荐目录结构" class="headerlink" title="🎯 附加：推荐目录结构"></a>🎯 附加：推荐目录结构</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">E:\</span><br><span class="line">├── filebrowser\</span><br><span class="line">│   ├── filebrowser.exe</span><br><span class="line">│   ├── filebrowser.json</span><br><span class="line">│   ├── virtual\</span><br><span class="line">│   │   └── zguest\</span><br><span class="line">│   └── users\</span><br><span class="line">│       ├── zqq\</span><br><span class="line">│       └── guest\</span><br><span class="line">├── cloudflared\</span><br><span class="line">│   ├── cloudflared.exe</span><br><span class="line">│   └── config.yml</span><br></pre></td></tr></table></figure><hr><h2 id="IP优选，内网穿透加速"><a href="#IP优选，内网穿透加速" class="headerlink" title="IP优选，内网穿透加速"></a>IP优选，内网穿透加速</h2><p>如果对速度有更高的要求的话，我们接下来往下看。我们配置好第一个辅助域名以后，我们再把自己的主力域名也配上。这里还是点击add a publichostname，我的主力域名是使用tech-shrimp.com，子域名的话www，这里的配置是一样的，同样的是使用我的内网地址8080保存。这样我们两个域名都配置好了，上面是辅助域名，下面是主力域名。</p><p><img src="https://bed.hdsh.hidns.vip/file/1748402459371_SaaS1.webp" alt="图片"></p><p>到目前为止，这两个域名都可以通过cloudflare的tunnel服务连接到我内网的nginx服务器上面。流量会先经过Cloudflare的CDN节点，然后通过隧道打通到我的内网。cloudflare在全球有上千的CDN节点，给隧道加速的关键就是如何选择最优的CDN进行服务。</p><p><img src="https://bed.hdsh.hidns.vip/file/1748402463728_SaaS2.webp" alt="图片"></p><p>第一步，我们先取消掉主域名的DNS解析。我们点击左上角的小云朵，进入Cloudflare主页，然后我们选择这个主力域名，选择左侧的DNS。这里有一个www的CNAME解析，这个就是tunnel自动生成的那个解析，我们先把它删掉。我们展开编辑，这里点击删除，也就是先让我们的主力域名跟tunnel先解绑。</p><p><img src="https://bed.hdsh.hidns.vip/file/1748402459538_SaaS3.webp" alt="图片"></p><h2 id="自定义主机配置"><a href="#自定义主机配置" class="headerlink" title="自定义主机配置"></a>自定义主机配置</h2><p>我们进行第二步，自定义主机回退源。我们先切换到辅助域名，也就是.top这个域名。我们点击这里的SSL&#x2F;TLS，点击自定义主机名。这里需要绑定一个支付方式才能进来这个页面，我选择的是Paypal的方式。绑定好以后，选择那个免费服务。</p><p><img src="https://bed.hdsh.hidns.vip/file/1748402463080_SaaS4.webp" alt="图片"></p><p>进入这个页面以后，我们开始添加回退源origin.tech-shrimp.top。点击添加回退源，然后我们点击添加自定义主机名，这里填写我的主力域名就是tech-shrimp.com，下面这些都默认，直接点击添加自定义主机名。</p><p>这里显示出了错误，我们展开看一下，</p><p><img src="https://bed.hdsh.hidns.vip/file/1748402453230_SaaS5.webp" alt="图片"></p><p>需要把这两个填写到对应的.com域名下面验证域名的所有权。好，我们来配置一下，这里我新开了一个窗口，这次我切换到主力域名tech-shrimp.com下面，然后我点击添加记录。</p><p><img src="https://bed.hdsh.hidns.vip/file/1748402451890_SaaS6.webp" alt="图片"></p><p>把两个txt类型的解析，填入主力域名tech-shrimp.com的DNS设置里面。</p><p>我们回到自定义主机回退源界面，等待一会儿，然后点击刷新，等到这里都是绿色，显示出有效，那就配置成功了。</p><p><img src="https://bed.hdsh.hidns.vip/file/1748402458732_SaaS7.webp" alt="图片"></p><p>我们进行第三步，再引入一个新域名cdn.tech-shrimp.top，借助它实现DNS线路分流。回到.top域名的DNS记录，这里点击添加记录，类型选择CNAME，名称填写CDN，目标的话我使用社区解析好的这个地址复制过来，这里注意一定要把小黄云关闭，点击保存。</p><p><img src="https://bed.hdsh.hidns.vip/file/1748402460025_SaaS8.webp" alt="图片"></p><p>我们进行最后一步，再添加一个CNAME。回到我们的主力域名tech-shrimp.com，然后点击添加记录，这里CNAME类型的记录，子域名的话是www，解析到这个地址cdn.tech-shrimp.top，这里是重点，我们把小黄云关闭，最后点击保存。</p><p><img src="https://bed.hdsh.hidns.vip/file/1748402462130_SaaS9.webp" alt="图片"></p><p>到这一步我们的所有配置就成功了。接下来我们来试一下效果，我们先来测一下直连这个回退源，也就是origin的这个网址。可以看到平均用时是1.58秒，有7个访问失败。cloudflare只为我们分配了两个出口节点的IP，如果这两个IP的网络状况不佳，就很容易造成失败。</p><p><img src="https://bed.hdsh.hidns.vip/file/1748402459342_SaaS10.webp" alt="图片"></p><p>我们再来看做了线路优选以后的结果，这次平均访问用时降到了1.04秒，只有两个失败。我们可以看到，出口节点的数量变多到了30个，根据每个省份的网络环境不同，它自动进行了线路优选，并且选择了最优的线路进行服务，大幅降低了延迟跟失败概率。</p><p><img src="https://bed.hdsh.hidns.vip/file/1748402462730_SaaS11.webp" alt="图片"></p>]]></content>
      
      
      
        <tags>
            
            <tag> FileBrowser </tag>
            
            <tag> Windows </tag>
            
            <tag> Cloudflare </tag>
            
            <tag> Tunnel </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>3x-ui面板搭建！一键搭建xray面板科学上网，轻松自建vps节点</title>
      <link href="/fws/3x-ui%E9%9D%A2%E6%9D%BF%E6%90%AD%E5%BB%BA/"/>
      <url>/fws/3x-ui%E9%9D%A2%E6%9D%BF%E6%90%AD%E5%BB%BA/</url>
      
        <content type="html"><![CDATA[<h1 id="3x-ui面板搭建！一键搭建xray面板科学上网，轻松自建vps节点"><a href="#3x-ui面板搭建！一键搭建xray面板科学上网，轻松自建vps节点" class="headerlink" title="3x-ui面板搭建！一键搭建xray面板科学上网，轻松自建vps节点"></a>3x-ui面板搭建！一键搭建xray面板科学上网，轻松自建vps节点</h1><p>🕓2025年1月28日</p><p>视频教程：▶<a href="https://youtu.be/BzjNZFCvBcY">https://youtu.be/BzjNZFCvBcY</a></p><p><strong>一、什么是3x-ui</strong><br>3x-ui是一个支持多协议、多用户的Xray面板，具有过期日期、流量和IP限制功能。它能够同时支持Vmess、Vless、Trojan、<br>ShadowSocks和Wireguard等多种协议，为用户提供更灵活的选择。通过该面板，用户可以轻松管理多个用户账户，设置过期日期和流量限制，同时对IP进行限制，确保服务器资源的合理利用和安全性。<br>Xray面板的这些功能使得它成为搭建和管理代理服务器的理想选择，特别适用于需要高效管理和安全控制的场景。</p><p>3X-UI开源项目地址:<a href="https://github.com/MHSanaei/3x-ui">https://github.com/MHSanaei/3x-ui</a></p><p><strong>3X-ui 面板特点</strong></p><ol><li>系统状态监控</li><li>支持多用户、多协议，网页可视化操作</li><li>支持协议，包括 VMESS、VLESS、Trojan、Shadowsocks、Dokodemo-door、Socks、HTTP、wireguard</li><li>支持 XTLS 原生协议，包括 RPRX-Direct、Vision、REALITY</li><li>流量统计、流量限制、过期时间限制</li><li>可定制的Xray配置模板</li><li>支持HTTPS访问面板（自备域名+SSL证书）</li><li>支持一键SSL证书申请及自动续订</li><li>更多高级配置项请参考面板<a href="https://github.com/MHSanaei/3x-ui"> &gt;&gt;点击访问</a></li></ol><p><img src="https://www.kejixiaolu.com/djvps/images/dj32.png" alt="img"></p><p><strong>二、准备工作</strong><br>1、域名一个，并托管到 <a href="https://dash.cloudflare.com/1fd6ef1f052a191089c7a5628aa6f5a7">Cloudflare</a><br>推荐在 <a href="https://www.namesilo.com/?rid=fe81174he">Namesilo </a>进行购买（新用户1美元优惠券：kejixiaolu），因为他的 WHOIS 隐私 是免费的，可以适当的进行一下隐私保护，而且域名还都挺便宜的。（域名可以在 <a href="https://www.namesilo.com/?rid=fe81174he">Namesilo </a>解析，也可以将域名托管到 <a href="https://dash.cloudflare.com/1fd6ef1f052a191089c7a5628aa6f5a7"> Cloudflare</a><a href="https://dash.cloudflare.com/1fd6ef1f052a191089c7a5628aa6f5a7"> </a>，解析更快。）<br>检测服务器IP是否被封，确认IP可用。<br>已经解析的域名，Win+R 输入 CMD 回车：键入ping 空格输入你的域名，检查一下是否可以 ping 通。</p><p>2、一台境外 VPS 主流系统。 例如：Debian 11+ &#x2F; Ubuntu 20.04+ &#x2F; CentOS 8+<br>六六云VPS注册网址：<a href="https://kjxl.cc/666clouds">https://kjxl.cc/666clouds</a>（双ISP，支持tiktok）<br>全站九折优惠：XL666<br>年付七折优惠：year30off</p><p>Vultr 注册网址：<a href="https://www.vultr.com/?ref=9735525">https://kjxl.cc/vultr </a>（按时计费，最低6$&#x2F;月。）</p><p>3、下载并安装 FinalShell SSH 工具<br>Windows、macOS、Linux 版下载地址：<a href="https://www.hostbuf.com/t/988.html">点击下载</a></p><p><strong>三、开始安装使用3x-ui</strong></p><p><strong>3.1、一键安装依赖包</strong></p><p><strong>更新及安装组件</strong>。下面环境的安装方式，大家根据自己的系统选择命令安装就好了。<br>1、Debian&#x2F;Ubuntu系统：</p><p><code>sudo apt install git -y</code></p><p>2、CentOS系统：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">sudo yum install git -y</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash"><span class="comment">## **如果执行后出错，请先更新系统**</span></span></span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash"><span class="comment">## （Debian/Ubuntu系统）</span></span>  </span><br><span class="line"></span><br><span class="line">sudo apt update -y</span><br><span class="line"></span><br><span class="line">（CentOS系统）</span><br><span class="line"></span><br><span class="line">sudo yum update -y</span><br></pre></td></tr></table></figure><p><strong>3.2、一键安装脚本</strong></p><p>bash &lt;(curl -Ls <a href="https://raw.githubusercontent.com/mhsanaei/3x-ui/master/install.sh">https://raw.githubusercontent.com/mhsanaei/3x-ui/master/install.sh</a>)</p><p>在运行脚本以后，会提示你Would you like to customize the Panel Port settings? (If not, a random port will be applied) [y&#x2F;n]:<br>这里的意思是：您是否要自定义面板端口设置？（如果不想，将应用随机端口），建议输入y进行自定义配置。</p><p>Please set up the panel port: 后面输入你要设置的面板端口<br>然后就安装完成了，下面会出现3x-ui面板URL地址、设置的端口、随机生成的用户登录信息。建议将信息保存下来，后面登录用。</p><p><img src="https://www.kejixiaolu.com/djvps/images/dj29.png" alt="img"></p><p><strong>3.3、申请SSL证书</strong></p><p>以后想要在ssh连接里面进行3x-ui的设置，只需要输入 x-ui 然后回车就会出现3x-ui的管理面板，如下：</p><p><img src="https://www.kejixiaolu.com/djvps/images/dj30.png" alt="img"></p><p>输入数字 “18” SSL 证书管理，接下来输入“1” Get SSL，开始申请证书，注意：这里需要放行80端口。</p><p><img src="https://www.kejixiaolu.com/djvps/images/dj31.png" alt="img"></p><p>按照提示输入解析好的域名并确保域名能ping通，在运行脚本以后，会提示你“Would you like to set this certificate for the panel? (y&#x2F;n): ”这句话意思是问你：您想为面板设置此证书吗？这里我们输入“y”为面板设置刚申请的证书。</p><p><strong>3.4、关闭防火墙&#x2F;放行端口</strong></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">关闭防火墙 #</span><br><span class="line"></span><br><span class="line">sudo ufw disable</span><br><span class="line"></span><br><span class="line">需要放行的端口 #</span><br><span class="line">例：如需放行80端口，代码：ufw allow 80</span><br><span class="line"></span><br><span class="line">ufw allow</span><br></pre></td></tr></table></figure><p><strong>四、3X-ui 面板登录</strong></p><p>在浏览器输入3x-ui面板URL地址，在下方的语言设置里面设置为中文。然后输入你的用户名和密码进入。</p><p><img src="https://www.kejixiaolu.com/djvps/images/dj32.png" alt="img"></p><p><strong>五、 BBR 加速</strong></p><p>SSH 里面可以输入x-ui操作命令，输入“23” 启用 BBR ，根据提示再输入1，BBR就启用了</p><p><img src="https://www.kejixiaolu.com/djvps/images/dj33.png" alt="img"></p><p><strong>验证 BBR 是否成功启用：</strong><br>执行以下命令，确认 BBR 已被启用：</p><p><code>sysctl net.ipv4.tcp_available_congestion_control</code></p><p>输出结果应包含 bbr，表示 BBR 已成功启用。</p><p><strong>六、配置节点使用</strong></p><p>6.1、<strong>节点配置</strong><br>注意：搭建节点如果不能上网，记得要放行节点端口。</p><p><img src="https://www.kejixiaolu.com/djvps/images/dj34.png" alt="img"></p><p>节点配置及功能方面，请看 <a href="https://youtu.be/BzjNZFCvBcY">视频教程</a></p><p>6.2**、客户端**<br>Windows（v2rayN）：<a href="https://github.com/2dust/v2rayN">https://github.com/2dust/v2rayN</a><br>Android（v2rayNG）：<a href="https://github.com/2dust/v2rayNG">https://github.com/2dust/v2rayNG</a><br>IOS（shadowrocket）：<a href="https://apps.apple.com/app/shadowrocket/id932747118">https://apps.apple.com/app/shadowrocket/id932747118</a></p><p><strong>七 、IP纯净度检测</strong></p><p><strong>连接节点IP，保证whoer检测100%</strong><br>打<a href="https://whoer.net/zh">fwhoer.net</a>, 检查伪装度和时区<br>打开<a href="https://bgp.he.net/">bgp.he.net</a>，再次检查是否为原生IP。<br>首先打开bgp.he.net ，自己的服务器，肯定都知道机房位置的，所以我们要做的就是看下这个IP的 whois信息中的地区&#x2F;国家与你机房的位置是否一致。<br>或者打开<a href="https://ipinfo.io/">ipinfo.io</a>，检测IP的类型以及是否原生。。</p><p><strong>八、检测端口是否被封</strong><br>端口被封的原因是多方面的，目前并没有哪一种节点可以保证不被封，本期讲的这三种方式也不例外，所以如果你的节点突然无法使用了，可以用以下方式进行排查。<br>打开 <a href="https://ping.pe/">ping.pe</a><br>输入 IP 检测 ping 可用<br>输入 IP:Port 检查端口是否可用<br>主要是看最后几个是否为绿色</p>]]></content>
      
      
      
        <tags>
            
            <tag> 3x-ui </tag>
            
            <tag> VPS </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>RackNerd 搭建VPN节点Hysterial2 套CDN 加速</title>
      <link href="/fws/RackNerd-Hysterial2/"/>
      <url>/fws/RackNerd-Hysterial2/</url>
      
        <content type="html"><![CDATA[<h3 id="最性价比vps之RackNerd-搭建VPN节点-采用Hysterial2"><a href="#最性价比vps之RackNerd-搭建VPN节点-采用Hysterial2" class="headerlink" title="最性价比vps之RackNerd 搭建VPN节点 采用Hysterial2"></a>最性价比vps之RackNerd 搭建VPN节点 采用Hysterial2</h3><p>日期： <a href="https://afeinet.blogspot.com/2024/11/02.html">十一月 02, 2024</a></p><p>大家好, 我是阿飞<br>今天要跟大家分享让VPS提速的办法<br>如果你有一个VPS, 发现连接速度很慢或者VPS的IP已经被墙了<br>那么今天, 阿飞就教大家如何来解决这两个痛点.<br>同时, 今天的搭建方案也能解锁chatgpt和奈飞.</p><p><a href="https://blogger.googleusercontent.com/img/b/R29vZ2xl/AVvXsEiS66YVcGxNydHusrGgokV8Ql9qDWQ2IrYv5ZES_Mqr3b-LDEqR4k5xfFlAKxgOLcgvuVPZc9QReWdG9vtpPLMYdlaNSjRqfREcKvqQn9Ip4YVD14whQMU2UuHsiJVJUQb_8NDvhTR7rxb_t5MHp4yenZ_2JaiIkIX8YglgvPBXcvtVKZZBGzIy4fiWwlVD/s1280/%E8%AE%A9vps%E8%B5%B7%E9%A3%9E%20%E6%90%AD%E5%BB%BAvpn%E8%8A%82%E7%82%B9%20%E9%87%87%E7%94%A8Hysterial2%20%E5%A5%97CDN%20%E5%8A%A0%E9%80%9F%20%E8%A7%A3%E5%86%B3vps%E9%80%9F%E5%BA%A6%E6%85%A2%20%E8%A7%A3%E5%86%B3vps%E7%9A%84IP%E8%A2%AB%E5%A2%99.jpg"><img src="https://blogger.googleusercontent.com/img/b/R29vZ2xl/AVvXsEiS66YVcGxNydHusrGgokV8Ql9qDWQ2IrYv5ZES_Mqr3b-LDEqR4k5xfFlAKxgOLcgvuVPZc9QReWdG9vtpPLMYdlaNSjRqfREcKvqQn9Ip4YVD14whQMU2UuHsiJVJUQb_8NDvhTR7rxb_t5MHp4yenZ_2JaiIkIX8YglgvPBXcvtVKZZBGzIy4fiWwlVD/w640-h360/%E8%AE%A9vps%E8%B5%B7%E9%A3%9E%20%E6%90%AD%E5%BB%BAvpn%E8%8A%82%E7%82%B9%20%E9%87%87%E7%94%A8Hysterial2%20%E5%A5%97CDN%20%E5%8A%A0%E9%80%9F%20%E8%A7%A3%E5%86%B3vps%E9%80%9F%E5%BA%A6%E6%85%A2%20%E8%A7%A3%E5%86%B3vps%E7%9A%84IP%E8%A2%AB%E5%A2%99.jpg" alt="img"></a></p><p><a href="https://www.youtube.com/@afeinet">视频地址</a></p><p>start</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">章节</span><br><span class="line">00:00 开场白</span><br><span class="line">00:14 准备1台vps</span><br><span class="line">00:50 准备1个域名</span><br><span class="line">01:18 域名托管到CF</span><br><span class="line">01:48 域名绑定vps</span><br><span class="line">02:41 检测绑定的域名是否生效</span><br><span class="line">03:04 finalshell连接vps</span><br><span class="line">04:01 搭建节点</span><br><span class="line">07:19 开启CF的CDN</span><br><span class="line">07:56 电脑客户端配置VPN</span><br><span class="line">12:25 节点速度设置及测速</span><br><span class="line">13:57 解锁GPT和奈飞演示.mp4</span><br><span class="line">14:07 开启Tun模式</span><br><span class="line">14:46 套CDN前后对比</span><br><span class="line">15:22 下期再加速方案预告</span><br></pre></td></tr></table></figure><h2 id="1-准备1个vps"><a href="#1-准备1个vps" class="headerlink" title="1.准备1个vps"></a>1.准备1个vps</h2><p>本教程采用的是racknerd的vps, 支持支付宝.<br>1年只要10刀, 3T月流量. 优惠码: 15OFFDEDI</p><table><thead><tr><th>内存</th><th>CPU</th><th>SSD</th><th>流量</th><th>价格</th><th>购买网址</th><th>备注</th></tr></thead><tbody><tr><td>1.0 G</td><td>1核</td><td>17G</td><td>3T&#x2F;月</td><td>$10.98&#x2F;年</td><td>👉<a href="https://bit.ly/3YDpRSR">链接</a></td><td>最新特惠</td></tr><tr><td>2.5 G</td><td>2核</td><td>40G</td><td><strong>6T</strong>&#x2F;月</td><td>$16.88&#x2F;年</td><td>👉<a href="https://bit.ly/4gfp7cv">链接</a></td><td><strong>洛杉矶 DC2</strong>机房 重点推荐 速度快</td></tr><tr><td>3.0 G</td><td>2核</td><td>60G</td><td><strong>11T</strong>&#x2F;月</td><td>$23.88&#x2F;年</td><td>👉<a href="https://bit.ly/49exd32">链接</a></td><td><strong>洛杉矶 DC2</strong>机房 重点推荐 速度快</td></tr></tbody></table><p>更多套餐👉<a href="https://afeinet.blogspot.com/2024/10/22.html">点我前往</a></p><p>注册视频教程👉<a href="https://www.youtube.com/results?search_query=ttqOSrIlL48">点我前往</a></p><p>当然, 你也可以使用其他品牌或者免费的vps.</p><h2 id="登录vps官网-获取-ip地址"><a href="#登录vps官网-获取-ip地址" class="headerlink" title="登录vps官网, 获取 ip地址"></a>登录vps官网, 获取 ip地址</h2><p>官网👉<a href="https://my.racknerd.com/aff.php?aff=12580">点我前往</a></p><h2 id="获取vps登录信息"><a href="#获取vps登录信息" class="headerlink" title="获取vps登录信息"></a>获取vps登录信息</h2><p>登录你注册时用的邮箱, vps所有登录信息都在邮件里.</p><h2 id="2-准备1个域名"><a href="#2-准备1个域名" class="headerlink" title="2.准备1个域名"></a>2.准备1个域名</h2><p><strong>付费域名</strong><br>1年只要1美元, 支持支付宝<br>注册网址👉<a href="https://www.namesilo.com/?rid=c8fe444rr">www.namesilo.com</a><br>优惠码: <code>afeifree</code><br>小白 注册视频教程:<br><a href="https://youtu.be/U0Mmh9atE6w&t=109s">https://youtu.be/U0Mmh9atE6w&amp;t=109s</a></p><p><strong>免费域名</strong><br>小白 us.kg 注册教程:<br><a href="https://youtu.be/TVkLIwJnIYs">https://youtu.be/TVkLIwJnIYs</a></p><h2 id="3-域名托管到-Cloudflare"><a href="#3-域名托管到-Cloudflare" class="headerlink" title="3.域名托管到 Cloudflare"></a>3.域名托管到 Cloudflare</h2><p>注册1个Cloudflare账号<br>注册网址: <a href="https://www.cloudflare.com/zh-cn/">cloudflare.com</a><br>小白 注册视频教程:<br><a href="https://youtu.be/U0Mmh9atE6w&t=37s">https://youtu.be/U0Mmh9atE6w&amp;t=37s</a><br>小白 域名托管到Cloudflare<br><a href="https://youtu.be/U0Mmh9atE6w&t=612s">https://youtu.be/U0Mmh9atE6w&amp;t=612s</a></p><p><strong>注册 Cloudflare 并添加域名</strong>：<br>登录 Cloudflare，将你拥有的域名添加到 Cloudflare。</p><p><strong>更改域名的 DNS 记录</strong>：<br>将域名的 DNS A 记录指向 VPS 的 IP 地址（如 192.3.85.247,改成你自己的IP），<br>暂时不要启用 <strong>CDN 加速</strong>（不是橙色小云图标, 而是灰色小云图标）。</p><h2 id="4-ssh链接vps"><a href="#4-ssh链接vps" class="headerlink" title="4.ssh链接vps"></a>4.ssh链接vps</h2><p>本教程采用 finalshell作为连接vps的工具.<br>finalshell下载链接:<br>请先<strong>转存</strong>到你自己的<strong>云盘</strong>, 再下载, 避免失联<br>Windows X64版,下载地址:<br><a href="https://pan.baidu.com/s/1ls9KdXGI4RjECyuXpzvBjw?pwd=afei">百度云</a> <a href="https://pan.quark.cn/s/17448b767b97">夸克云</a><br>macOS Arm版,支持m1,m2,m3 cpu,下载地址:<br><a href="https://pan.baidu.com/s/1JtoZBlLXfAkWG_8Yw1FaCQ?pwd=afei">百度云</a> <a href="https://pan.quark.cn/s/424b0411592b">夸克云</a><br>macOS X64版,支持旧款intel cpu,下载地址:<br><a href="https://pan.baidu.com/s/1xxKyvFslyF2Y4lReuV6E2g?pwd=afei">百度云</a> <a href="https://pan.quark.cn/s/5eb21d7b25de">夸克云</a><br>当然,你也可以前往其官网下载</p><p>小白 finalshell 下载及安装教程:<br><a href="https://youtu.be/-p6Cy_j-mXI&t=39s">https://youtu.be/-p6Cy_j-mXI&amp;t=39s</a></p><p><strong>卸载旧脚本</strong><br>如果你是全新VPS, 可以跳过此步骤.<br>如果你采用了我这个教程而搭建的vpn节点, 请按下面步骤执行.<br>停止Hysteria2</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">systemctl stop hysteria-server.service</span><br></pre></td></tr></table></figure><p>复制 粘贴以下脚本</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">wget -N --no-check-certificate https://raw.githubusercontent.com/flame1ce/hysteria2-install/main/hysteria2-install-main/hy2/hysteria.sh &amp;&amp; bash hysteria.sh</span><br></pre></td></tr></table></figure><p>输入 2<br>卸载脚本</p><p><strong>查看防火墙开启了哪些端口</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ufw status</span><br></pre></td></tr></table></figure><p><strong>开启端口80</strong> 443</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">iptables -I INPUT -p tcp --dport 80 -j ACCEPT</span><br><span class="line">iptables -I INPUT -p tcp --dport 443 -j ACCEPT</span><br></pre></td></tr></table></figure><p>或者<br>懒人模式 关闭防火墙 开启所有端口</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ufw disable</span><br></pre></td></tr></table></figure><h2 id="5-搭建节点"><a href="#5-搭建节点" class="headerlink" title="5.搭建节点"></a>5.搭建节点</h2><p>一键安装Hysteria2</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">bash &lt;(curl -fsSL https://get.hy2.sh/)</span><br></pre></td></tr></table></figure><p>显示三行红字, 代表安装成功</p><p>设置开机自启</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">systemctl enable hysteria-server.service</span><br></pre></td></tr></table></figure><p>生成自签证书</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">openssl req -x509 -nodes -newkey ec:&lt;(openssl ecparam -name prime256v1) -keyout /etc/hysteria/server.key -out /etc/hysteria/server.crt -subj &quot;/CN=bing.com&quot; -days 36500 &amp;&amp; sudo chown hysteria /etc/hysteria/server.key &amp;&amp; sudo chown hysteria /etc/hysteria/server.crt</span><br></pre></td></tr></table></figure><p>服务器配置文件<br>请先<strong>转存</strong>到你自己的<strong>云盘</strong>, 再下载, 避免失联<br><a href="https://pan.baidu.com/s/1xQ59MMgs0qFZUxpjOQzgCA?pwd=afei">百度云</a> <a href="https://pan.quark.cn/s/dc428835650e">夸克元</a></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">cat &lt;&lt; EOF &gt; /etc/hysteria/config.yaml</span><br><span class="line">listen: :443 #监听端口</span><br><span class="line"></span><br><span class="line">#使用CA证书</span><br><span class="line">acme:</span><br><span class="line">  domains:</span><br><span class="line">    - hy2.dpdns.org #你的域名，需要先解析到服务器ip</span><br><span class="line">  email: huheng@proton.me</span><br><span class="line"></span><br><span class="line">auth:</span><br><span class="line">  type: password</span><br><span class="line">  password: hy2usvps #设置认证密码</span><br><span class="line">  </span><br><span class="line">masquerade:</span><br><span class="line">  type: proxy</span><br><span class="line">  proxy:</span><br><span class="line">    url: https://bing.com #伪装网址</span><br><span class="line">    rewriteHost: true</span><br><span class="line">EOF</span><br></pre></td></tr></table></figure><p>根据你的个人情况, 可修改以下参数:<br>监听端口 443<br>密码 123456<br>伪装网站 <a href="http://www.bing.com/">www.bing.com</a></p><p>本教程采用CA证书, 需要1个域名,<br>将域名解析到vps</p><p>复制上面的服务器配置文件, 粘贴到vps, 敲回车</p><p>查看Hysteria2状态</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">systemctl status hysteria-server.service</span><br></pre></td></tr></table></figure><p>如果是 inactive (dead), 代表没有启动</p><p>确认已经是英文输入状态, 按 <code>q</code> 键 退出查看状态</p><p>重启Hysteria2</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">systemctl restart hysteria-server.service</span><br></pre></td></tr></table></figure><p>查看Hysteria2状态</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">systemctl status hysteria-server.service</span><br></pre></td></tr></table></figure><p>看到绿色字体的 active (ruuning) 代表hysterial服务已经运行</p><p>如果最后一行末尾是 acme_client 则等待1分钟后, 再次查看Hysteria2状态</p><p>重复以上查看步骤<br>直到在最后一行末尾看到 server up and running 为止</p><p>设置开机自启</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">systemctl enable hysteria-server.service</span><br></pre></td></tr></table></figure><hr><h2 id="6-电脑客户端-配置"><a href="#6-电脑客户端-配置" class="headerlink" title="6.电脑客户端 配置"></a>6.电脑客户端 配置</h2><p>下载 v2rayN 6.60版<br>请先<strong>转存</strong>到你自己的<strong>云盘</strong>, 再下载, 避免失联</p><p>下载 “宝箱”：<br>👉<a href="https://pan.baidu.com/s/1xxKyvFslyF2Y4lReuV6E2g?pwd=afei">百度云</a>  👉<a href="https://pan.quark.cn/s/8641a1edfdb3">夸克云</a><br>下载 “钥匙”：<br>👉<a href="https://pan.baidu.com/s/1IVNILOElgUshCYjtpls5LQ?pwd=afei">百度云</a>  👉<a href="https://pan.quark.cn/s/62d3e80719c4">夸克云</a></p><p>使用方法：<br>1.把”钥匙”复制到”宝箱”的文件夹的内部, 使得所有文件放在同一个文件夹内;<br>2.双击”afei”, 获得宝物.</p><p>当然, 你也可以去其官网进行下载<br><a href="https://github.com/2dust/v2rayN/releases/latest">https://github.com/2dust/v2rayN/releases/latest</a></p><p>找到目录</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">v2rayN\zz_v2rayN-With-Core-SelfContained\bin\hysteria2</span><br></pre></td></tr></table></figure><p>删除旧文件</p><p>下载hysterial2<br>请先<strong>转存</strong>到你自己的<strong>云盘</strong>, 再下载, 避免失联<br>Windows X64<br><a href="https://pan.baidu.com/s/1vEbKVddPTSIaYQtHyIZWoQ?pwd=afei">百度云</a> <a href="https://pan.quark.cn/s/3dabc463ca82">夸克元</a><br>当然, 你也可以去其官网进行下载<br><a href="https://github.com/apernet/hysteria/releases">https://github.com/apernet/hysteria/releases</a></p><p>将下载的exe文件粘贴到目录</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">zz_v2ryaN\bin\hysteria</span><br></pre></td></tr></table></figure><p>关掉梯子, 不挂代理, 测试你的上网速度</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">speedtest.cn</span><br></pre></td></tr></table></figure><p>客户端配置文件<br>请先<strong>转存</strong>到你自己的<strong>云盘</strong>, 再下载, 避免失联<br><a href="https://pan.baidu.com/s/1xQ59MMgs0qFZUxpjOQzgCA?pwd=afei">百度云</a> <a href="https://pan.quark.cn/s/dc428835650e">夸克元</a></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">server: 192.3.85.247:443 #你的vps的ipv4</span><br><span class="line">auth: afei123 #密码</span><br><span class="line"></span><br><span class="line">bandwidth:</span><br><span class="line">  up: 20 mbps #你家宽带的上传速度</span><br><span class="line">  down: 100 mbps #下载速度</span><br><span class="line">  </span><br><span class="line">tls:</span><br><span class="line">  sni: hy.afeifree.com #你的域名</span><br><span class="line">  insecure: false #使用自签时需要改成true</span><br><span class="line"></span><br><span class="line">socks5:</span><br><span class="line">  listen: 127.0.0.1:1080</span><br><span class="line">http:</span><br><span class="line">  listen: 127.0.0.1:8080</span><br></pre></td></tr></table></figure><p>如果你觉得网速够用就行, 可以填比最大速度稍小的数值.<br>比如, 想要观看流畅4K, 50MB的速度, 足矣.</p><p>复制以上配置, 新建文本文件, 粘贴, 保存为”hy-afei”.</p><p>打开v2rayN, 服务器&gt;添加自定义配置服务器<br>别名: hy-afei<br>地址: 点击”编辑”按钮, 选择上面的文本文件”hy-afei”.<br>Core类型: hysteria2<br>Socks端口: 1080</p><p>测速</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">speedtest.net</span><br></pre></td></tr></table></figure><p>如果要启用Tun模式 , 右键 v2ray , 选择 管理员运行.<br>来到v2ray, 开启tun模式<br>实现真正的VPN上网.</p><h2 id="7-配置-Cloudflare-CDN"><a href="#7-配置-Cloudflare-CDN" class="headerlink" title="7.配置 Cloudflare CDN"></a>7.配置 Cloudflare CDN</h2><p>启用 <strong>CDN 加速</strong>（橙色小云图标）。<br><strong>设置端口穿透</strong>： Cloudflare 默认仅支持 80 和 443 端口。确保 Hysteria2 运行在这些端口上。</p><p>\8. 其他命令 参考</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">#移除 Hysteria 及相关服务</span><br><span class="line">bash &lt;(curl -fsSL https://get.hy2.sh/) --remove</span><br><span class="line"></span><br><span class="line">#查看日志</span><br><span class="line">journalctl -u hysteria-server.service</span><br></pre></td></tr></table></figure><p>end</p>]]></content>
      
      
      
        <tags>
            
            <tag> VPS </tag>
            
            <tag> RackNerd </tag>
            
            <tag> VPN </tag>
            
            <tag> Hysterial2 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>甬哥的订阅连接保活脚本，ChatGPT修改方案</title>
      <link href="/fws/yg-workers-keep/"/>
      <url>/fws/yg-workers-keep/</url>
      
        <content type="html"><![CDATA[<p>甬哥的订阅连接保活脚本，ChatGPT修改方案</p><p><a href="https://raw.githubusercontent.com/flower-wins/sb-nodejs/refs/heads/main/workers_keep.js">https://raw.githubusercontent.com/flower-wins/sb-nodejs/refs/heads/main/workers_keep.js</a></p><p>ChatGPT修改方案</p><h3 id="✅-方法一：从环境变量读取（适用于-Cloudflare-Worker）"><a href="#✅-方法一：从环境变量读取（适用于-Cloudflare-Worker）" class="headerlink" title="✅ 方法一：从环境变量读取（适用于 Cloudflare Worker）"></a>✅ 方法一：从环境变量读取（适用于 Cloudflare Worker）</h3><p>如果你在使用 Cloudflare Worker，可以通过环境变量来导入 URL 字符串：</p><h4 id="1-修改脚本如下："><a href="#1-修改脚本如下：" class="headerlink" title="1. 修改脚本如下："></a>1. 修改脚本如下：</h4><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="title function_">addEventListener</span>(<span class="string">&#x27;scheduled&#x27;</span>, <span class="function"><span class="params">event</span> =&gt;</span> event.<span class="title function_">waitUntil</span>(<span class="title function_">handleScheduled</span>()));</span><br><span class="line"></span><br><span class="line"><span class="comment">// 从环境变量中读取 URL 字符串</span></span><br><span class="line"><span class="keyword">const</span> <span class="variable constant_">TIMEOUT</span> = <span class="number">5000</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">async</span> <span class="keyword">function</span> <span class="title function_">fetchWithTimeout</span>(<span class="params">url</span>) &#123;</span><br><span class="line">  <span class="keyword">const</span> controller = <span class="keyword">new</span> <span class="title class_">AbortController</span>();</span><br><span class="line">  <span class="keyword">const</span> timeout = <span class="built_in">setTimeout</span>(<span class="function">() =&gt;</span> controller.<span class="title function_">abort</span>(), <span class="variable constant_">TIMEOUT</span>);</span><br><span class="line">  <span class="keyword">try</span> &#123;</span><br><span class="line">    <span class="keyword">await</span> <span class="title function_">fetch</span>(url, &#123; <span class="attr">signal</span>: controller.<span class="property">signal</span> &#125;);</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">`✅ 成功: <span class="subst">$&#123;url&#125;</span>`</span>);</span><br><span class="line">  &#125; <span class="keyword">catch</span> (error) &#123;</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">warn</span>(<span class="string">`❌ 访问失败: <span class="subst">$&#123;url&#125;</span>, 错误: <span class="subst">$&#123;error.message&#125;</span>`</span>);</span><br><span class="line">  &#125; <span class="keyword">finally</span> &#123;</span><br><span class="line">    <span class="built_in">clearTimeout</span>(timeout);</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">async</span> <span class="keyword">function</span> <span class="title function_">handleScheduled</span>(<span class="params">event</span>) &#123;</span><br><span class="line">  <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;⏳ 任务开始&#x27;</span>);</span><br><span class="line"></span><br><span class="line">  <span class="comment">// 从环境变量导入 URL 列表</span></span><br><span class="line">  <span class="keyword">const</span> urlString = <span class="variable constant_">URLS</span> || <span class="string">&#x27;&#x27;</span>;</span><br><span class="line">  <span class="keyword">const</span> urls = urlString.<span class="title function_">split</span>(<span class="regexp">/[\s,，]+/</span>).<span class="title function_">filter</span>(<span class="title class_">Boolean</span>);</span><br><span class="line"></span><br><span class="line">  <span class="keyword">await</span> <span class="title class_">Promise</span>.<span class="title function_">all</span>(urls.<span class="title function_">map</span>(fetchWithTimeout));</span><br><span class="line">  <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;📊 任务结束&#x27;</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h4 id="2-在-Cloudflare-Worker-的-Dashboard-设置变量："><a href="#2-在-Cloudflare-Worker-的-Dashboard-设置变量：" class="headerlink" title="2. 在 Cloudflare Worker 的 Dashboard 设置变量："></a>2. 在 Cloudflare Worker 的 Dashboard 设置变量：</h4><p>在 “Settings” &gt; “Variables” 中设置：</p><table><thead><tr><th>Name</th><th>Value</th></tr></thead><tbody><tr><td><code>URLS</code></td><td><code>https://example1.com https://example2.com</code></td></tr></tbody></table><hr><h3 id="✅-方法二：从-KV-或远程文件加载"><a href="#✅-方法二：从-KV-或远程文件加载" class="headerlink" title="✅ 方法二：从 KV 或远程文件加载"></a>✅ 方法二：从 KV 或远程文件加载</h3><p>如果 URL 是动态变更的，你可以将其放到 KV（Key-Value 存储）或从远程 JSON 文件中获取，例如：</p><h4 id="KV-示例（Worker-使用-KV-命名空间）："><a href="#KV-示例（Worker-使用-KV-命名空间）：" class="headerlink" title="KV 示例（Worker 使用 KV 命名空间）："></a>KV 示例（Worker 使用 KV 命名空间）：</h4><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> kvNamespace = <span class="variable constant_">MY_KV</span>; <span class="comment">// 在 Worker 绑定时指定</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">async</span> <span class="keyword">function</span> <span class="title function_">handleScheduled</span>(<span class="params"></span>) &#123;</span><br><span class="line">  <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;⏳ 任务开始&#x27;</span>);</span><br><span class="line"></span><br><span class="line">  <span class="keyword">const</span> urlString = <span class="keyword">await</span> kvNamespace.<span class="title function_">get</span>(<span class="string">&#x27;keepalive_urls&#x27;</span>) || <span class="string">&#x27;&#x27;</span>;</span><br><span class="line">  <span class="keyword">const</span> urls = urlString.<span class="title function_">split</span>(<span class="regexp">/[\s,，]+/</span>).<span class="title function_">filter</span>(<span class="title class_">Boolean</span>);</span><br><span class="line"></span><br><span class="line">  <span class="keyword">await</span> <span class="title class_">Promise</span>.<span class="title function_">all</span>(urls.<span class="title function_">map</span>(fetchWithTimeout));</span><br><span class="line">  <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;📊 任务结束&#x27;</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h4 id="设置-keepalive-urls-的值（在-Dashboard-或-API-中设置）："><a href="#设置-keepalive-urls-的值（在-Dashboard-或-API-中设置）：" class="headerlink" title="设置 keepalive_urls 的值（在 Dashboard 或 API 中设置）："></a>设置 <code>keepalive_urls</code> 的值（在 Dashboard 或 API 中设置）：</h4><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">https://a.com https://b.com https://c.com</span><br></pre></td></tr></table></figure><hr><h3 id="✅-方法三：从远程地址加载"><a href="#✅-方法三：从远程地址加载" class="headerlink" title="✅ 方法三：从远程地址加载"></a>✅ 方法三：从远程地址加载</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">async</span> <span class="keyword">function</span> <span class="title function_">loadUrls</span>(<span class="params"></span>) &#123;</span><br><span class="line">  <span class="keyword">try</span> &#123;</span><br><span class="line">    <span class="keyword">const</span> res = <span class="keyword">await</span> <span class="title function_">fetch</span>(<span class="string">&#x27;https://your-domain.com/urls.txt&#x27;</span>);</span><br><span class="line">    <span class="keyword">const</span> text = <span class="keyword">await</span> res.<span class="title function_">text</span>();</span><br><span class="line">    <span class="keyword">return</span> text.<span class="title function_">split</span>(<span class="regexp">/[\s,，]+/</span>).<span class="title function_">filter</span>(<span class="title class_">Boolean</span>);</span><br><span class="line">  &#125; <span class="keyword">catch</span> (e) &#123;</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">warn</span>(<span class="string">&#x27;❌ 无法加载远程 URL:&#x27;</span>, e.<span class="property">message</span>);</span><br><span class="line">    <span class="keyword">return</span> [];</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">async</span> <span class="keyword">function</span> <span class="title function_">handleScheduled</span>(<span class="params"></span>) &#123;</span><br><span class="line">  <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;⏳ 任务开始&#x27;</span>);</span><br><span class="line"></span><br><span class="line">  <span class="keyword">const</span> urls = <span class="keyword">await</span> <span class="title function_">loadUrls</span>();</span><br><span class="line">  <span class="keyword">await</span> <span class="title class_">Promise</span>.<span class="title function_">all</span>(urls.<span class="title function_">map</span>(fetchWithTimeout));</span><br><span class="line"></span><br><span class="line">  <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;📊 任务结束&#x27;</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><hr>]]></content>
      
      
      
        <tags>
            
            <tag> 保活 </tag>
            
            <tag> Cloudflare Worker </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>NO.2美化Hexo博客，主题安装配置&quot;美化Hexo博客，主题安装配置</title>
      <link href="/fws/HexoBlogNo2/"/>
      <url>/fws/HexoBlogNo2/</url>
      
        <content type="html"><![CDATA[<h2 id="美化Hexo博客，主题安装配置”美化Hexo博客，主题安装配置"><a href="#美化Hexo博客，主题安装配置”美化Hexo博客，主题安装配置" class="headerlink" title="美化Hexo博客，主题安装配置”美化Hexo博客，主题安装配置"></a>美化Hexo博客，主题安装配置”美化Hexo博客，主题安装配置</h2><p>这期教程演示将使用一款基于<a href="https://github.com/jerryc127/hexo-theme-butterfly">hexo-theme-butterfly</a>修改的主題-<strong>安知鱼</strong>，安知鱼是一个简洁、美丽的静态hexo主题</p><p><strong>项目地址</strong>：<a href="https://github.com/anzhiyu-c/hexo-theme-anzhiyu">https://github.com/anzhiyu-c/hexo-theme-anzhiyu</a><br><strong>官方文档</strong>：<a href="https://docs.anheyu.com/initall.html">https://docs.anheyu.com/initall.html</a></p><hr><h2 id="1-安装主题"><a href="#1-安装主题" class="headerlink" title="1.安装主题"></a>1.安装主题</h2><h3 id="1-1-Git-安裝"><a href="#1-1-Git-安裝" class="headerlink" title="1.1. Git 安裝"></a>1.1. Git 安裝</h3><p>在博客根目录里安装最新版主题</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git clone -b main https://github.com/anzhiyu-c/hexo-theme-anzhiyu.git themes/anzhiyu</span><br></pre></td></tr></table></figure><p>第一次使用需要安装 pug 以及 stylus 的渲染器</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install hexo-renderer-pug hexo-renderer-stylus --save</span><br></pre></td></tr></table></figure><h3 id="1-2-应用主题"><a href="#1-2-应用主题" class="headerlink" title="1.2. 应用主题"></a>1.2. 应用主题</h3><p>修改 hexo 配置文件<code>_config.yml</code>，把主题改为<code>anzhiyu</code></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">theme: anzhiyu</span><br></pre></td></tr></table></figure><h3 id="1-3-覆盖配置"><a href="#1-3-覆盖配置" class="headerlink" title="1.3. 覆盖配置"></a>1.3. 覆盖配置</h3><p>覆盖配置可以使<code>主题配置</code>放置在 anzhiyu 目录之外，避免在更新主题时丢失自定义的配置。</p><p>如果你是<strong>linux系统</strong>就执行以下命令</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cp -rf ./themes/anzhiyu/\_config.yml ./\_config.anzhiyu.yml</span><br></pre></td></tr></table></figure><p>如果你是<strong>windows系统</strong>就请手动将<code>/themes/anzhiyu/_config.yml</code>复制到根目录下并重命名为<code>_config.anzhiyu.yml</code>即可。</p><p>以后如果修改任何主题配置，都只需修改 <code>_config.anzhiyu.yml</code> 的配置即可。</p><p>注意：</p><ul><li>只要存在于 <code>_config.anzhiyu.yml</code> 的配置都是高优先级，修改原 <code>_config.yml</code> 是无效的。</li><li>每次更新主题可能存在配置变更，请注意更新说明，可能需要手动对 <code>_config.anzhiyu.yml</code> 同步修改。</li><li>想查看覆盖配置有没有生效，可以通过 <code>hexo g --debug</code> 查看命令行输出。</li><li>如果想将某些配置覆盖为空，注意不要把主键删掉，不然是无法覆盖的</li></ul><h3 id="1-4-配置主题与主站配置文件"><a href="#1-4-配置主题与主站配置文件" class="headerlink" title="1.4. 配置主题与主站配置文件"></a>1.4. 配置主题与主站配置文件</h3><p>到这一步主题部署就完成了，<strong>就是这么简单！！！</strong></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"> //本地预览  </span><br><span class="line">hexo cl; hexo s  </span><br><span class="line"></span><br><span class="line">//推送更新上线  </span><br><span class="line">hexo cl; hexo g; hexo d</span><br></pre></td></tr></table></figure><h3 id="1-5-生成标签页和分类页"><a href="#1-5-生成标签页和分类页" class="headerlink" title="1.5. 生成标签页和分类页"></a>1.5. 生成标签页和分类页</h3><p>执行以下命令生成标签页</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo new page tags</span><br></pre></td></tr></table></figure><p>找到 <code>source/tags/index.md</code> 这个文件，修改添加 <code>type: &quot;tags&quot;</code></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">---  </span><br><span class="line">title: 标签  </span><br><span class="line">date: 2024-07-05 03:36:02  </span><br><span class="line">type: &quot;tags&quot;  </span><br><span class="line">comments: false  </span><br><span class="line">top\_img: false  </span><br><span class="line">---</span><br></pre></td></tr></table></figure><p>执行以下命令生成分类页</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo new page categories</span><br></pre></td></tr></table></figure><p>找到 <code>source/categories/index.md</code> 这个文件，修改添加 <code>type: &quot;categories&quot;</code></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">---  </span><br><span class="line">title: 分类  </span><br><span class="line">date: 2024-07-05 03:36:48  </span><br><span class="line">aside: false  </span><br><span class="line">top\_img: false  </span><br><span class="line">type: &quot;categories&quot;  </span><br><span class="line">--- </span><br></pre></td></tr></table></figure><p>剩下的工作就是配置<code>_config.yml</code>和<code>_config.anzhiyu.yml</code>文件，修改博客参数。</p><hr><h2 id="2-配置文章模版"><a href="#2-配置文章模版" class="headerlink" title="2. 配置文章模版"></a>2. 配置文章模版</h2><p><code>/scaffolds</code>目录下有几个模版文件，其中</p><ul><li><strong>post.md</strong>：新建博文模版</li><li><strong>page.md</strong>：新建标签页模版</li></ul><h3 id="post-md模版，仅供参考"><a href="#post-md模版，仅供参考" class="headerlink" title="post.md模版，仅供参考"></a><strong>post.md</strong>模版，仅供参考</h3><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">---  </span></span><br><span class="line"><span class="attr">title:</span> &#123;&#123; <span class="string">title</span> &#125;&#125;   </span><br><span class="line"><span class="attr">date:</span> &#123;&#123; <span class="string">date</span> &#125;&#125;   </span><br><span class="line"><span class="attr">updated:</span>   </span><br><span class="line"><span class="attr">tags:</span>   </span><br><span class="line"><span class="attr">categories:</span>   </span><br><span class="line"><span class="attr">keywords:</span>   </span><br><span class="line"><span class="attr">description:</span>   </span><br><span class="line"><span class="attr">top:</span>   </span><br><span class="line"><span class="string">top\_img:</span>   </span><br><span class="line"><span class="attr">comments:</span>   </span><br><span class="line"><span class="attr">cover:</span> <span class="string">https://img.090227.xyz/file/ae62475a131f3734a201c.png</span>   </span><br><span class="line"><span class="attr">toc:</span>   </span><br><span class="line"><span class="string">toc\_number:</span>   </span><br><span class="line"><span class="string">toc\_style\_simple:</span>   </span><br><span class="line"><span class="attr">copyright:</span>   </span><br><span class="line"><span class="string">copyright\_author:</span>   </span><br><span class="line"><span class="string">copyright\_author\_href:</span>   </span><br><span class="line"><span class="string">copyright\_url:</span>   </span><br><span class="line"><span class="string">copyright\_info:</span>   </span><br><span class="line"><span class="attr">mathjax:</span>   </span><br><span class="line"><span class="attr">katex:</span>   </span><br><span class="line"><span class="attr">aplayer:</span>   </span><br><span class="line"><span class="string">highlight\_shrink:</span>   </span><br><span class="line"><span class="attr">aside:</span>   </span><br><span class="line"><span class="string">swiper\_index:</span> <span class="number">10</span>   </span><br><span class="line"><span class="string">top\_group\_index:</span> <span class="number">10</span>   </span><br><span class="line"><span class="attr">ai:</span>   </span><br><span class="line"><span class="attr">background:</span> <span class="string">&quot;#fff&quot;</span>   </span><br><span class="line"><span class="meta">---  </span></span><br><span class="line"><span class="meta"></span></span><br><span class="line"><span class="string">&lt;div</span> <span class="string">class=&quot;video-container&quot;&gt;</span>  </span><br><span class="line"><span class="string">\[up主专用，视频内嵌代码贴在这\]</span>  </span><br><span class="line"><span class="string">&lt;/div&gt;</span>  </span><br><span class="line"></span><br><span class="line"><span class="string">&lt;style&gt;</span>  </span><br><span class="line"><span class="string">.video-container</span> &#123;  </span><br><span class="line">    <span class="attr">position:</span> <span class="string">relative;</span>  </span><br><span class="line">    <span class="attr">width:</span> <span class="number">100</span><span class="string">%;</span>  </span><br><span class="line">    <span class="attr">padding-top:</span> <span class="number">56.25</span><span class="string">%;</span> <span class="string">/\*</span> <span class="number">16</span><span class="string">:9</span> <span class="string">aspect</span> <span class="string">ratio</span> <span class="string">(height/width</span> <span class="string">\=</span> <span class="number">9</span><span class="string">/16</span> <span class="string">\*</span> <span class="number">100</span><span class="string">%)</span> <span class="string">\*/</span>  &#125;  </span><br><span class="line"></span><br><span class="line"><span class="string">.video-container</span> <span class="string">iframe</span> &#123;  </span><br><span class="line"><span class="string">​</span>    <span class="attr">position:</span> <span class="string">absolute;</span>  </span><br><span class="line"><span class="string">​</span>    <span class="attr">top:</span> <span class="number">0</span><span class="string">;</span>  </span><br><span class="line"><span class="string">​</span>    <span class="attr">left:</span> <span class="number">0</span><span class="string">;</span>  </span><br><span class="line"><span class="string">​</span>    <span class="attr">width:</span> <span class="number">100</span><span class="string">%;</span>  </span><br><span class="line"><span class="string">​</span>    <span class="attr">height:</span> <span class="number">100</span><span class="string">%;</span>  &#125;  </span><br><span class="line"><span class="string">&lt;/style&gt;</span> </span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="page-md模版，仅供参考"><a href="#page-md模版，仅供参考" class="headerlink" title="page.md模版，仅供参考"></a><strong>page.md</strong>模版，仅供参考</h3><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">---  </span></span><br><span class="line"><span class="attr">title:</span> &#123;&#123; <span class="string">title</span> &#125;&#125;   </span><br><span class="line"><span class="attr">date:</span> &#123;&#123; <span class="string">date</span> &#125;&#125;   </span><br><span class="line"><span class="attr">type:</span>   </span><br><span class="line"><span class="attr">updated:</span>   </span><br><span class="line"><span class="attr">comments:</span>   </span><br><span class="line"><span class="attr">description:</span>   </span><br><span class="line"><span class="attr">keywords:</span>   </span><br><span class="line"><span class="string">top\_img:</span> <span class="string">https://img.090227.xyz/file/ae62475a131f3734a201c.png</span>   </span><br><span class="line"><span class="attr">mathjax:</span>   </span><br><span class="line"><span class="attr">katex:</span>   </span><br><span class="line"><span class="attr">aside:</span>   </span><br><span class="line"><span class="attr">aplayer:</span>   </span><br><span class="line"><span class="string">highlight\_shrink:</span>   </span><br><span class="line"><span class="string">top\_single\_background:</span>   </span><br><span class="line"><span class="meta">--- </span></span><br><span class="line"><span class="meta"></span></span><br></pre></td></tr></table></figure><hr><h2 id="更多功能"><a href="#更多功能" class="headerlink" title="更多功能"></a>更多功能</h2><h2 id="新建文章"><a href="#新建文章" class="headerlink" title="新建文章"></a>新建文章</h2><h3 id="新建博文命令"><a href="#新建博文命令" class="headerlink" title="新建博文命令"></a>新建博文命令</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo new 这是一篇新的博文</span><br></pre></td></tr></table></figure><h3 id="新建标签页命令"><a href="#新建标签页命令" class="headerlink" title="新建标签页命令"></a>新建标签页命令</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo new page 新建的标签页</span><br></pre></td></tr></table></figure><hr><h2 id="文章置顶"><a href="#文章置顶" class="headerlink" title="文章置顶"></a>文章置顶</h2><h3 id="安装插件"><a href="#安装插件" class="headerlink" title="安装插件"></a>安装插件</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install hexo-generator-topindex --save</span><br></pre></td></tr></table></figure><h3 id="设置置顶"><a href="#设置置顶" class="headerlink" title="设置置顶"></a>设置置顶</h3><p>给需要置顶的文章加入top参数，如下：</p><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">---  </span></span><br><span class="line"><span class="attr">title:</span> <span class="string">每天一个linux命令</span>  </span><br><span class="line"><span class="attr">date:</span> <span class="number">2017-01-23 11:41:48</span>  </span><br><span class="line"><span class="attr">top:</span> <span class="number">1</span>  </span><br><span class="line"><span class="attr">categories:</span>  </span><br><span class="line"><span class="bullet">-</span> <span class="string">运维</span>  </span><br><span class="line"><span class="attr">tags:</span>  </span><br><span class="line"><span class="bullet">-</span> <span class="string">linux命令</span>  </span><br><span class="line"><span class="meta">--- </span></span><br></pre></td></tr></table></figure><p>如果存在多个置顶文章，top后的参数越大，越靠前。</p><hr><h2 id="开启本地搜索"><a href="#开启本地搜索" class="headerlink" title="开启本地搜索"></a>开启本地搜索</h2><h3 id="安装插件-1"><a href="#安装插件-1" class="headerlink" title="安装插件"></a>安装插件</h3><p>你需要安装 <a href="https://github.com/wzpan/hexo-generator-search">hexo-generator-search</a>，根据它的文档去做相应配置</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install hexo-generator-search --save</span><br></pre></td></tr></table></figure><h3 id="设置主题配置文件"><a href="#设置主题配置文件" class="headerlink" title="设置主题配置文件"></a>设置主题配置文件</h3><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">local_search:</span></span><br><span class="line">  <span class="attr">enable:</span> <span class="literal">true</span></span><br><span class="line">  <span class="attr">preload:</span> <span class="literal">false</span></span><br><span class="line">  <span class="attr">CDN:</span> </span><br></pre></td></tr></table></figure><table><thead><tr><th>参数</th><th>解释</th></tr></thead><tbody><tr><td>enable</td><td>是否开启本地搜索</td></tr><tr><td>preload</td><td>预加载，开启后，进入网页后会自动加载搜索文件。关闭时，只有点击搜索按钮后，才会加载搜索文件</td></tr><tr><td>CDN</td><td>搜索文件的 CDN 地址（默认使用的本地链接）</td></tr></tbody></table><hr><h2 id="添加任意文件"><a href="#添加任意文件" class="headerlink" title="添加任意文件"></a>添加任意文件</h2><p>例如当我们想在网站根目录添加<code>ads.txt</code>文件，来通过站长验证时，我们只需要在<code>/source</code>文件夹下放置该文件即可。</p><hr><h2 id="参考资料"><a href="#参考资料" class="headerlink" title="参考资料"></a>参考资料</h2><p><a href="https://docs.anheyu.com/initall.html">https://docs.anheyu.com/initall.html</a><br><a href="https://www.fomal.cc/posts/4aa2d85f.html">https://www.fomal.cc/posts/4aa2d85f.html</a><br><a href="https://github.com/anzhiyu-c/hexo-theme-anzhiyu/blob/dev/README.md?plain=1">https://github.com/anzhiyu-c/hexo-theme-anzhiyu/blob/dev/README.md?plain=1</a><br>[<a href="https://blog.csdn.net/COCO56/article/details/103840966]">https://blog.csdn.net/COCO56/article/details/103840966]</a></p>]]></content>
      
      
      
        <tags>
            
            <tag> Hexo </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>NO.1搭建Hexo博客，快速简洁高效，零成本搭建个人博客：Hexo + GitHub Pages + Cloudflare Pages 完整指南</title>
      <link href="/fws/HexoBlogNo1/"/>
      <url>/fws/HexoBlogNo1/</url>
      
        <content type="html"><![CDATA[<h2 id="搭建Hexo博客，快速简洁高效，零成本搭建个人博客：Hexo-GitHub-Pages-Cloudflare-Pages-完整指南"><a href="#搭建Hexo博客，快速简洁高效，零成本搭建个人博客：Hexo-GitHub-Pages-Cloudflare-Pages-完整指南" class="headerlink" title="搭建Hexo博客，快速简洁高效，零成本搭建个人博客：Hexo + GitHub Pages + Cloudflare Pages 完整指南"></a>搭建Hexo博客，快速简洁高效，零成本搭建个人博客：Hexo + GitHub Pages + Cloudflare Pages 完整指南</h2><p>本文详细介绍了如何使用Hexo框架搭建一个个人博客，并将其部署到GitHub Pages和Cloudflare Pages上。主要内容包括：</p><ul><li>环境准备：安装Node.js和Git</li><li>配置Git和GitHub：设置SSH密钥，创建GitHub仓库</li><li>初始化Hexo项目：安装Hexo，创建新博客</li><li>部署到GitHub Pages：配置部署设置，推送静态文件</li><li>部署到Cloudflare Pages：连接GitHub仓库，自动部署</li><li>基本使用方法：创建新文章，本地预览，发布更新</li></ul><p>这个教程适合那些想要快速搭建个人博客，但又不想花费太多成本的人。通过使用Hexo、GitHub和Cloudflare的免费服务，您可以轻松创建一个高效、简洁的博客网站。</p><hr><h2 id="1-事前准备"><a href="#1-事前准备" class="headerlink" title="1.事前准备"></a>1.事前准备</h2><ol><li>域名（<strong>非必须</strong>，你也可以使用免费域名，或者<code>GitHub.io</code>或<code>Pages.dev</code>分配的域名也可以）</li><li><a href="https://github.com/">GitHub</a>（<strong>必须</strong>，你需要注册一个GitHub帐号）</li><li><a href="https://dash.cloudflare.com/">Cloudflare</a>（<strong>非必须</strong>，你需要注册一个Cloudflare帐号，这样你就可以将博客部署在CF的CDN里加速，但是你也可以直接使用<code>GitHub.io</code>分配的域名）</li></ol><hr><h2 id="2-软件支持"><a href="#2-软件支持" class="headerlink" title="2.软件支持"></a>2.软件支持</h2><ol><li><a href="https://fastly.blog.cmliussss.com/p/HexoBlogNo1/#2-1-%E5%AE%89%E8%A3%85-Node">Node</a>（<strong>必须</strong>）</li><li><a href="https://fastly.blog.cmliussss.com/p/HexoBlogNo1/#2-2-%E5%AE%89%E8%A3%85-Git">Git</a>（<strong>必须</strong>）</li><li><a href="https://code.visualstudio.com/">VSCode</a>（<strong>非必须</strong>，这是一款轻量型的代码编辑器，可以帮助你养成一个很好的编程习惯）</li></ol><h3 id="2-1-安装-Node"><a href="#2-1-安装-Node" class="headerlink" title="2.1.安装 Node"></a>2.1.安装 Node</h3><ol><li><p>打开Node官网，下载和自己系统相配的Node的安装程序，否则会出现安装问题。下载地址：<a href="https://nodejs.org/en">https://nodejs.org/en</a></p></li><li><p>下载后安装，安装的目录可以使用默认目录<code>C:/Program Files/nodejs/</code></p></li><li><p>安装完成后，检查是否安装成功。在键盘按下win + R键，输入CMD，然后回车，打开CMD窗口，执行<code>node -v</code>命令，看到版本信息，则说明安装成功。<br><a href="https://img.090227.xyz/file/5ca2f549a4489064d3444.jpg"><img src="https://img.090227.xyz/file/5ca2f549a4489064d3444.jpg" alt="2.1.3.安装 Node"></a></p></li><li><p>修改npm源。npm下载各种模块，默认是从国处服务器下载，速度较慢，建议配置成华为云镜像源。打开CMD窗口，运行如下命令:</p><p>‘’’npm config set registry <a href="https://mirrors.huaweicloud.com/repository/npm/">https://mirrors.huaweicloud.com/repository/npm/</a>‘’’</p></li></ol><h3 id="2-2-安装-Git"><a href="#2-2-安装-Git" class="headerlink" title="2.2.安装 Git"></a>2.2.安装 Git</h3><ol><li>进入官网下载适合你当前系统的 Git：<a href="https://git-scm.com/downloads">https://git-scm.com/downloads</a><br><a href="https://img.090227.xyz/file/14b9fdf14c49320e531fb.jpg"><img src="https://img.090227.xyz/file/14b9fdf14c49320e531fb.jpg" alt="2.2.1.安装 Git"></a></li><li>下载后傻瓜式安装Git即可，安装的目录最好使用默认目录<code>C:/Program Files/Git</code></li><li>点击电脑左下角开始即可看见<code>Git CMD</code>、<code>Git Bash</code>、<code>Git GUI</code>。<ul><li><code>Git CMD</code> 是windows 命令行的指令风格</li><li><code>Git Bash</code> 是linux系统的指令风格（建议使用）</li><li><code>Git GUI</code>是图形化界面（新手学习不建议使用）</li></ul></li></ol><hr><h2 id="3-配置-Git-密钥并连接至-Github"><a href="#3-配置-Git-密钥并连接至-Github" class="headerlink" title="3.配置 Git 密钥并连接至 Github"></a>3.配置 Git 密钥并连接至 Github</h2><p>常用 Git 命令</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">git config -l  //查看所有配置  </span><br><span class="line">git config --system --list //查看系统配置  </span><br><span class="line">git config --global --list //查看用户（全局）配置</span><br></pre></td></tr></table></figure><p><a href="https://img.090227.xyz/file/f403664b22ad3488a5fb4.jpg"><img src="https://img.090227.xyz/file/f403664b22ad3488a5fb4.jpg" alt="启动Git"></a></p><h3 id="3-1-配置用户名和邮箱"><a href="#3-1-配置用户名和邮箱" class="headerlink" title="3.1. 配置用户名和邮箱"></a>3.1. 配置用户名和邮箱</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">git config --global user.name &quot;你的用户名&quot;  </span><br><span class="line">git config --global user.email &quot;你的邮箱&quot;</span><br></pre></td></tr></table></figure><p>通过<code>git config -l</code> 检查是否配置成功。<br><a href="https://img.090227.xyz/file/67dca39142021e2214e2b.jpg"><img src="https://img.090227.xyz/file/67dca39142021e2214e2b.jpg" alt="3.1. 配置用户名和邮箱"></a></p><h3 id="3-2-配置公钥连接Github"><a href="#3-2-配置公钥连接Github" class="headerlink" title="3.2. 配置公钥连接Github"></a>3.2. 配置公钥连接Github</h3><ol><li><p>执行以下命令生成ssh公钥，此公钥用于你的计算机连接Github</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ssh-keygen -t rsa -C &quot;你的邮箱&quot;</span><br></pre></td></tr></table></figure><p>提示<code>Enter file in which to save the key</code>直接<strong>一路回车</strong>即可，新手小白不推荐设置密钥<br><a href="https://img.090227.xyz/file/45d70737c64caeb4393ad.jpg"><img src="https://img.090227.xyz/file/45d70737c64caeb4393ad.jpg" alt="3.2.1.1"></a><br>之后打开C盘下用户文件夹下的.ssh的文件夹，会看到以下文件</p></li><li><p>将 SSH KEY 配置到 GitHub<br>进入github，点击右上角头像 选择<code>settings</code>，进入设置页后选择 <code>SSH and GPG keys</code>，名字随便起，公钥填到<code>Key</code>那一栏。<br><a href="https://img.090227.xyz/file/75fc281237bfc6751a295.jpg"><img src="https://img.090227.xyz/file/75fc281237bfc6751a295.jpg" alt="3.2.2.1"></a><br><a href="https://img.090227.xyz/file/993edae3bbca9489dc156.jpg"><img src="https://img.090227.xyz/file/993edae3bbca9489dc156.jpg" alt="3.2.2.2"></a><br><a href="https://img.090227.xyz/file/fa8a7628c285e6be5c0a4.png"><img src="https://img.090227.xyz/file/fa8a7628c285e6be5c0a4.png" alt="3.2.2.3"></a><br><a href="https://img.090227.xyz/file/f3fa79cf3d639ef2d5bcb.png"><img src="https://img.090227.xyz/file/f3fa79cf3d639ef2d5bcb.png" alt="3.2.2.4"></a></p></li><li><p>测试连接，输入以下命令</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ssh -T git@github.com</span><br></pre></td></tr></table></figure><p>第一次连接会提示<code>Are you sure you want to continue connecting (yes/no/[fingerprint])?</code>，输入<code>yes</code>即可<br><a href="https://img.090227.xyz/file/faa0077eeab8c82f1de9e.png"><img src="https://img.090227.xyz/file/faa0077eeab8c82f1de9e.png" alt="3.2.3.1"></a><br>出现连接到账户的信息，说明已经大功告成，至此完成了环境准备工作。<br><a href="https://img.090227.xyz/file/faa0077eeab8c82f1de9e.png"><img src="https://img.090227.xyz/file/faa0077eeab8c82f1de9e.png" alt="3.2.3.2"></a></p></li></ol><h3 id="3-3-创建GitHub-io仓库"><a href="#3-3-创建GitHub-io仓库" class="headerlink" title="3.3. 创建GitHub.io仓库"></a>3.3. 创建GitHub.io仓库</h3><ol><li>点击右上角的<code>+</code>按钮，选择<strong>New repository</strong>，创建一个<code>&lt;用户名&gt;.github.io</code>的仓库。</li><li>仓库名字的格式必须为：<code>&lt;用户名&gt;.github.io</code> (注意：前缀必须为用户名，此为预览博客需要，后期可修改仓库名)</li><li>可见性必须选择 <code>Public</code> 方便第一次部署检查问题，点击 <strong>Creat repository</strong> 进行创建即可<br><a href="https://img.090227.xyz/file/3d9274644460cd1ffeb26.png"><img src="https://img.090227.xyz/file/3d9274644460cd1ffeb26.png" alt="3.3. 创建GitHub.io仓库"></a></li></ol><hr><h2 id="4-初始化-Hexo-博客"><a href="#4-初始化-Hexo-博客" class="headerlink" title="4.初始化 Hexo 博客"></a>4.初始化 Hexo 博客</h2><ol><li><p>创建一个文件夹来保存博客源码（我这里选的路径为<code>D:/Hexo-Blog</code>），在文件夹内右键鼠标，选择<code>Open Git Bash here</code><br><a href="https://img.090227.xyz/file/f78e04406dc803d610538.png"><img src="https://img.090227.xyz/file/f78e04406dc803d610538.png" alt="4.1"></a></p></li><li><p>在<code>Git BASH</code>输入如下命令安装 Hexo</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install -g hexo-cli &amp;&amp; hexo -v</span><br></pre></td></tr></table></figure><p><a href="https://img.090227.xyz/file/808bff9b7ab5b13fcd200.png"><img src="https://img.090227.xyz/file/808bff9b7ab5b13fcd200.png" alt="4.2"></a></p></li><li><p>安装完后输入<code>hexo -v</code>验证是否安装成功。<br><a href="https://img.090227.xyz/file/17349517f78516f7ac8ff.png"><img src="https://img.090227.xyz/file/17349517f78516f7ac8ff.png" alt="4.3"></a></p></li><li><p>初始化 Hexo 项目安装相关依赖。</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">hexo init blog-demo  </span><br><span class="line">cd blog-demo  </span><br><span class="line">npm i</span><br></pre></td></tr></table></figure><p><a href="https://img.090227.xyz/file/1c130d7beed537111d448.png"><img src="https://img.090227.xyz/file/1c130d7beed537111d448.png" alt="4.4"></a></p></li><li><p>初始化项目后，<code>blog-demo</code>有如下结构：<br><a href="https://img.090227.xyz/file/74128294708705e22e188.png"><img src="https://img.090227.xyz/file/74128294708705e22e188.png" alt="4.5"></a></p></li></ol><ul><li><strong>node_modules</strong>：依赖包</li><li><strong>scaffolds</strong>：生成文章的一些模板</li><li><strong>source</strong>：用来存放你的文章</li><li><strong>themes</strong>：主题</li><li><strong>.npmignore</strong>：发布时忽略的文件（可忽略）</li><li><strong>_config.landscape.yml</strong>：主题的配置文件</li><li><strong>config.yml</strong>：博客的配置文件</li><li><strong>package.json</strong>：项目名称、描述、版本、运行和开发等信</li></ul><ol><li>输入<code>hexo cl &amp;&amp; hexo s</code>启动项目<br><a href="https://img.090227.xyz/file/e8c930919bb49270bde5a.png"><img src="https://img.090227.xyz/file/e8c930919bb49270bde5a.png" alt="4.6"></a></li><li>打开浏览器，输入地址：<a href="http://localhost:4000/">http://localhost:4000/</a> ，看到下面的效果，说明你的博客已经构建成功了。<br><a href="https://img.090227.xyz/file/e285037815104f68f4514.jpg"><img src="https://img.090227.xyz/file/e285037815104f68f4514.jpg" alt="4.7"></a></li></ol><hr><h2 id="5-将静态博客挂载到-GitHub-Pages"><a href="#5-将静态博客挂载到-GitHub-Pages" class="headerlink" title="5.将静态博客挂载到 GitHub Pages"></a>5.将静态博客挂载到 GitHub Pages</h2><ol><li><p>安装 hexo-deployer-git</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install hexo-deployer-git --save</span><br></pre></td></tr></table></figure></li><li><p>修改 <code>_config.yml</code> 文件<br>在blog-demo目录下的_config.yml，就是整个Hexo框架的配置文件了。可以在里面修改大部分的配置。详细可参考官方的<a href="https://hexo.io/zh-cn/docs/configuration">配置描述</a>。<br>修改最后一行的配置，将repository修改为你自己的github项目地址即可，还有分支要改为<code>main</code>代表主分支（注意缩进）。</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">deploy:</span>  </span><br><span class="line">  <span class="attr">type:</span> <span class="string">git</span>  </span><br><span class="line">  <span class="attr">repository:</span> <span class="string">git@github.com:cmliussss2024/cmliussss2024.github.io.git</span>  </span><br><span class="line">  <span class="attr">branch:</span> <span class="string">main</span></span><br></pre></td></tr></table></figure></li><li><p>修改好配置后，运行如下命令，将代码部署到 GitHub（Hexo三连）。</p></li></ol><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">Git BASH终端  </span><br><span class="line">&#x27;&#x27;&#x27;hexo clean &amp;&amp; hexo generate &amp;&amp; hexo deploy&#x27;&#x27;&#x27;    </span><br><span class="line"></span><br><span class="line">// 或者  </span><br><span class="line"></span><br><span class="line">// VSCODE终端  </span><br><span class="line">&#x27;&#x27;&#x27;hexo cl; hexo g; hexo d&#x27;&#x27;&#x27;</span><br></pre></td></tr></table></figure><ul><li><strong>hexo clean</strong>：删除之前生成的文件，可以用<code>hexo cl</code>缩写。</li><li><strong>hexo generate</strong>：生成静态文章，可以用<code>hexo g</code>缩写</li><li><strong>hexo deploy</strong>：部署文章，可以用<code>hexo d</code>缩写<br><a href="https://img.090227.xyz/file/18b052b831896bf00cfc4.jpg"><img src="https://img.090227.xyz/file/18b052b831896bf00cfc4.jpg" alt="5.3.1"></a><br><em>注意：deploy时可能要你输入 username 和 password。</em></li></ul><p>如果出现<strong>Deploy done</strong>，则说明部署成功了。<br><a href="https://img.090227.xyz/file/93a5d61648491a5278556.jpg"><img src="https://img.090227.xyz/file/93a5d61648491a5278556.jpg" alt="5.3.2"></a><br>稍等两分钟，打开浏览器访问：<a href="https://cmliussss2024.github.io/">https://cmliussss2024.github.io</a> ，这时候我们就可以看到博客内容了。<br><a href="https://img.090227.xyz/file/1239b1270fcdc8bd896a6.jpg"><img src="https://img.090227.xyz/file/1239b1270fcdc8bd896a6.jpg" alt="5.3.3"></a></p><hr><h2 id="6-将静态博客挂载到-Cloudflare-Pages"><a href="#6-将静态博客挂载到-Cloudflare-Pages" class="headerlink" title="6.将静态博客挂载到 Cloudflare Pages"></a>6.将静态博客挂载到 Cloudflare Pages</h2><ol><li>在 <code>Workers 和 Pages</code> 中选择 <code>Pages</code> 的 <code>连接到 Git</code><br><a href="https://img.090227.xyz/file/b3eae4e84c4c7c31af665.jpg"><img src="https://img.090227.xyz/file/b3eae4e84c4c7c31af665.jpg" alt="6.1.1"></a><br><a href="https://img.090227.xyz/file/440581264cb313ed77e75.jpg"><img src="https://img.090227.xyz/file/440581264cb313ed77e75.jpg" alt="6.1.2"></a></li><li>然后登录你Blog仓库对应的GitHub帐号<br><a href="https://img.090227.xyz/file/733c0a673bb66670b7ca1.jpg"><img src="https://img.090227.xyz/file/733c0a673bb66670b7ca1.jpg" alt="6.2.1"></a><br><a href="https://img.090227.xyz/file/8fb282e32991167a98f57.jpg"><img src="https://img.090227.xyz/file/8fb282e32991167a98f57.jpg" alt="6.2.2"></a></li><li>点击<code>保存并部署</code>后等待部署完成即可。<br><a href="https://img.090227.xyz/file/60cca5e2200e260327227.jpg"><img src="https://img.090227.xyz/file/60cca5e2200e260327227.jpg" alt="6.3"></a></li><li>提示<code>成功！您的项目已部署到以下区域：全球</code>后，浏览器访问：<a href="https://cmliussss2024-github-io.pages.dev/">https://cmliussss2024-github-io.pages.dev</a> ，这时候我们就可以看到博客内容了。<br><a href="https://img.090227.xyz/file/0f2a697243725c6fa2ab8.jpg"><img src="https://img.090227.xyz/file/0f2a697243725c6fa2ab8.jpg" alt="6.4"></a><br><em>这时你也就可以将你的<code>&lt;用户名&gt;.github.io</code>的仓库设置为<code>Private</code>私库了</em></li><li>如果你有自己的域名，你可以在这里绑定你自己的自定义域，即可<br><a href="https://img.090227.xyz/file/2c9ce4b9b67c09376bb91.jpg"><img src="https://img.090227.xyz/file/2c9ce4b9b67c09376bb91.jpg" alt="6.5"></a></li></ol><hr><h2 id="如何使用"><a href="#如何使用" class="headerlink" title="如何使用"></a>如何使用</h2><h2 id="新建一篇博文"><a href="#新建一篇博文" class="headerlink" title="新建一篇博文"></a>新建一篇博文</h2><p>‘hexo new 这是一篇新的博文’</p><p>然后用文本编辑器去编辑<code>_posts/这是一篇新的博文.md</code>里的内容即可，注意要使用<strong>Markdown</strong>格式书写。<br>详细使用方法可以查阅 <a href="https://hexo.io/zh-cn/docs/writing">https://hexo.io/zh-cn/docs/writing</a></p><h2 id="编辑完文章保存后可以使用如下命令，生成本地页面-http-localhost-4000-，进行预览"><a href="#编辑完文章保存后可以使用如下命令，生成本地页面-http-localhost-4000-，进行预览" class="headerlink" title="编辑完文章保存后可以使用如下命令，生成本地页面 http://localhost:4000/ ，进行预览"></a>编辑完文章保存后可以使用如下命令，生成本地页面 <a href="http://localhost:4000/">http://localhost:4000/</a> ，进行预览</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">// Git BASH终端  </span><br><span class="line">hexo cl &amp;&amp; hexo s  </span><br><span class="line"></span><br><span class="line">// 或者  </span><br><span class="line"></span><br><span class="line">// VSCODE终端  </span><br><span class="line">hexo cl; hexo s</span><br></pre></td></tr></table></figure><h2 id="确认无误后使用以下命令，将本地文章推送至GitHub仓库即可"><a href="#确认无误后使用以下命令，将本地文章推送至GitHub仓库即可" class="headerlink" title="确认无误后使用以下命令，将本地文章推送至GitHub仓库即可"></a>确认无误后使用以下命令，将本地文章推送至GitHub仓库即可</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">// Git BASH终端  </span><br><span class="line"></span><br><span class="line">hexo cl &amp;&amp; hexo g &amp;&amp; hexo d  </span><br><span class="line"></span><br><span class="line">// 或者  </span><br><span class="line"></span><br><span class="line">// VSCODE终端  </span><br><span class="line"></span><br><span class="line">hexo cl; hexo g; hexo d</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>下一期会讲讲进阶的使用方法，<strong>主题美化</strong></p><hr><h2 id="VSCODE-终端首次执行报错"><a href="#VSCODE-终端首次执行报错" class="headerlink" title="VSCODE 终端首次执行报错"></a>VSCODE 终端首次执行报错</h2><p>使用管理员身份打开 powershell ,输入以下命令</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Set-ExecutionPolicy RemoteSigned</span><br></pre></td></tr></table></figure><hr><h2 id="参考资料"><a href="#参考资料" class="headerlink" title="参考资料"></a>参考资料</h2><p><a href="https://hexo.io/zh-cn/">https://hexo.io/zh-cn/</a><br><a href="https://www.fomal.cc/posts/e593433d.html">https://www.fomal.cc/posts/e593433d.html</a><br><a href="https://docs.anheyu.com/">https://docs.anheyu.com/</a></p><h2 id="致谢项目"><a href="#致谢项目" class="headerlink" title="致谢项目"></a>致谢项目</h2><p>[<a href="https://github.com/hexojs/hexo]">https://github.com/hexojs/hexo]</a></p>]]></content>
      
      
      
        <tags>
            
            <tag> Hexo </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>HiDNS 域名终身免费计划</title>
      <link href="/fws/HiDNS%E5%9F%9F%E5%90%8D%E7%BB%88%E8%BA%AB%E5%85%8D%E8%B4%B9%E8%AE%A1%E5%88%92/"/>
      <url>/fws/HiDNS%E5%9F%9F%E5%90%8D%E7%BB%88%E8%BA%AB%E5%85%8D%E8%B4%B9%E8%AE%A1%E5%88%92/</url>
      
        <content type="html"><![CDATA[<p>转自cm大佬blog<br>原文连接：<a href="https://杨幂的脚.dpdns.org/p/hidns/">https://xn--1uto7rutmzjk.dpdns.org/p/hidns/</a></p><p>HiDNS 域名终身免费计划</p><p>HiDNS 近期调整了其免费域名服务政策。现在，用户需要通过提交工单进行人工审核来申请免费域名。</p><p>为了获得<strong>永久免费</strong>资格（有效期至 <strong>2099年12月31日 23:59:59</strong>），您需要将申请到的域名成功绑定到您的博客或其他网络服务，并为其配置有效的 SSL 证书。</p><p>请特别注意，HiDNS 严禁将免费域名用于任何非法或滥用行为，包括但不限于：</p><ul><li><strong>钓鱼网站</strong></li><li><strong>盗版内容分发</strong>（如影视资源、破解软件等）</li><li><strong>病毒或木马传播</strong></li><li><strong>发送垃圾邮件</strong></li></ul><p>违反规定的域名将被删除相关账户。</p><blockquote><p>官方公告详情：<a href="https://www.hidoha.net/news/important-update-on-hidns-free-domain-service">https://www.hidoha.net/news/important-update-on-hidns-free-domain-service</a></p></blockquote><hr><h2 id="注册账号"><a href="#注册账号" class="headerlink" title="注册账号"></a>注册账号</h2><ol><li>访问 <a href="https://www.hidoha.net/">HiDNS 官网</a>，点击右上角的 <a href="https://www.hidoha.net/signup">注册</a> 按钮，如实填写注册信息。</li><li>提交注册信息后，您将收到一封验证邮件，请点击邮件中的链接完成验证。</li></ol><hr><h2 id="申请域名"><a href="#申请域名" class="headerlink" title="申请域名"></a>申请域名</h2><ol><li><p>登录您的 HiDNS 账号，点击 <a href="https://www.hidoha.net/order?product=1">新订单</a>。<br><a href="https://杨幂的脚.dpdns.org/img/hidns/1-1.png"><img src="https://杨幂的脚.dpdns.org/img/hidns/1-1.png" alt="新订单"></a></p></li><li><p>填写你需要的域名前缀，选择后缀（如 <code>.hidns.co</code>、<code>.hidns.vip</code> 等），并点击 <strong>检查</strong> 按钮。<strong>未提示报错说明该域名未被占用</strong>。<br><a href="https://杨幂的脚.dpdns.org/img/hidns/1-2.png"><img src="https://杨幂的脚.dpdns.org/img/hidns/1-2.png" alt="检查"></a><br><a href="https://杨幂的脚.dpdns.org/img/hidns/1-2-2.png"><img src="https://杨幂的脚.dpdns.org/img/hidns/1-2-2.png" alt="下一步"></a></p></li><li><p>点击 <strong>去结算</strong>，然后<strong>直接关闭弹出的 PayPal 窗口</strong>。<br><a href="https://杨幂的脚.dpdns.org/img/hidns/1-3.png"><img src="https://杨幂的脚.dpdns.org/img/hidns/1-3.png" alt="去结算"></a></p></li><li><p>返回 <a href="https://www.hidoha.net/">HiDNS 主页</a>，即可看到<strong>最近的订单</strong>，进入您最近的订单点击<strong>提交工单</strong><br><a href="https://杨幂的脚.dpdns.org/img/hidns/1-4-1.png"><img src="https://杨幂的脚.dpdns.org/img/hidns/1-4-1.png" alt="最近的订单"></a><br><a href="https://杨幂的脚.dpdns.org/img/hidns/1-4-2.png"><img src="https://杨幂的脚.dpdns.org/img/hidns/1-4-2.png" alt="提交工单"></a></p><ul><li><p>主题：<code>申请免费域名</code></p></li><li><p>消息：</p></li></ul></li></ol>  <figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">尊敬的 HiDNS 团队：  </span><br><span class="line"></span><br><span class="line">我希望申请这个域名，  </span><br><span class="line"></span><br><span class="line">我承诺此域名将严格用于个人博客或其他合法的网络服务，  </span><br><span class="line">并且保证不会将其用于任何形式的滥用行为，包括但不限于钓鱼网站、影视资源、盗版内容分发、病毒或木马传播以及发送垃圾邮件等。  </span><br><span class="line"></span><br><span class="line">感谢您的审核与支持。  </span><br><span class="line"></span><br><span class="line">此致</span><br></pre></td></tr></table></figure><p><a href="https://杨幂的脚.dpdns.org/img/hidns/1-4-3.png"><img src="https://杨幂的脚.dpdns.org/img/hidns/1-4-3.png" alt="工单"></a></p><ol><li>等待审核，审核通过后，您将得到一个<strong>一年有效期的域名</strong>。<br><a href="https://杨幂的脚.dpdns.org/img/hidns/1-5-1.png"><img src="https://杨幂的脚.dpdns.org/img/hidns/1-5-1.png" alt="审核通过"></a></li><li><strong>重要提醒：域名审核通过后，您只有7天时间来激活永久资格！只需将域名连接到您的网站或博客，并添加安全证书(SSL)，即可自动升级为终身免费使用权限。</strong></li></ol><hr><h2 id="如何使用"><a href="#如何使用" class="headerlink" title="如何使用"></a>如何使用</h2><ul><li>可手动添加 <strong>CNAME 记录</strong>、<strong>A 记录</strong>等解析记录。<br><a href="https://杨幂的脚.dpdns.org/img/hidns/2-1.png"><img src="https://杨幂的脚.dpdns.org/img/hidns/2-1.png" alt="添加解析记录"></a></li></ul><hr>]]></content>
      
      
      <categories>
          
          <category> 服务器 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 域名 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>🚀 浏览器秒变SSH终端！WebSSH一键部署，随时随地连接服务器 💻📱</title>
      <link href="/fws/WebSSH%E4%B8%80%E9%94%AE%E9%83%A8%E7%BD%B2/"/>
      <url>/fws/WebSSH%E4%B8%80%E9%94%AE%E9%83%A8%E7%BD%B2/</url>
      
        <content type="html"><![CDATA[<h2 id="部署WebSSH"><a href="#部署WebSSH" class="headerlink" title="部署WebSSH"></a>部署WebSSH</h2><ul><li>无需客户端，<strong>随时随地在浏览器中使用 SSH 连接服务器</strong>。<strong>手机浏览器也可以</strong>使用，支持安卓和苹果手机。<br><a href="https://github.cmliussss.net/https://raw.githubusercontent.com/cmliu/webssh/refs/heads/master/Picture1.gif"><img src="https://github.cmliussss.net/https://raw.githubusercontent.com/cmliu/webssh/refs/heads/master/Picture1.gif" alt="WebSSH"></a></li></ul><hr><h2 id="事前准备"><a href="#事前准备" class="headerlink" title="事前准备"></a>事前准备</h2><ol><li>一个 <a href="https://console.run.claw.cloud/signin?link=1DFUAGF6JA6R">ClawCloudRun</a> 账号，<strong>推荐使用注册满180天以上的 Github 账号进行注册，每月赠送 $5 使用额度</strong>。</li><li>一个域名（非必须），推荐使用 <a href="https://cmliussss.com/p/hidns/">HiDNS 免费域名</a>。</li></ol><hr><h2 id="1-部署-WebSSH"><a href="#1-部署-WebSSH" class="headerlink" title="1. 部署 WebSSH"></a>1. 部署 WebSSH</h2><ol><li>登录 <a href="https://console.run.claw.cloud/signin?link=1DFUAGF6JA6R">ClawCloudRun</a>。<br><a href="https://杨幂的脚.dpdns.org/img/webssh/1-1.png"><img src="https://杨幂的脚.dpdns.org/img/webssh/1-1.png" alt="登录ClawCloudRun"></a></li><li>进入 <code>App Store</code> 后，找到 <code>WebSSH</code> 模板，点击 <code>Deploy App</code> 一键云部署。。</li></ol><p><a href="https://杨幂的脚.dpdns.org/img/webssh/1-2-1.png"><img src="https://杨幂的脚.dpdns.org/img/webssh/1-2-1.png" alt="一键云部署"></a><br><a href="https://杨幂的脚.dpdns.org/img/webssh/1-2-2.png"><img src="https://杨幂的脚.dpdns.org/img/webssh/1-2-2.png" alt="一键云部署"></a><br><a href="https://杨幂的脚.dpdns.org/img/webssh/1-2-3.png"><img src="https://杨幂的脚.dpdns.org/img/webssh/1-2-3.png" alt="一键云部署"></a><br><a href="https://杨幂的脚.dpdns.org/img/webssh/1-2-4.png"><img src="https://杨幂的脚.dpdns.org/img/webssh/1-2-4.png" alt="一键云部署"></a></p><blockquote><p>因为使用注册满180天以上的 Github 账号进行注册，<strong>每月赠送 $5 使用额度</strong>。<br>该容器每天的费用为 <strong>$0.02 美元</strong>，所以每个月只会使用 <strong>$0.6 美元</strong>，可以说根本用不完。</p></blockquote><ol><li>进入 <code>App Launchpad</code> 后，点击刚部署好的 <code>WebSSH</code> 进入容器管理页面，即可查看容器域名。<br><a href="https://杨幂的脚.dpdns.org/img/webssh/1-3-1.png"><img src="https://杨幂的脚.dpdns.org/img/webssh/1-3-1.png" alt="容器管理页面"></a><br><a href="https://杨幂的脚.dpdns.org/img/webssh/1-3-2.png"><img src="https://杨幂的脚.dpdns.org/img/webssh/1-3-2.png" alt="容器管理页面"></a><br><a href="https://杨幂的脚.dpdns.org/img/webssh/1-3-3.png"><img src="https://杨幂的脚.dpdns.org/img/webssh/1-3-3.png" alt="容器管理页面"></a></li><li>当域名左侧显示<strong>Accessible</strong>，说明SSL证书已准备好，可以直接通过访问<code>https://ileoboab.us-east-1.clawcloudrun.com</code>使用 WebSSH。<br><a href="https://杨幂的脚.dpdns.org/img/webssh/1-4-1.png"><img src="https://杨幂的脚.dpdns.org/img/webssh/1-4-1.png" alt="使用 WebSSH"></a></li></ol><blockquote><p>由于近期 ClawCloudRun 小水管经常出现问题，所以有可能出现SSL证书未准备好的情况，可能<strong>需要长时间的等待</strong>或者<strong>尝试换个时间段再重新部署</strong>试试。</p></blockquote><hr><h2 id="2-绑定自定义域名"><a href="#2-绑定自定义域名" class="headerlink" title="2. 绑定自定义域名"></a>2. 绑定自定义域名</h2><ul><li>可选操作，绑定自定义域名，方便记忆自用（这里推荐使用<strong>HiDNS免费域名</strong>，<a href="https://cmliussss.com/p/hidns/">注册图文教程</a>）。</li></ul><ol><li>进入 <code>WebSSH</code> 容器管理页面，点击 <code>Manage Network</code> 配置自定义域。<br><a href="https://杨幂的脚.dpdns.org/img/webssh/2-1-1.png"><img src="https://杨幂的脚.dpdns.org/img/webssh/2-1-1.png" alt="配置自定义域"></a></li><li>找到 <strong>Network</strong> 选项，点击 <code>Custom Domain</code> 添加自定义域名，复制保存 <strong>CNAME的值</strong> 备用。<br><a href="https://杨幂的脚.dpdns.org/img/webssh/2-2-1.png"><img src="https://杨幂的脚.dpdns.org/img/webssh/2-2-1.png" alt="添加自定义域名"></a><br><a href="https://杨幂的脚.dpdns.org/img/webssh/2-2-2.png"><img src="https://杨幂的脚.dpdns.org/img/webssh/2-2-2.png" alt="添加CNAME记录"></a></li><li>进入你的域名 DNS 控制台，添加 CNAME 记录。<ul><li>我这里就使用 HiDNS 的域名 <code>cmliussss.hidns.co</code> 进行演示。</li><li>记录类型选择 <strong>CNAME</strong>，主机记录填写 <code>ssh</code>，记录值填写 <strong>CNAME的值</strong>。<br><a href="https://杨幂的脚.dpdns.org/img/webssh/2-3-1.png"><img src="https://杨幂的脚.dpdns.org/img/webssh/2-3-1.png" alt="添加CNAME记录"></a></li></ul></li><li>返回 <strong>Custom Domain</strong> 填写 <code>ssh.cmliussss.hidns.co</code> 自定义域。<br><a href="https://杨幂的脚.dpdns.org/img/webssh/2-4-1.png"><img src="https://杨幂的脚.dpdns.org/img/webssh/2-4-1.png" alt="添加自定义域名"></a></li><li>确定自定义域填写成功后，返回右上角点击 <code>Update</code> 更新配置。<br><a href="https://杨幂的脚.dpdns.org/img/webssh/2-5-1.png"><img src="https://杨幂的脚.dpdns.org/img/webssh/2-5-1.png" alt="更新配置"></a><br><a href="https://杨幂的脚.dpdns.org/img/webssh/2-5-2.png"><img src="https://杨幂的脚.dpdns.org/img/webssh/2-5-2.png" alt="更新配置"></a><br><a href="https://杨幂的脚.dpdns.org/img/webssh/2-5-3.png"><img src="https://杨幂的脚.dpdns.org/img/webssh/2-5-3.png" alt="更新配置"></a></li><li>等待自定义域SSL证书准备完成即可直接使用 <code>ssh.cmliussss.hidns.co</code> 访问 WebSSH。<br><a href="https://杨幂的脚.dpdns.org/img/webssh/2-6-1.png"><img src="https://杨幂的脚.dpdns.org/img/webssh/2-6-1.png" alt="使用 WebSSH"></a></li></ol><hr><h2 id="3-如何更方便的使用-WebSSH"><a href="#3-如何更方便的使用-WebSSH" class="headerlink" title="3. 如何更方便的使用 WebSSH"></a>3. 如何更方便的使用 WebSSH</h2><ul><li>将<strong>WebSSH链接地址</strong>添加到浏览器收藏夹，方便下次直接访问。</li></ul><ol><li>先填写SSH的<code>主机地址</code>、<code>端口</code>、<code>用户名</code>和<code>密码</code>，点击 <code>连接</code> 确认参数填写正确，可以正常连接SSH后，点击 <code>生成链接</code>。<br><a href="https://杨幂的脚.dpdns.org/img/webssh/3-1-1.png"><img src="https://杨幂的脚.dpdns.org/img/webssh/3-1-1.png" alt="生成链接"></a></li><li>点击 <code>复制链接图标</code>，将链接地址直接在浏览器里打开，确定链接地址可以正常访问 SSH。<br><a href="https://杨幂的脚.dpdns.org/img/webssh/3-2-1.png"><img src="https://杨幂的脚.dpdns.org/img/webssh/3-2-1.png" alt="将链接地址直接在浏览器里打开"></a><br><a href="https://杨幂的脚.dpdns.org/img/webssh/3-2-2.png"><img src="https://杨幂的脚.dpdns.org/img/webssh/3-2-2.png" alt="正常访问 SSH"></a></li><li>添加到浏览器收藏夹，方便下次直接访问。<br><a href="https://杨幂的脚.dpdns.org/img/webssh/3-3-1.png"><img src="https://杨幂的脚.dpdns.org/img/webssh/3-3-1.png" alt="添加到浏览器收藏夹"></a><br><a href="https://杨幂的脚.dpdns.org/img/webssh/3-3-2.png"><img src="https://杨幂的脚.dpdns.org/img/webssh/3-3-2.png" alt="添加到浏览器收藏夹"></a></li><li>直接点击收藏夹的链接地址，即可直连该SSH，<strong>就是这么简单！！！</strong><br><a href="https://杨幂的脚.dpdns.org/img/webssh/3-4-1.gif"><img src="https://杨幂的脚.dpdns.org/img/webssh/3-4-1.gif" alt="直接点击收藏夹的链接地址"></a></li></ol><hr><h2 id="关于-IPv6"><a href="#关于-IPv6" class="headerlink" title="关于 IPv6"></a>关于 IPv6</h2><ul><li>关于 IPv6 的问题我也已给 ClawCloudRun 团队进行了反馈，ClawCloudRun 的答复是<strong>目前不支持IPv6</strong>，因此无法连接仅支持 IPv6 Only 的VPS。<br><a href="https://杨幂的脚.dpdns.org/img/webssh/ccr.png"><img src="https://杨幂的脚.dpdns.org/img/webssh/ccr.png" alt="关于 IPv6"></a></li><li><strong>若需连接IPv6 Only的VPS，可使用我提供的</strong><a href="https://ssh.cmliussss.net/">WebSSH</a>，此服务基于<a href="https://www.koyeb.com/">Koyeb容器</a>部署，而Koyeb容器是支持IPv6环境的。</li><li>你可以参考 <a href="https://www.kejiland.com/post/50664282.html">https://www.kejiland.com/post/50664282.html</a> 自行申请注册并部署。</li></ul><hr><h2 id="更多部署方法"><a href="#更多部署方法" class="headerlink" title="更多部署方法"></a>更多部署方法</h2><ul><li>查看 <a href="https://github.com/cmliu/webssh">https://github.com/cmliu/webssh</a> 项目说明，自行部署。</li></ul><hr>]]></content>
      
      
      <categories>
          
          <category> webssh </category>
          
      </categories>
      
      
        <tags>
            
            <tag> SSH </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Hello World</title>
      <link href="/fws/hello-world/"/>
      <url>/fws/hello-world/</url>
      
        <content type="html"><![CDATA[<iframe width="560" height="315" src="https://www.youtube.com/embed/dMEtHPwlcYg?si=st2e6ohHZ3i5P-5O" title="YouTube video player" frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share" referrerpolicy="strict-origin-when-cross-origin" allowfullscreen></iframe><p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">&quot;My New Post&quot;</span></span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>]]></content>
      
      
      
    </entry>
    
    
  
  
</search>
